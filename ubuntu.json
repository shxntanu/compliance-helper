[
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.1.1.1 Ensure cramfs kernel module is not available (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in \nsmall footprint systems. A cramfs image can be used without having to first \ndecompress the image.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the cramfs kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the cramfs kernel module is not available on the system, or pre-compiled into the \nkernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"cramfs\" \nl_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the cramfs module: \n- IF - the cramfs kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install cramfs /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist cramfs in the /etc/modprobe.d/ \ndirectory \n\u2022 \nRun modprobe -r cramfs 2>/dev/null; rmmod cramfs 2>/dev/null to \nremove cramfs from the kernel \n- IF - the cramfs kernel module is not available on the system, or pre-compiled into the \nkernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"cramfs\" l_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7 \n2. STIG Finding ID: V-230498",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000 \nTA0005 \nM1050"
    },
    {
        "Title": "1.1.1.2 Ensure freevxfs kernel module is not available \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the \nprimary filesystem type for HP-UX operating systems.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the freevxfs kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the freevxfs kernel module is not available on the system, or pre-compiled into \nthe kernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"freevxfs\" \nl_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the freevxfs module: \n- IF - the freevxfs kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install freevxfs /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist freevxfs in the \n/etc/modprobe.d/ directory \n\u2022 \nRun modprobe -r freevxfs 2>/dev/null; rmmod freevxfs 2>/dev/null \nto remove freevxfs from the kernel \n- IF - the freevxfs kernel module is not available on the system, or pre-compiled into \nthe kernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"freevxfs\" l_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000 \nTA0005 \nM1050"
    },
    {
        "Title": "1.1.1.3 Ensure hfs kernel module is not available (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS \nfilesystems.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the hfs kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the hfs kernel module is not available on the system, or pre-compiled into the \nkernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"hfs\" \nl_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the hfs module: \n- IF - the hfs kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install hfs /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist hfs in the /etc/modprobe.d/ \ndirectory \n\u2022 \nRun modprobe -r hfs 2>/dev/null; rmmod hfs 2>/dev/null to remove \nhfs from the kernel \n- IF - the hfs kernel module is not available on the system, or pre-compiled into the \nkernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"hfs\" l_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000 \nTA0005 \nM1050"
    },
    {
        "Title": "1.1.1.4 Ensure hfsplus kernel module is not available (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that \nallows you to mount Mac OS filesystems.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the hfsplus kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the hfsplus kernel module is not available on the system, or pre-compiled into the \nkernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"hfsplus\" \nl_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the hfsplus module: \n- IF - the hfsplus kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install hfsplus /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist hfsplus in the \n/etc/modprobe.d/ directory \n\u2022 \nRun modprobe -r hfsplus 2>/dev/null; rmmod hfsplus 2>/dev/null to \nremove hfsplus from the kernel \n- IF - the hfsplus kernel module is not available on the system, or pre-compiled into the \nkernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"hfsplus\" l_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000 \nTA0005 \nM1050"
    },
    {
        "Title": "1.1.1.5 Ensure jffs2 kernel module is not available (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem \nused in flash memory devices.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the jffs2 kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the jffs2 kernel module is not available on the system, or pre-compiled into the \nkernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"jffs2\" \nl_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the jffs2 module: \n- IF - the jffs2 kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install jffs2 /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist jffs2 in the /etc/modprobe.d/ \ndirectory \n\u2022 \nRun modprobe -r jffs2 2>/dev/null; rmmod jffs2 2>/dev/null to \nremove jffs2 from the kernel \n- IF - the jffs2 kernel module is not available on the system, or pre-compiled into the \nkernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"jffs2\" l_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000 \nTA0005 \nM1050"
    },
    {
        "Title": "1.1.1.6 Ensure overlayfs kernel module is not available \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "overlayfs is a Linux filesystem that layers multiple filesystems to create a single \nunified view which allows a user to \"merge\" several mount points into a unified \nfilesystem.",
        "Rationale": "The overlayfs has known CVE's: CVE-2023-32629, CVE-2023-2640, CVE-2023-\n0386. Disabling the overlayfs reduces the local attack surface by removing support for \nunnecessary filesystem types and mitigates potential risks associated with unauthorized \nexecution of setuid files, enhancing the overall system security. \nImpact: \nWARNING: If Container applications such as Docker, Kubernetes, Podman, Linux \nContainers (LXC), etc. are in use proceed with caution and consider the impact on \ncontainerized workloads, as disabling the overlayfs may severely disrupt \ncontainerization.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the overlayfs kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the overlayfs kernel module is not available on the system, or pre-compiled into \nthe kernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"overlayfs\" \nl_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the overlayfs module: \n- IF - the overlayfs kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install overlayfs /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist overlayfs in the \n/etc/modprobe.d/ directory \n\u2022 \nRun modprobe -r overlayfs 2>/dev/null; rmmod overlayfs \n2>/dev/null to remove overlayfs from the kernel \n- IF - the overlayfs kernel module is not available on the system, or pre-compiled into \nthe kernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"overlayfs\" l_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7 \n2. https://docs.kernel.org/filesystems/overlayfs.html \n3. https://wiki.archlinux.org/title/Overlay_filesystem \n4. https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=overlayfs",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000 \nTA0005 \nM1050"
    },
    {
        "Title": "1.1.1.7 Ensure squashfs kernel module is not available \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The squashfs filesystem type is a compressed read-only Linux filesystem embedded in \nsmall footprint systems. A squashfs image can be used without having to first \ndecompress the image.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it. \nImpact: \nAs Snap packages utilize squashfs as a compressed filesystem, disabling squashfs \nwill cause Snap packages to fail. \nSnap application packages of software are self-contained and work across a range of \nLinux distributions. This is unlike traditional Linux package management approaches, \nlike APT or RPM, which require specifically adapted packages per Linux distribution on \nan application update and delay therefore application deployment from developers to \ntheir software's end-user. Snaps themselves have no dependency on any external store \n(\"App store\"), can be obtained from any source and can be therefore used for upstream \nsoftware deployment.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the squashfs kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the squashfs kernel module is not available on the system, or pre-compiled into \nthe kernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"squashfs\" \nl_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n} \n \n \n \nNote: On operating systems where squashfs is pre-build into the kernel: \n\u2022 \nThis is considered an acceptable \"passing\" state \n\u2022 \nThe kernel should not be re-compiled to remove squashfs \n\u2022 \nThis audit will return a passing state with \"module: \"squashfs\" doesn't exist in ...\"",
        "Remediation": "Run the following script to unload and disable the udf module: \n- IF - the squashfs kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install squashfs /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist squashfs in the \n/etc/modprobe.d/ directory \n\u2022 \nRun modprobe -r squashfs 2>/dev/null; rmmod squashfs 2>/dev/null \nto remove squashfs from the kernel \n- IF - the squashfs kernel module is not available on the system, or pre-compiled into \nthe kernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"squashfs\" l_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000 \nTA0005 \nM1050"
    },
    {
        "Title": "1.1.1.8 Ensure udf kernel module is not available (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 \nand ECMA-167 specifications. This is an open vendor filesystem type for data storage \non a broad range of media. This filesystem type is necessary to support writing DVDs \nand newer optical disc formats.",
        "Rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it. \nImpact: \nMicrosoft Azure requires the usage of udf. \nudf should not be disabled on systems run on Microsoft Azure.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the udf kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the udf kernel module is not available on the system, or pre-compiled into the \nkernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"udf\" \nl_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the udf module: \n- IF - the udf kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install udf /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist udf in the /etc/modprobe.d/ \ndirectory \n\u2022 \nRun modprobe -r udf 2>/dev/null; rmmod udf 2>/dev/null to remove \nudf from the kernel \n- IF - the udf kernel module is not available on the system, or pre-compiled into the \nkernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"udf\" l_mod_type=\"fs\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000 \nTA0005 \nM1050"
    },
    {
        "Title": "1.1.1.9 Ensure usb-storage kernel module is not available \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 2 - Workstation",
        "Description": "USB storage provides a means to transfer and store files ensuring persistence and \navailability of the files independent of network connection status. Its popularity and utility \nhas led to USB-based malware being a simple and common means for network \ninfiltration and a first step to establishing a persistent threat within a networked \nenvironment.",
        "Rationale": "Restricting USB access on the system will decrease the physical attack surface for a \ndevice and diminish the possible vectors to introduce malware. \nImpact: \nDisabling the usb-storage module will disable any usage of USB storage devices. \nIf requirements and local site policy allow the use of such devices, other solutions \nshould be configured accordingly instead. One example of a commonly used solution is \nUSBGuard.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the usb-storage kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the usb-storage kernel module is not available on the system, or pre-compiled \ninto the kernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"usb-storage\" \nl_mod_type=\"drivers\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the usb-storage module: \n- IF - the usb-storage kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install usb-storage /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist usb-storage in the \n/etc/modprobe.d/ directory \n\u2022 \nRun modprobe -r usb-storage 2>/dev/null; rmmod usb-storage \n2>/dev/null to remove usb-storage from the kernel \n- IF - the usb-storage kernel module is not available on the system, or pre-compiled \ninto the kernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"usb-storage\" \nl_mod_type=\"drivers\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: SI-3 \n \nAdditional Information: \nAn alternative solution to disabling the usb-storage module may be found in USBGuard. \nUse of USBGuard and construction of USB device policies should be done in alignment \nwith site policy.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n10.3 Disable Autorun and Autoplay for Removable Media \n \nDisable autorun and autoplay auto-execute functionality for removable media. \n\u25cf \n\u25cf \n\u25cf \nv7 \n13.7 Manage USB Devices \n \nIf USB storage devices are required, enterprise software should be used that \ncan configure systems to allow the use of specific devices. An inventory of such \ndevices should be maintained. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1052, T1052.001, T1091, \nT1091.000, T1200, \nT1200.000 \nTA0001, TA0010 \nM1034"
    },
    {
        "Title": "1.1.1.10 Ensure unused filesystems kernel modules are not \navailable (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Filesystem kernel modules are pieces of code that can be dynamically loaded into the \nLinux kernel to extend its filesystem capabilities, or so-called base kernel, of an \noperating system. Filesystem kernel modules are typically used to add support for new \nhardware (as device drivers), or for adding system calls.",
        "Rationale": "While loadable filesystem kernel modules are a convenient method of modifying the \nrunning kernel, this can be abused by attackers on a compromised system to prevent \ndetection of their processes or files, allowing them to maintain control over the system. \nMany rootkits make use of loadable filesystem kernel modules in this way. \nRemoving support for unneeded filesystem types reduces the local attack surface of the \nsystem. If this filesystem type is not needed, disable it. The following filesystem kernel \nmodules have known CVE's and should be made unavailable if no dependencies exist: \n\u2022 \nafs - CVE-2022-37402 \n\u2022 \nceph - CVE-2022-0670 \n\u2022 \ncifs - CVE-2022-29869 \n\u2022 \nexfat CVE-2022-29973 \n\u2022 \next CVE-2022-1184 \n\u2022 \nfat CVE-2022-22043 \n\u2022 \nfscache CVE-2022-3630 \n\u2022 \nfuse CVE-2023-0386 \n\u2022 \ngfs2 CVE-2023-3212 \n\u2022 \nnfs_common CVE-2023-6660 \n\u2022 \nnfsd CVE-2022-43945 \n\u2022 \nsmbfs_common CVE-2022-2585 \nImpact: \nThis list may be quite extensive and covering all edges cases is difficult. Therefore, it's \ncrucial to carefully consider the implications and dependencies before making any \nchanges to the filesystem kernel module configurations.",
        "Impact": "",
        "Audit": "Run the following script to: \n\u2022 \nLook at the filesystem kernel modules available to the currently running kernel. \n\u2022 \nExclude mounted filesystem kernel modules that don't currently have a CVE \n\u2022 \nList filesystem kernel modules that are not fully disabled, or are loaded into the \nkernel \nReview the generated output \n \n#! /usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); a_modprope_config=(); a_excluded=(); a_available_modules=() \n   a_ignore=(\"xfs\" \"vfat\" \"ext2\" \"ext3\" \"ext4\") \n   a_cve_exists=(\"afs\" \"ceph\" \"cifs\" \"exfat\" \"ext\" \"fat\" \"fscache\" \"fuse\" \"gfs2\" \"nfs_common\" \n\"nfsd\" \"smbfs_common\") \n   f_module_chk() \n   { \n      l_out2=\"\"; grep -Pq -- \"\\b$l_mod_name\\b\" <<< \"${a_cve_exists[*]}\" && l_out2=\" <- CVE \nexists!\" \n      if ! grep -Pq -- '\\bblacklist\\h+'\"$l_mod_name\"'\\b' <<< \"${a_modprope_config[*]}\"; then \n         a_output2+=(\"  - Kernel module: \\\"$l_mod_name\\\" is not fully disabled $l_out2\") \n      elif ! grep -Pq -- '\\binstall\\h+'\"$l_mod_name\"'\\h+(\\/usr)?\\/bin\\/(false|true)\\b' <<< \n\"${a_modprope_config[*]}\"; then \n         a_output2+=(\"  - Kernel module: \\\"$l_mod_name\\\" is not fully disabled $l_out2\") \n      fi \n      if lsmod | grep \"$l_mod_name\" &> /dev/null; then # Check if the module is currently loaded \n         l_output2+=(\"  - Kernel module: \\\"$l_mod_name\\\" is loaded\" \"\") \n      fi \n   } \n   while IFS= read -r -d $'\\0' l_module_dir; do \n      a_available_modules+=(\"$(basename \"$l_module_dir\")\") \n   done < <(find \"$(readlink -f /lib/modules/\"$(uname -r)\"/kernel/fs)\" -mindepth 1 -maxdepth 1 -\ntype d ! -empty -print0) \n   while IFS= read -r l_exclude; do \n      if grep -Pq -- \"\\b$l_exclude\\b\" <<< \"${a_cve_exists[*]}\"; then \n         a_output2+=(\"  - ** WARNING: kernel module: \\\"$l_exclude\\\" has a CVE and is currently \nmounted! **\") \n      elif  \n         grep -Pq -- \"\\b$l_exclude\\b\" <<< \"${a_available_modules[*]}\"; then \n         a_output+=(\"  - Kernel module: \\\"$l_exclude\\\" is currently mounted - do NOT unload or \ndisable\") \n      fi \n      ! grep -Pq -- \"\\b$l_exclude\\b\" <<< \"${a_ignore[*]}\" && a_ignore+=(\"$l_exclude\") \n   done < <(findmnt -knD | awk '{print $2}' | sort -u) \n   while IFS= read -r l_config; do \n      a_modprope_config+=(\"$l_config\") \n   done < <(modprobe --showconfig | grep -P '^\\h*(blacklist|install)') \n   for l_mod_name in \"${a_available_modules[@]}\"; do # Iterate over all filesystem modules \n      [[ \"$l_mod_name\" =~ overlay ]] && l_mod_name=\"${l_mod_name::-2}\" \n      if grep -Pq -- \"\\b$l_mod_name\\b\" <<< \"${a_ignore[*]}\"; then \n         a_excluded+=(\" - Kernel module: \\\"$l_mod_name\\\"\") \n      else \n         f_module_chk \n      fi \n   done \n   [ \"${#a_excluded[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \\ \n   \"The following intentionally skipped\" \\ \n    \"${a_excluded[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"  - No unused filesystem kernel modules are enabled\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"-- Audit Result: --\" \"  ** REVIEW the following **\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"-- Correctly set: --\" \"${a_output[@]}\" \"\" \n   fi \n} \nWARNING: disabling or denylisting filesystem modules that are in use on the system \nmay be FATAL. It is extremely important to thoroughly review this list.",
        "Remediation": "- IF - the module is available in the running kernel: \n\u2022 \nUnload the filesystem kernel module from the kernel \n\u2022 \nCreate a file ending in .conf with install filesystem kernel modules /bin/false \nin the /etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with deny list filesystem kernel modules in the \n/etc/modprobe.d/ directory \nWARNING: unloading, disabling or denylisting filesystem modules that are in use on the \nsystem maybe FATAL. It is extremely important to thoroughly review the filesystems \nreturned by the audit before following the remediation procedure. \nExample of unloading the gfs2kernel module: \n# modprobe -r gfs2 2>/dev/null \n# rmmod gfs2 2>/dev/null \nExample of fully disabling the gfs2 kernel module: \n# printf '%s\\n' \"blacklist gfs2\" \"install gfs2 /bin/false\" >> \n/etc/modprobe.d/gfs2.conf \nNote: \n\u2022 \nDisabling a kernel module by modifying the command above for each unused \nfilesystem kernel module \n\u2022 \nThe example gfs2 must be updated with the appropriate module name for the \ncommand or example script bellow to run correctly. \nBelow is an example Script that can be modified to use on various filesystem \nkernel modules manual remediation process: \nExample Script \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=(); a_output3=(); l_dl=\"\" # Initialize arrays and clear \nvariables \n   l_mod_name=\"gfs2\" # set module name \n   l_mod_type=\"fs\" # set module type \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" # Set to ignore duplicate checks \n      a_showconfig=() # Create array with modprobe output \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_name\" &> /dev/null; then # Check if the module \nis currently loaded \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         echo -e \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=filesystem",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.1.2.1.1 Ensure /tmp is a separate partition (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /tmp directory is a world-writable directory used for temporary storage by all users \nand some applications. \n- IF - an entry for /tmp exists in /etc/fstab it will take precedence over entries in \nsystemd default unit file. \nNote: In an environment where the main system is diskless and connected to iSCSI, \nentries in /etc/fstab may not take precedence. \n/tmp can be configured to use tmpfs. \ntmpfs puts everything into the kernel internal caches and grows and shrinks to \naccommodate the files it contains and is able to swap unneeded pages out to swap \nspace. It has maximum size limits which can be adjusted on the fly via mount -o \nremount. \nSince tmpfs lives completely in the page cache and on swap, all tmpfs pages will be \nshown as \"Shmem\" in /proc/meminfo and \"Shared\" in free. Notice that these \ncounters also include shared memory. The most reliable way to get the count is using \ndf and du. \ntmpfs has three mount options for sizing: \n\u2022 \nsize: The limit of allocated bytes for this tmpfs instance. The default is half of \nyour physical RAM without swap. If you oversize your tmpfs instances the \nmachine will deadlock since the OOM handler will not be able to free that \nmemory. \n\u2022 \nnr_blocks: The same as size, but in blocks of PAGE_SIZE. \n\u2022 \nnr_inodes: The maximum number of inodes for this instance. The default is half \nof the number of your physical RAM pages, or (on a machine with highmem) the \nnumber of lowmem RAM pages, whichever is the lower. \nThese parameters accept a suffix k, m or g and can be changed on remount. The size \nparameter also accepts a suffix % to limit this tmpfs instance to that percentage of your \nphysical RAM. The default, when neither size nor nr_blocks is specified, is size=50%.",
        "Rationale": "Making /tmp its own file system allows an administrator to set additional mount options \nsuch as the noexec option on the mount, making /tmp useless for an attacker to install \nexecutable code. It would also prevent an attacker from establishing a hard link to a \nsystem setuid program and wait for it to be updated. Once the program was updated, \nthe hard link would be broken, and the attacker would have his own copy of the \nprogram. If the program happened to have a security vulnerability, the attacker could \ncontinue to exploit the known flaw. \nThis can be accomplished by either mounting tmpfs to /tmp, or creating a separate \npartition for /tmp. \nImpact: \nBy design files saved to /tmp should have no expectation of surviving a reboot of the \nsystem. tmpfs is ram based and all files stored to tmpfs will be lost when the system is \nrebooted. \nIf files need to be persistent through a reboot, they should be saved to /var/tmp not \n/tmp. \nSince the /tmp directory is intended to be world-writable, there is a risk of resource \nexhaustion if it is not bound to tmpfs or a separate partition. \nRunning out of /tmp space is a problem regardless of what kind of filesystem lies under \nit, but in a configuration where /tmp is not a separate file system it will essentially have \nthe whole disk available, as the default installation only creates a single / partition. On \nthe other hand, a RAM-based /tmp (as with tmpfs) will almost certainly be much \nsmaller, which can lead to applications filling up the filesystem much more easily. \nAnother alternative is to create a dedicated partition for /tmp from a separate volume or \ndisk. One of the downsides of a disk-based dedicated partition is that it will be slower \nthan tmpfs which is RAM-based.",
        "Impact": "",
        "Audit": "Run the following command and verify the output shows that /tmp is mounted. \nParticular requirements pertaining to mount options are covered in ensuing sections. \n# findmnt -kn /tmp \nExample output: \n/tmp   tmpfs  tmpfs  rw,nosuid,nodev,noexec \nEnsure that systemd will mount the /tmp partition at boot time. \n# systemctl is-enabled tmp.mount \nExample output: \ngenerated \nVerify output is not masked or disabled. \nNote: By default, systemd will output generated if there is an entry in /etc/fstab for \n/tmp. This just means systemd will use the entry in /etc/fstab instead of its default \nunit file configuration for /tmp.",
        "Remediation": "First ensure that systemd is correctly configured to ensure that /tmp will be mounted at \nboot time. \n# systemctl unmask tmp.mount \nFor specific configuration requirements of the /tmp mount for your environment, modify \n/etc/fstab. \nExample of using tmpfs with specific mount options: \ntmpfs \n/tmp \ntmpfs     defaults,rw,nosuid,nodev,noexec,relatime,size=2G  0 \n0 \nNote: the size=2G is an example of setting a specific size for tmpfs. \nExample of using a volume or disk with specific mount options. The source location of \nthe volume or disk will vary depending on your environment: \n<device> /tmp    <fstype>    defaults,nodev,nosuid,noexec   0 0",
        "References": "1. https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/ \n2. https://www.freedesktop.org/software/systemd/man/systemd-fstab-generator.html \n3. https://www.kernel.org/doc/Documentation/filesystems/tmpfs.txt \n4. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.001 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.1.2 Ensure nodev option set on /tmp partition (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /tmp filesystem is not intended to support devices, set this option to ensure \nthat users cannot create a block or character special devices in /tmp.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /tmp, verify that the nodev option is set. \nRun the following command to verify that the nodev mount option is set. \nExample: \n# findmnt -kn /tmp | grep -v nodev \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /tmp. \nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the \n/tmp partition. \nExample: \n<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /tmp with the configured options: \n# mount -o remount /tmp",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1200, T1200.000 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.1.3 Ensure nosuid option set on /tmp partition (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
        "Rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to \nensure that users cannot create setuid files in /tmp.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /tmp, verify that the nosuid option is set. \nRun the following command to verify that the nosuid mount option is set. \nExample: \n# findmnt -kn /tmp | grep -v nosuid \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /tmp. \nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the \n/tmp partition. \nExample: \n<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /tmp with the configured options: \n# mount -o remount /tmp",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.001 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.1.4 Ensure noexec option set on /tmp partition (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The noexec mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to \nensure that users cannot run executable binaries from /tmp. \nImpact: \nSetting the noexec option on /tmp may prevent installation and/or updating of some 3rd \nparty software.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /tmp, verify that the noexec option is set. \nRun the following command to verify that the noexec mount option is set. \nExample: \n# findmnt -kn /tmp | grep -v noexec \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /tmp. \nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the \n/tmp partition. \nExample: \n<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /tmp with the configured options: \n# mount -o remount /tmp",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1204, T1204.002 \nTA0005 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.1.2.2.1 Ensure /dev/shm is a separate partition (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /dev/shm directory is a world-writable directory that can function as shared \nmemory that facilitates inter process communication (IPC).",
        "Rationale": "Making /dev/shm its own file system allows an administrator to set additional mount \noptions such as the noexec option on the mount, making /dev/shm useless for an \nattacker to install executable code. It would also prevent an attacker from establishing a \nhard link to a system setuid program and wait for it to be updated. Once the program \nwas updated, the hard link would be broken and the attacker would have his own copy \nof the program. If the program happened to have a security vulnerability, the attacker \ncould continue to exploit the known flaw. \nThis can be accomplished by mounting tmpfs to /dev/shm. \nImpact: \nSince the /dev/shm directory is intended to be world-writable, there is a risk of resource \nexhaustion if it is not bound to a separate partition. \n/dev/shm utilizing tmpfs can be resized using the size={size} parameter in the \nrelevant entry in /etc/fstab.",
        "Impact": "",
        "Audit": "-IF- /dev/shm is to be used on the system, run the following command and verify the \noutput shows that /dev/shm is mounted. Particular requirements pertaining to mount \noptions are covered in ensuing sections. \n# findmnt -kn /dev/shm \nExample output: \n/dev/shm   tmpfs  tmpfs  rw,nosuid,nodev,noexec,relatime,seclabel",
        "Remediation": "For specific configuration requirements of the /dev/shm mount for your environment, \nmodify /etc/fstab. \nExample: \ntmpfs \n/dev/shm \ntmpfs     \ndefaults,rw,nosuid,nodev,noexec,relatime,size=2G  0 0",
        "References": "1. https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/ \n2. https://www.freedesktop.org/software/systemd/man/systemd-fstab-generator.html \n3. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.001 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.2.2 Ensure nodev option set on /dev/shm partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /dev/shm filesystem is not intended to support devices, set this option to \nensure that users cannot attempt to create special devices in /dev/shm partitions.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /dev/shm, verify that the nodev option is set. \n# findmnt -kn /dev/shm | grep -v 'nodev' \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /dev/shm. \nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the \n/dev/shm partition. See the fstab(5) manual page for more information. \nExample: \ntmpfs /dev/shm    tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /dev/shm with the configured options: \n# mount -o remount /dev/shm \nNote: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is \nused as shared memory space by applications.",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2 \n \nAdditional Information: \nSome distributions mount /dev/shm through other means and require /dev/shm to be \nadded to /etc/fstab even though it is already being mounted on boot. Others may \nconfigure /dev/shm in other locations and may override /etc/fstab configuration. \nConsult the documentation appropriate for your distribution.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1200, T1200.000 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.2.3 Ensure nosuid option set on /dev/shm partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
        "Rationale": "Setting this option on a file system prevents users from introducing privileged programs \nonto the system and allowing non-root users to execute them.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /dev/shm, verify that the nosuid option is set. \n# findmnt -kn /dev/shm | grep -v 'nosuid' \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /dev/shm. \nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the \n/dev/shm partition. See the fstab(5) manual page for more information. \nExample: \ntmpfs /dev/shm    tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /dev/shm with the configured options: \n# mount -o remount /dev/shm \nNote: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is \nused as shared memory space by applications.",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2 \nAdditional Information: \nSome distributions mount /dev/shm through other means and require /dev/shm to be \nadded to /etc/fstab even though it is already being mounted on boot. Others may \nconfigure /dev/shm in other locations and may override /etc/fstab configuration. \nConsult the documentation appropriate for your distribution.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.001 \nTA0005 \nM1038"
    },
    {
        "Title": "1.1.2.2.4 Ensure noexec option set on /dev/shm partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The noexec mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Setting this option on a file system prevents users from executing programs from shared \nmemory. This deters users from introducing potentially malicious software on the \nsystem.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /dev/shm, verify that the noexec option is set. \n# findmnt -kn /dev/shm | grep -v 'noexec' \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /dev/shm. \nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the \n/dev/shm partition. \nExample: \ntmpfs /dev/shm    tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /dev/shm with the configured options: \n# mount -o remount /dev/shm \nNote: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is \nused as shared memory space by applications.",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1204, T1204.002 \nTA0005 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.1.2.3.1 Ensure separate partition exists for /home (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The /home directory is used to support disk storage needs of local users.",
        "Rationale": "The default installation only creates a single / partition. Since the /home directory \ncontains user generated data, there is a risk of resource exhaustion. It will essentially \nhave the whole disk available to fill up and impact the system as a whole. In addition, \nother operations on the system could fill up the disk unrelated to /home and impact all \nlocal users. \nConfiguring /home as its own file system allows an administrator to set additional mount \noptions such as noexec/nosuid/nodev. These options limit an attacker's ability to \ncreate exploits on the system. In the case of /home options such as \nusrquota/grpquota may be considered to limit the impact that users can have on each \nother with regards to disk resource exhaustion. Other options allow for specific \nbehavior. See man mount for exact details regarding filesystem-independent and \nfilesystem-specific options. \nAs /home contains user data, care should be taken to ensure the security and integrity \nof the data and mount point. \nImpact: \nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem \npartitions may prevent successful resizing or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additional tools may \nintroduce their own security considerations.",
        "Impact": "",
        "Audit": "Run the following command and verify output shows /home is mounted: \n# findmnt -kn /home \n \n/home   /dev/sdb  ext4  rw,nosuid,nodev,noexec,relatime,seclabel",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /home. \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab as appropriate.",
        "References": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/ \n2. NIST SP 800-53 Rev. 5: CM-7 \nAdditional Information: \nWhen modifying /home it is advisable to bring the system to emergency mode (so auditd \nis not running), rename the existing directory, mount the new file system, and migrate \nthe data over before returning to multi-user mode.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.001 \nTA0005 \nM1038"
    },
    {
        "Title": "1.1.2.3.2 Ensure nodev option set on /home partition (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /home filesystem is not intended to support devices, set this option to ensure \nthat users cannot create a block or character special devices in /home.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /home, verify that the nodev option is set. \nRun the following command to verify that the nodev mount option is set. \nExample: \n# findmnt -kn /home | grep -v nodev \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /home. \nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the \n/home partition. \nExample: \n<device> /home    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /home with the configured options: \n# mount -o remount /home",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1200, T1200.000 \nTA0005 \nM1038"
    },
    {
        "Title": "1.1.2.3.3 Ensure nosuid option set on /home partition (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
        "Rationale": "Since the /home filesystem is only intended for user file storage, set this option to \nensure that users cannot create setuid files in /home.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /home, verify that the nosuid option is set. \nRun the following command to verify that the nosuid mount option is set. \nExample: \n# findmnt -kn /home | grep -v nosuid \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /home. \nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the \n/home partition. \nExample: \n<device> /home    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /home with the configured options: \n# mount -o remount /home",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.001 \nTA0005 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.1.2.4.1 Ensure separate partition exists for /var (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The /var directory is used by daemons and other system services to temporarily store \ndynamic data. Some directories created by these processes may be world-writable.",
        "Rationale": "The reasoning for mounting /var on a separate partition is as follows. \nThe default installation only creates a single / partition. Since the /var directory may \ncontain world writable files and directories, there is a risk of resource exhaustion. It will \nessentially have the whole disk available to fill up and impact the system. In addition, \nother operations on the system could fill up the disk unrelated to /var and cause \nunintended behavior across the system as the disk is full. See man auditd.conf for \ndetails. \nConfiguring /var as its own file system allows an administrator to set additional mount \noptions such as noexec/nosuid/nodev. These options limit an attacker's ability to \ncreate exploits on the system. Other options allow for specific behavior. See man mount \nfor exact details regarding filesystem-independent and filesystem-specific options. \nAn example of exploiting /var may be an attacker establishing a hard-link to a system \nsetuid program and waiting for it to be updated. Once the program is updated, the \nhard-link can be broken and the attacker would have their own copy of the program. If \nthe program happened to have a security vulnerability, the attacker could continue to \nexploit the known flaw. \nImpact: \nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem \npartitions may prevent successful resizing or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additional tools may \nintroduce their own security considerations.",
        "Impact": "",
        "Audit": "Run the following command and verify output shows /var is mounted. \nExample: \n# findmnt -kn /var \n \n/var  /dev/sdb  ext4   rw,nosuid,nodev,noexec,relatime,seclabel",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var. \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab as appropriate.",
        "References": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/ \n2. NIST SP 800-53 Rev. 5: CM-7 \nAdditional Information: \nWhen modifying /var it is advisable to bring the system to emergency mode (so auditd \nis not running), rename the existing directory, mount the new file system, and migrate \nthe data over before returning to multi-user mode.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.001 \nTA0006 \nM1022"
    },
    {
        "Title": "1.1.2.4.2 Ensure nodev option set on /var partition (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var filesystem is not intended to support devices, set this option to ensure \nthat users cannot create a block or character special devices in /var.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var, verify that the nodev option is set. \nRun the following command to verify that the nodev mount option is set. \nExample: \n# findmnt -kn /var | grep -v nodev \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var. \nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the \n/var partition. \nExample: \n<device> /var    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /var with the configured options: \n# mount -o remount /var",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1200, T1200.000 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.4.3 Ensure nosuid option set on /var partition (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
        "Rationale": "Since the /var filesystem is only intended for variable files such as logs, set this option \nto ensure that users cannot create setuid files in /var.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var, verify that the nosuid option is set. \nRun the following command to verify that the nosuid mount option is set. \nExample: \n# findmnt -kn /var | grep -v nosuid \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var. \nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the \n/var partition. \nExample: \n<device> /var    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /var with the configured options: \n# mount -o remount /var",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.001 \nTA0005 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.1.2.5.1 Ensure separate partition exists for /var/tmp \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The /var/tmp directory is a world-writable directory used for temporary storage by all \nusers and some applications. Temporary files residing in /var/tmp are to be preserved \nbetween reboots.",
        "Rationale": "The default installation only creates a single / partition. Since the /var/tmp directory is \nworld-writable, there is a risk of resource exhaustion. In addition, other operations on \nthe system could fill up the disk unrelated to /var/tmp and cause potential disruption to \ndaemons as the disk is full. \nConfiguring /var/tmp as its own file system allows an administrator to set additional \nmount options such as noexec/nosuid/nodev. These options limit an attacker's ability \nto create exploits on the system. \nImpact: \nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem \npartitions may prevent successful resizing or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additional tools may \nintroduce their own security considerations.",
        "Impact": "",
        "Audit": "Run the following command and verify output shows /var/tmp is mounted. \nExample: \n# findmnt -kn /var/tmp \n \n/var/tmp   /dev/sdb ext4   rw,nosuid,nodev,noexec,relatime,seclabel",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var/tmp. \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab as appropriate.",
        "References": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/ \n2. NIST SP 800-53 Rev. 5: CM-7 \nAdditional Information: \nWhen modifying /var/tmp it is advisable to bring the system to emergency mode (so \nauditd is not running), rename the existing directory, mount the new file system, and \nmigrate the data over before returning to multi-user mode.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.001 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.5.2 Ensure nodev option set on /var/tmp partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var/tmp filesystem is not intended to support devices, set this option to \nensure that users cannot create a block or character special devices in /var/tmp.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var/tmp, verify that the nodev option is set. \nRun the following command to verify that the nodev mount option is set. \nExample: \n# findmnt -kn /var/tmp | grep -v nodev \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var/tmp. \nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the \n/var/tmp partition. \nExample: \n<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/tmp with the configured options: \n# mount -o remount /var/tmp",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.001 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.5.3 Ensure nosuid option set on /var/tmp partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
        "Rationale": "Since the /var/tmp filesystem is only intended for temporary file storage, set this option \nto ensure that users cannot create setuid files in /var/tmp.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var/tmp, verify that the nosuid option is set. \nRun the following command to verify that the nosuid mount option is set. \nExample: \n# findmnt -kn /var/tmp | grep -v nosuid \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var/tmp. \nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the \n/var/tmp partition. \nExample: \n<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/tmp with the configured options: \n# mount -o remount /var/tmp",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.001 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.5.4 Ensure noexec option set on /var/tmp partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The noexec mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /var/tmp filesystem is only intended for temporary file storage, set this option \nto ensure that users cannot run executable binaries from /var/tmp.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var/tmp, verify that the noexec option is set. \nRun the following command to verify that the noexec mount option is set. \nExample: \n# findmnt -kn /var/tmp | grep -v noexec \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var/tmp. \nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the \n/var/tmp partition. \nExample: \n<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/tmp with the configured options: \n# mount -o remount /var/tmp",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1204, T1204.002 \nTA0005 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.1.2.6.1 Ensure separate partition exists for /var/log (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The /var/log directory is used by system services to store log data.",
        "Rationale": "The default installation only creates a single / partition. Since the /var/log directory \ncontains log files which can grow quite large, there is a risk of resource exhaustion. It \nwill essentially have the whole disk available to fill up and impact the system as a whole. \nConfiguring /var/log as its own file system allows an administrator to set additional \nmount options such as noexec/nosuid/nodev. These options limit an attackers ability \nto create exploits on the system. Other options allow for specific behavior. See man \nmount for exact details regarding filesystem-independent and filesystem-specific \noptions. \nAs /var/log contains log files, care should be taken to ensure the security and integrity \nof the data and mount point. \nImpact: \nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem \npartitions may prevent successful resizing, or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additional tools may \nintroduce their own security considerations.",
        "Impact": "",
        "Audit": "Run the following command and verify output shows /var/log is mounted: \n# findmnt -kn /var/log \n \n/var/log /dev/sdb ext4   rw,nosuid,nodev,noexec,relatime,seclabel",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var/log . \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab as appropriate.",
        "References": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/ \n2. NIST SP 800-53 Rev. 5: CM-7 \nAdditional Information: \nWhen modifying /var/log it is advisable to bring the system to emergency mode (so \nauditd is not running), rename the existing directory, mount the new file system, and \nmigrate the data over before returning to multiuser mode.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with \nthe enterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.4 Ensure adequate storage for logs \n \nEnsure that all systems that store logs have adequate storage space for the \nlogs generated. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.001 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.6.2 Ensure nodev option set on /var/log partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var/log filesystem is not intended to support devices, set this option to \nensure that users cannot create a block or character special devices in /var/log.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var/log, verify that the nodev option is set. \nRun the following command to verify that the nodev mount option is set. \nExample: \n# findmnt -kn /var/log | grep -v nodev \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var/log. \nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the \n/var/log partition. \nExample: \n<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/log with the configured options: \n# mount -o remount /var/log",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1200, T1200.000 \nTA0005 \nM1038"
    },
    {
        "Title": "1.1.2.6.3 Ensure nosuid option set on /var/log partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
        "Rationale": "Since the /var/log filesystem is only intended for log files, set this option to ensure \nthat users cannot create setuid files in /var/log.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var/log, verify that the nosuid option is set. \nRun the following command to verify that the nosuid mount option is set. \nExample: \n# findmnt -kn /var/log | grep -v nosuid \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var/log. \nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the \n/var/log partition. \nExample: \n<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/log with the configured options: \n# mount -o remount /var/log",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.001 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.6.4 Ensure noexec option set on /var/log partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The noexec mount option specifies that the filesystem cannot contain executable \nbinaries.",
        "Rationale": "Since the /var/log filesystem is only intended for log files, set this option to ensure \nthat users cannot run executable binaries from /var/log.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var/log, verify that the noexec option is set. \nRun the following command to verify that the noexec mount option is set. \nExample: \n# findmnt -kn /var/log | grep -v noexec \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var/log. \nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the \n/var/log partition. \nExample: \n<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 \n0 \nRun the following command to remount /var/log with the configured options: \n# mount -o remount /var/log",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1204, T1204.002 \nTA0005 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.1.2.7.1 Ensure separate partition exists for /var/log/audit \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The auditing daemon, auditd, stores log data in the /var/log/audit directory.",
        "Rationale": "The default installation only creates a single / partition. Since the /var/log/audit \ndirectory contains the audit.log file which can grow quite large, there is a risk of \nresource exhaustion. It will essentially have the whole disk available to fill up and impact \nthe system as a whole. In addition, other operations on the system could fill up the disk \nunrelated to /var/log/audit and cause auditd to trigger its space_left_action as \nthe disk is full. See man auditd.conf for details. \nConfiguring /var/log/audit as its own file system allows an administrator to set \nadditional mount options such as noexec/nosuid/nodev. These options limit an \nattacker's ability to create exploits on the system. Other options allow for specific \nbehavior. See man mount for exact details regarding filesystem-independent and \nfilesystem-specific options. \nAs /var/log/audit contains audit logs, care should be taken to ensure the security \nand integrity of the data and mount point. \nImpact: \nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem \npartitions may prevent successful resizing or may require the installation of additional \ntools solely for the purpose of resizing operations. The use of these additional tools may \nintroduce their own security considerations.",
        "Impact": "",
        "Audit": "Run the following command and verify output shows /var/log/audit is mounted: \n# findmnt -kn /var/log/audit \n \n/var/log/audit /dev/sdb ext4   rw,nosuid,nodev,noexec,relatime,seclabel",
        "Remediation": "For new installations, during installation create a custom partition setup and specify a \nseparate partition for /var/log/audit. \nFor systems that were previously installed, create a new partition and configure \n/etc/fstab as appropriate.",
        "References": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/ \n2. NIST SP 800-53 Rev. 5: CM-7 \nAdditional Information: \nWhen modifying /var/log/audit it is advisable to bring the system to emergency \nmode (so auditd is not running), rename the existing directory, mount the new file \nsystem, and migrate the data over before returning to multi-user mode.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with \nthe enterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.4 Ensure adequate storage for logs \n \nEnsure that all systems that store logs have adequate storage space for the \nlogs generated. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.001 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.7.2 Ensure nodev option set on /var/log/audit partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "Rationale": "Since the /var/log/audit filesystem is not intended to support devices, set this option \nto ensure that users cannot create a block or character special devices in \n/var/log/audit.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var/log/audit, verify that the nodev option is set. \nRun the following command to verify that the nodev mount option is set. \nExample: \n# findmnt -kn /var/log/audit | grep -v nodev \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var/log/audit. \nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the \n/var/log/audit partition. \nExample: \n<device> /var/log/audit    <fstype>     \ndefaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /var/log/audit with the configured options: \n# mount -o remount /var/log/audit",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1200, T1200.000 \nTA0005 \nM1022"
    },
    {
        "Title": "1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
        "Rationale": "Since the /var/log/audit filesystem is only intended for variable files such as logs, \nset this option to ensure that users cannot create setuid files in /var/log/audit.",
        "Impact": "",
        "Audit": "- IF - a separate partition exists for /var/log/audit, verify that the nosuid option is \nset. \nRun the following command to verify that the nosuid mount option is set. \nExample: \n# findmnt -kn /var/log/audit | grep -v nosuid \n \nNothing should be returned",
        "Remediation": "- IF - a separate partition exists for /var/log/audit. \nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the \n/var/log/audit partition. \nExample: \n<device> /var/log/audit    <fstype>     \ndefaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /var/log/audit with the configured options: \n# mount -o remount /var/log/audit",
        "References": "1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.001 \nTA0005 \nM1022 \n \n1.1.2.7.4 Ensure noexec option set on /var/log/audit partition \n(Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nThe noexec mount option specifies that the filesystem cannot contain executable \nbinaries. \nRationale: \nSince the /var/log/audit filesystem is only intended for audit logs, set this option to \nensure that users cannot run executable binaries from /var/log/audit. \nAudit: \n- IF - a separate partition exists for /var/log/audit, verify that the noexec option is \nset. \nRun the following command to verify that the noexec mount option is set. \nExample: \n# findmnt -kn /var/log/audit | grep -v noexec \n \nNothing should be returned \nRemediation: \n- IF - a separate partition exists for /var/log/audit. \nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the \n/var/log/audit partition. \nExample: \n<device> /var/log/audit    <fstype>     \ndefaults,rw,nosuid,nodev,noexec,relatime  0 0 \nRun the following command to remount /var/log/audit with the configured options: \n# mount -o remount /var/log/audit \nReferences: \n1. See the fstab(5) manual page for more information. \n2. NIST SP 800-53 Rev. 5: AC-3, MP-2 \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1204, T1204.002 \nTA0005 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.2.1.1 Ensure GPG keys are configured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Most package managers implement GPG key signing to verify package integrity during \ninstallation.",
        "Rationale": "It is important to ensure that updates are obtained from a valid source to protect against \nspoofing that could lead to the inadvertent installation of malware on the system.",
        "Impact": "",
        "Audit": "Verify GPG keys are configured correctly for your package manager: \n# apt-key list \nNote: \n\u2022 \napt-key list is deprecated. Manage keyring files in trusted.gpg.d instead \n(see apt-key(8)). \n\u2022 \nWith the deprecation of apt-key it is recommended to use the Signed-By option \nin sources.list to require a repository to pass apt-secure(8) verification with a \ncertain set of keys rather than all trusted keys apt has configured. \n- OR - \n1. Run the following script and verify GPG keys are configured correctly for your \npackage manager: \n#! /usr/bin/env bash \n \n{ \n   for file in /etc/apt/trusted.gpg.d/*.{gpg,asc} \n/etc/apt/sources.list.d/*.{gpg,asc} ; do \n      if [ -f \"$file\" ]; then \n         echo -e \"File: $file\" \n         gpg --list-packets \"$file\" 2>/dev/null | awk '/keyid/ && \n!seen[$NF]++ {print \"keyid:\", $NF}' \n         gpg --list-packets \"$file\" 2>/dev/null | awk '/Signed-By:/ {print \n\"signed-by:\", $NF}' \n         echo -e \n      fi \n   done \n} \n \n2. REVIEW and VERIFY to ensure that GPG keys are configured correctly for your \npackage manager IAW site policy.",
        "Remediation": "Update your package manager GPG keys in accordance with site policy.",
        "References": "1. NIST SP 800-53 Rev. 5: SI-2 \n2. https://manpages.debian.org/stretch/apt/sources.list.5.en.html",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1195, T1195.001, \nT1195.002 \nTA0001 \nM1051"
    },
    {
        "Title": "1.2.1.2 Ensure package manager repositories are configured \n(Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Systems need to have package manager repositories configured to ensure they receive \nthe latest patches and updates.",
        "Rationale": "If a system's package repositories are misconfigured important patches may not be \nidentified or a rogue repository could introduce compromised software.",
        "Impact": "",
        "Audit": "Run the following command and verify package repositories are configured correctly: \n# apt-cache policy",
        "Remediation": "Configure your package manager repositories according to site policy.",
        "References": "1. NIST SP 800-53 Rev. 5: SI-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1195, T1195.001, \nT1195.002 \nTA0001 \nM1051"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.2.2.1 Ensure updates, patches, and additional security software \nare installed (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Periodically patches are released for included software either due to security flaws or to \ninclude additional functionality.",
        "Rationale": "Newer patches may contain security enhancements that would not be available through \nthe latest full update. As a result, it is recommended that the latest software patches be \nused to take advantage of the latest functionality. As with any software installation, \norganizations need to determine if a given update meets their requirements and verify \nthe compatibility and supportability of any additional software against the update \nrevision that is selected.",
        "Impact": "",
        "Audit": "Verify there are no updates or patches to install: \n# apt update \n# apt -s upgrade",
        "Remediation": "Run the following command to update all packages following local site policy guidance \non applying updates and patches: \n# apt update \n \n# apt upgrade \n  - OR - \n# apt dist-upgrade",
        "References": "1. NIST SP 800-53 Rev. 5: SI-2 \n \n \n \nAdditional Information: \nSite policy may mandate a testing period before installation onto production systems for \navailable updates. \n\u2022 \nupgrade - is used to install the newest versions of all packages currently installed \non the system from the sources enumerated in /etc/apt/sources.list - OR - \n/etc/apt/sources.list.d/ubuntu.sources. Packages currently installed with \nnew versions available are retrieved and upgraded; under no circumstances are \ncurrently installed packages removed, or packages not already installed retrieved \nand installed. New versions of currently installed packages that cannot be \nupgraded without changing the install status of another package will be left at \ntheir current version. An update must be performed first so that apt knows that \nnew versions of packages are available. \n\u2022 \ndist-upgrade - in addition to performing the function of upgrade, also intelligently \nhandles changing dependencies with new versions of packages; apt has a \n\"smart\" conflict resolution system, and it will attempt to upgrade the most \nimportant packages at the expense of less important ones if necessary. So, dist-\nupgrade command may remove some packages. The /etc/apt/sources.list \n- OR - /etc/apt/sources.list.d/ubuntu.sources file contains a list of \nlocations from which to retrieve desired package files. See also \napt_preferences(5) for a mechanism for overriding the general settings for \nindividual packages.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1195, T1195.001 \nTA0005 \nM1051"
    },
    {
        "Title": "1.3 Mandatory Access Control \nMandatory Access Control (MAC) provides an additional layer of access restrictions to \nprocesses on top of the base Discretionary Access Controls. By restricting how \nprocesses can access files and resources on a system the potential impact from \nvulnerabilities in the processes can be reduced. \nImpact: Mandatory Access Control limits the capabilities of applications and daemons \non a system, while this can prevent unauthorized access the configuration of MAC can \nbe complex and difficult to implement correctly preventing legitimate access from \noccurring. \n \n1.3.1 Configure AppArmor \nAppArmor provides a Mandatory Access Control (MAC) system that greatly augments \nthe default Discretionary Access Control (DAC) model. Under AppArmor MAC rules are \napplied by file paths instead of by security contexts as in other MAC systems. As such it \ndoes not require support in the filesystem and can be applied to network mounted \nfilesystems for example. AppArmor security policies define what system resources \napplications can access and what privileges they can do so with. This automatically \nlimits the damage that the software can do to files accessible by the calling user. The \nuser does not need to take any action to gain this benefit. For an action to occur, both \nthe traditional DAC permissions must be satisfied as well as the AppArmor MAC rules. \nThe action will not be allowed if either one of these models does not permit the action. \nIn this way, AppArmor rules can only make a system's permissions more restrictive and \nsecure.",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "1. AppArmor Documentation: http://wiki.apparmor.net/index.php/Documentation  \n2. Ubuntu AppArmor Documentation: https://help.ubuntu.com/community/AppArmor  \n3. SUSE AppArmor Documentation: \nhttps://www.suse.com/documentation/apparmor/",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.3.1.1 Ensure AppArmor is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "AppArmor provides Mandatory Access Controls.",
        "Rationale": "Without a Mandatory Access Control system installed only the default Discretionary \nAccess Control system will be available.",
        "Impact": "",
        "Audit": "Run the following command to verify that apparmor is installed: \n# dpkg-query -s apparmor &>/dev/null && echo \"apparmor is installed\"  \n \napparmor is installed \nRun the following command to verify that apparmor-utils is installed: \n# dpkg-query -s apparmor-utils &>/dev/null && echo \"apparmor-utils is \ninstalled\"  \n \napparmor-utils is installed",
        "Remediation": "Install AppArmor. \n# apt install apparmor apparmor-utils",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1068, T1068.000, T1565, \nT1565.001, T1565.003 \nTA0003 \nM1026"
    },
    {
        "Title": "1.3.1.2 Ensure AppArmor is enabled in the bootloader \nconfiguration (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Configure AppArmor to be enabled at boot time and verify that it has not been \noverwritten by the bootloader boot parameters. \nNote: This recommendation is designed around the grub bootloader, if LILO or another \nbootloader is in use in your environment enact equivalent settings.",
        "Rationale": "AppArmor must be enabled at boot time in your bootloader configuration to ensure that \nthe controls it provides are not overridden.",
        "Impact": "",
        "Audit": "Run the following command to verify that all linux lines have the apparmor=1 \nparameter set: \n# grep \"^\\s*linux\" /boot/grub/grub.cfg | grep -v \"apparmor=1\" \nNothing should be returned. \nRun the following command to verify that all linux lines have the security=apparmor \nparameter set: \n# grep \"^\\s*linux\" /boot/grub/grub.cfg | grep -v \"security=apparmor\" \nNothing should be returned.",
        "Remediation": "Edit /etc/default/grub and add the apparmor=1 and security=apparmor \nparameters to the GRUB_CMDLINE_LINUX= line \nGRUB_CMDLINE_LINUX=\"apparmor=1 security=apparmor\" \nRun the following command to update the grub2 configuration: \n# update-grub",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1068, T1068.000, T1565, \nT1565.001, T1565.003 \nTA0003 \nM1026"
    },
    {
        "Title": "1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain \nmode (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "AppArmor profiles define what resources applications are able to access.",
        "Rationale": "Security configuration requirements vary from site to site. Some sites may mandate a \npolicy that is stricter than the default policy, which is perfectly acceptable. This item is \nintended to ensure that any policies that exist on the system are activated.",
        "Impact": "",
        "Audit": "Run the following command and verify that profiles are loaded, and are in either enforce \nor complain mode: \n# apparmor_status | grep profiles \nReview output and ensure that profiles are loaded, and in either enforce or complain \nmode: \n37 profiles are loaded. \n35 profiles are in enforce mode. \n2 profiles are in complain mode. \n4 processes have profiles defined. \nRun the following command and verify no processes are unconfined \n# apparmor_status | grep processes \nReview the output and ensure no processes are unconfined: \n4 processes have profiles defined. \n4 processes are in enforce mode. \n0 processes are in complain mode. \n0 processes are unconfined but have a profile defined.",
        "Remediation": "Run the following command to set all profiles to enforce mode: \n# aa-enforce /etc/apparmor.d/* \n- OR - \nRun the following command to set all profiles to complain mode: \n# aa-complain /etc/apparmor.d/* \nNote: Any unconfined processes may need to have a profile created or activated for \nthem and then be restarted.",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1497 \nTA0005"
    },
    {
        "Title": "1.3.1.4 Ensure all AppArmor Profiles are enforcing (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "AppArmor profiles define what resources applications are able to access.",
        "Rationale": "Security configuration requirements vary from site to site. Some sites may mandate a \npolicy that is stricter than the default policy, which is perfectly acceptable. This item is \nintended to ensure that any policies that exist on the system are activated.",
        "Impact": "",
        "Audit": "Run the following commands and verify that profiles are loaded and are not in complain \nmode: \n# apparmor_status | grep profiles \nReview output and ensure that profiles are loaded, and in enforce mode: \n34 profiles are loaded. \n34 profiles are in enforce mode. \n0 profiles are in complain mode. \n2 processes have profiles defined. \nRun the following command and verify that no processes are unconfined: \napparmor_status | grep processes \nReview the output and ensure no processes are unconfined: \n2 processes have profiles defined. \n2 processes are in enforce mode. \n0 processes are in complain mode. \n0 processes are unconfined but have a profile defined.",
        "Remediation": "Run the following command to set all profiles to enforce mode: \n# aa-enforce /etc/apparmor.d/* \nNote: Any unconfined processes may need to have a profile created or activated for \nthem and then be restarted",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1068, T1068.000, T1565, \nT1565.001, T1565.003 \nTA0005 \nM1048"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.4.1 Ensure bootloader password is set (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Setting the boot loader password will require that anyone rebooting the system must \nenter a password before being able to set command line boot parameters",
        "Rationale": "Requiring a boot password upon execution of the boot loader will prevent an \nunauthorized user from entering boot parameters or changing the boot partition. This \nprevents users from weakening security (e.g. turning off AppArmor at boot time). \nImpact: \nIf password protection is enabled, only the designated superuser can edit a GRUB 2 \nmenu item by pressing \"e\" or access the GRUB 2 command line by pressing \"c\" \nIf GRUB 2 is set up to boot automatically to a password-protected menu entry the user \nhas no option to back out of the password prompt to select another menu entry. Holding \nthe SHIFT key will not display the menu in this case. The user must enter the correct \nusername and password. If unable to do so, the configuration files will have to be edited \nvia a LiveCD or other means to fix the problem \nYou can add --unrestricted to the menu entries to allow the system to boot without \nentering a password. A password will still be required to edit menu items. \nMore Information: https://help.ubuntu.com/community/Grub2/Passwords",
        "Impact": "",
        "Audit": "Run the following commands and verify output matches: \n# grep \"^set superusers\" /boot/grub/grub.cfg \n \nset superusers=\"<username>\" \n# awk -F. '/^\\s*password/ {print $1\".\"$2\".\"$3}' /boot/grub/grub.cfg \n \npassword_pbkdf2 <username> grub.pbkdf2.sha512",
        "Remediation": "Create an encrypted password with grub-mkpasswd-pbkdf2: \n# grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64 \n \nEnter password: <password> \nReenter password: <password> \nPBKDF2 hash of your password is <encrypted-password> \nAdd the following into a custom /etc/grub.d configuration file: \ncat <<EOF \nexec tail -n +2 $0 \nset superusers=\"<username>\" \npassword_pbkdf2 <username> <encrypted-password> \nEOF \nThe superuser/user information and password should not be contained in the \n/etc/grub.d/00_header file as this file could be overwritten in a package update. \nIf there is a requirement to be able to boot/reboot without entering the password, edit \n/etc/grub.d/10_linux and add --unrestricted to the line CLASS= \nExample: \nCLASS=\"--class gnu-linux --class gnu --class os --unrestricted\" \nRun the following command to update the grub2 configuration: \n# update-grub \nDefault Value: \nThis recommendation is designed around the grub bootloader, if LILO or another \nbootloader is in use in your environment enact equivalent settings. \nReplace /boot/grub/grub.cfg with the appropriate grub configuration file for your \nenvironment.",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3 \nAdditional Information: \nChanges to /etc/grub.d/10_linux may be overwritten during updates to the grub-\ncommon package. You should review any changes to this file before rebooting otherwise \nthe system may unexpectedly prompt for a password on the next boot.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1542, T1542.000 \nTA0003 \nM1046"
    },
    {
        "Title": "1.4.2 Ensure access to bootloader config is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The grub configuration file contains information on boot settings and passwords for \nunlocking boot options.",
        "Rationale": "Setting the permissions to read and write for root only prevents non-root users from \nseeing the boot parameters or changing them. Non-root users who read the boot \nparameters may be able to identify weaknesses in security upon boot and be able to \nexploit them.",
        "Impact": "",
        "Audit": "Run the following command and verify Uid and Gid are both 0/root and Access is \n0600 or more restrictive. \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: ( %g/ %G)' \n/boot/grub/grub.cfg \n \nAccess: (0600/-rw-------)  Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "Run the following commands to set permissions on your grub configuration: \n# chown root:root /boot/grub/grub.cfg \n# chmod u-x,go-rwx /boot/grub/grub.cfg \nDefault Value: \nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3 \n \n \n \nAdditional Information: \nThis recommendation is designed around the grub bootloader, if LILO or another \nbootloader is in use in your environment enact equivalent settings. \nReplace /boot/grub/grub.cfg with the appropriate grub configuration file for your \nenvironment",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1542, T1542.000 \nTA0005, TA0007 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.5.1 Ensure address space layout randomization is enabled \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Address space layout randomization (ASLR) is an exploit mitigation technique which \nrandomly arranges the address space of key data areas of a process.",
        "Rationale": "Randomly placing virtual memory regions will make it difficult to write memory page \nexploits as the memory placement will be consistently shifting.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameter is set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nkernel.randomize_va_space is set to 2 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); a_parlist=(kernel.randomize_va_space=2) \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      f_kernel_parameter_chk \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nkernel.randomize_va_space = 2 \nExample: \n# printf \"%s\\n\" \"kernel.randomize_va_space = 2\" >> /etc/sysctl.d/60-\nkernel_sysctl.conf \nRun the following command to set the active kernel parameter: \n# sysctl -w kernel.randomize_va_space=2 \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nkernel.randomize_va_space = 2",
        "References": "1. http://manpages.ubuntu.com/manpages/focal/man5/sysctl.d.5.html \n2. CCI-000366: The organization implements the security configuration settings \n3. NIST SP 800-53 Rev. 5: CM-6",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n10.5 Enable Anti-Exploitation Features \n \nEnable anti-exploitation features on enterprise assets and software, where \npossible, such as Microsoft\u00ae Data Execution Prevention (DEP), Windows\u00ae \nDefender Exploit Guard (WDEG), or Apple\u00ae System Integrity Protection (SIP) and \nGatekeeper\u2122. \n \n\u25cf \n\u25cf \nv7 \n8.3 Enable Operating System Anti-Exploitation Features/ \nDeploy Anti-Exploit Technologies \n \nEnable anti-exploitation features such as Data Execution Prevention (DEP) or \nAddress Space Layout Randomization (ASLR) that are available in an operating \nsystem or deploy appropriate toolkits that can be configured to apply protection to a \nbroader set of applications and executables. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1068, T1068.000 \nTA0002 \nM1050"
    },
    {
        "Title": "1.5.2 Ensure ptrace_scope is restricted (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The ptrace() system call provides a means by which one process (the \"tracer\") may \nobserve and control the execution of another process (the \"tracee\"), and examine and \nchange the tracee's memory and registers. \nThe sysctl settings (writable only with CAP_SYS_PTRACE) are: \n\u2022 \n0 - classic ptrace permissions: a process can PTRACE_ATTACH to any other \nprocess running under the same uid, as long as it is dumpable (i.e. did not \ntransition uids, start privileged, or have called prctl(PR_SET_DUMPABLE...) \nalready). Similarly, PTRACE_TRACEME is unchanged. \n\u2022 \n1 - restricted ptrace: a process must have a predefined relationship with the \ninferior it wants to call PTRACE_ATTACH on. By default, this relationship is that \nof only its descendants when the above classic criteria is also met. To change \nthe relationship, an inferior can call prctl(PR_SET_PTRACER, debugger, ...) to \ndeclare an allowed debugger PID to call PTRACE_ATTACH on the inferior. \nUsing PTRACE_TRACEME is unchanged. \n\u2022 \n2 - admin-only attach: only processes with CAP_SYS_PTRACE may use ptrace \nwith PTRACE_ATTACH, or through children calling PTRACE_TRACEME. \n\u2022 \n3 - no attach: no processes may use ptrace with PTRACE_ATTACH nor via \nPTRACE_TRACEME. Once set, this sysctl value cannot be changed.",
        "Rationale": "If one application is compromised, it would be possible for an attacker to attach to other \nrunning processes (e.g. Bash, Firefox, SSH sessions, GPG agent, etc) to extract \nadditional credentials and continue to expand the scope of their attack. \nEnabling restricted mode will limit the ability of a compromised process to \nPTRACE_ATTACH on other processes running under the same user. With restricted \nmode, ptrace will continue to work with root user.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameter is set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nkernel.yama.ptrace_scope is set to a value of: 1, 2, or 3 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); a_parlist=(\"kernel.yama.ptrace_scope=(1|2|3)\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      f_kernel_parameter_chk \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the kernel.yama.ptrace_scope parameter in /etc/sysctl.conf or a file in \n/etc/sysctl.d/ ending in .conf to a value of 1, 2, or 3: \nkernel.yama.ptrace_scope = 1 \n    - OR - \nkernel.yama.ptrace_scope = 2 \n    - OR - \nkernel.yama.ptrace_scope = 3 \nExample: \n# printf \"%s\\n\" \"kernel.yama.ptrace_scope = 1\" >> /etc/sysctl.d/60-\nkernel_sysctl.conf \nRun the following command to set the active kernel parameter: \n# sysctl -w kernel.yama.ptrace_scope=1 \nNote: \n\u2022 \nIf a value of 2 or 3 is preferred, or required by local site policy, replace the 1 with \nthe desired value of 2 or 3 in the example above \n\u2022 \nIf this setting appears in a canonically later file, or later in the same file, the \nsetting will be overwritten \n \nDefault Value: \nkernel.yama.ptrace_scope = 0",
        "References": "1. https://www.kernel.org/doc/Documentation/security/Yama.txt \n2. https://github.com/raj3shp/termspy \n3. NIST SP 800-53 Rev. 5: CM-6 \nAdditional Information: \nPtrace is very rarely used by regular applications and is mostly used by debuggers such \nas gdb and strace.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1055, T1055.008 \nTA0005 \nM1040"
    },
    {
        "Title": "1.5.3 Ensure core dumps are restricted (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "A core dump is the memory of an executable program. It is generally used to determine \nwhy a program aborted. It can also be used to glean confidential information from a core \nfile. The system provides the ability to set a soft limit for core dumps, but this can be \noverridden by the user.",
        "Rationale": "Setting a hard limit on core dumps prevents users from overriding the soft variable. If \ncore dumps are required, consider setting limits for user groups (see limits.conf(5) \n). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs \nfrom dumping core.",
        "Impact": "",
        "Audit": "Run the following command and verify output matches: \n# grep -Ps -- '^\\h*\\*\\h+hard\\h+core\\h+0\\b' /etc/security/limits.conf \n/etc/security/limits.d/* \n \n* hard core 0 \nRun the following script to verify fs.suid_dumpable = 0: \nRun the following script to verify the following kernel parameter is set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nfs.suid_dumpable is set to 0 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); a_parlist=(\"fs.suid_dumpable=0\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      f_kernel_parameter_chk \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n} \nRun the following command to check if systemd-coredump is installed: \n# systemctl list-unit-files | grep coredump \nif anything is returned systemd-coredump is installed",
        "Remediation": "Add the following line to /etc/security/limits.conf or a \n/etc/security/limits.d/* file: \n* hard core 0 \nSet the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nfs.suid_dumpable = 0 \nExample: \n# printf \"\\n%s\" \"fs.suid_dumpable = 0\" >> /etc/sysctl.d/60-fs_sysctl.conf \nRun the following command to set the active kernel parameter: \n# sysctl -w fs.suid_dumpable=0 \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \n-IF- systemd-coredump is installed: \nedit /etc/systemd/coredump.conf and add/modify the following lines: \nStorage=none \nProcessSizeMax=0 \nRun the command: \nsystemctl daemon-reload",
        "References": "1. NIST SP 800-53 Rev. 5: CM-6 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000 \nTA0007 \nM1057",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.5.4 Ensure prelink is not installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "prelink is a program that modifies ELF shared libraries and ELF dynamically linked \nbinaries in such a way that the time needed for the dynamic linker to perform relocations \nat startup significantly decreases.",
        "Rationale": "The prelinking feature can interfere with the operation of AIDE, because it changes \nbinaries. Prelinking can also increase the vulnerability of the system if a malicious user \nis able to compromise a common library such as libc.",
        "Impact": "",
        "Audit": "Verify prelink is not installed: \n# dpkg-query -s prelink &>/dev/null && echo \"prelink is installed\"  \nNothing should be returned.",
        "Remediation": "Run the following command to restore binaries to normal: \n# prelink -ua \nUninstall prelink using the appropriate package manager or manual installation: \n# apt purge prelink",
        "References": "1. NIST SP 800-53 Rev. 5: CM-6, CM-1, CM-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.14 Log Sensitive Data Access \n \nLog sensitive data access, including modification and disposal.  \n \n \n\u25cf \nv7 \n14.9 Enforce Detail Logging for Access or Changes to \nSensitive Data \n \nEnforce detailed audit logging for access to sensitive data or changes to \nsensitive data (utilizing tools such as File Integrity Monitoring or Security \nInformation and Event Monitoring). \n \n \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1055, T1055.009, T1065, \nT1065.001 \nTA0002 \nM1050"
    },
    {
        "Title": "1.5.5 Ensure Automatic Error Reporting is not enabled \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The Apport Error Reporting Service automatically generates crash reports for \ndebugging",
        "Rationale": "Apport collects potentially sensitive data, such as core dumps, stack traces, and log \nfiles. They can contain passwords, credit card numbers, serial numbers, and other \nprivate material.",
        "Impact": "",
        "Audit": "Run the following command to verify that the Apport Error Reporting Service is not \nenabled: \n#  dpkg-query -s apport &> /dev/null && grep -Psi -- \n'^\\h*enabled\\h*=\\h*[^0]\\b' /etc/default/apport \nNothing should be returned \nRun the following command to verify that the apport service is not active: \n# systemctl is-active apport.service | grep '^active' \nNothing should be returned",
        "Remediation": "Edit /etc/default/apport and add or edit the enabled parameter to equal 0: \nenabled=0 \nRun the following commands to stop and mask the apport service \n# systemctl stop apport.service \n# systemctl mask apport.service \n- OR - \nRun the following command to remove the apport package: \n# apt purge apport \nDefault Value: \nenabled=1",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.6.1 Ensure message of the day is configured properly \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The contents of the /etc/motd file are displayed to users after login and function as a \nmessage of the day for authenticated users. \nUnix-based systems have typically displayed information about the OS release and \npatch level upon logging in to the system. This information can be useful to developers \nwho are developing software for a particular OS platform. If mingetty(8) supports the \nfollowing options, they display operating system information: \\m - machine architecture \n\\r - operating system release \\s - operating system name \\v - operating system \nversion",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place. Displaying OS and patch level \ninformation in login banners also has the side effect of providing detailed system \ninformation to attackers attempting to target specific exploits of a system. Authorized \nusers can easily get this information by running the \" uname -a \" command once they \nhave logged in.",
        "Impact": "",
        "Audit": "Run the following command and verify that the contents match site policy: \n# cat /etc/motd \nRun the following command and verify no results are returned: \n# grep -E -i \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|$(grep '^ID=' /etc/os-release | cut -d= -\nf2 | sed -e 's/\"//g'))\" /etc/motd",
        "Remediation": "Edit the /etc/motd file with the appropriate contents according to your site policy, \nremove any instances of \\m , \\r , \\s , \\v or references to the OS platform \n- OR - \n- IF - the motd is not used, this file can be removed. \nRun the following command to remove the motd file: \n# rm /etc/motd",
        "References": "1. NIST SP 800-53 Rev. 5: CM-6, CM-1, CM-3 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1082, T1082.000, T1592, \nT1592.004 \nTA0007",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.6.2 Ensure local login warning banner is configured properly \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The contents of the /etc/issue file are displayed to users prior to login for local \nterminals. \nUnix-based systems have typically displayed information about the OS release and \npatch level upon logging in to the system. This information can be useful to developers \nwho are developing software for a particular OS platform. If mingetty(8) supports the \nfollowing options, they display operating system information: \\m - machine architecture \n\\r - operating system release \\s - operating system name \\v - operating system \nversion - or the operating system's name",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place. Displaying OS and patch level \ninformation in login banners also has the side effect of providing detailed system \ninformation to attackers attempting to target specific exploits of a system. Authorized \nusers can easily get this information by running the \" uname -a \" command once they \nhave logged in.",
        "Impact": "",
        "Audit": "Run the following command and verify that the contents match site policy: \n# cat /etc/issue \nRun the following command and verify no results are returned: \n# grep -E -i \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|$(grep '^ID=' /etc/os-release | cut -d= -\nf2 | sed -e 's/\"//g'))\" /etc/issue",
        "Remediation": "Edit the /etc/issue file with the appropriate contents according to your site policy, \nremove any instances of \\m , \\r , \\s , \\v or references to the OS platform \nExample: \n# echo \"Authorized users only. All activity may be monitored and reported.\" > \n/etc/issue",
        "References": "1. NIST SP 800-53 Rev. 5: CM-6, CM-1, CM-3 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1082, T1082.000, T1592, \nT1592.004 \nTA0007",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.6.3 Ensure remote login warning banner is configured properly \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The contents of the /etc/issue.net file are displayed to users prior to login for remote \nconnections from configured services. \nUnix-based systems have typically displayed information about the OS release and \npatch level upon logging in to the system. This information can be useful to developers \nwho are developing software for a particular OS platform. If mingetty(8) supports the \nfollowing options, they display operating system information: \\m - machine architecture \n\\r - operating system release \\s - operating system name \\v - operating system \nversion",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place. Displaying OS and patch level \ninformation in login banners also has the side effect of providing detailed system \ninformation to attackers attempting to target specific exploits of a system. Authorized \nusers can easily get this information by running the \" uname -a \" command once they \nhave logged in.",
        "Impact": "",
        "Audit": "Run the following command and verify that the contents match site policy: \n# cat /etc/issue.net \nRun the following command and verify no results are returned: \n# grep -E -i \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|$(grep '^ID=' /etc/os-release | cut -d= -\nf2 | sed -e 's/\"//g'))\" /etc/issue.net",
        "Remediation": "Edit the /etc/issue.net file with the appropriate contents according to your site policy, \nremove any instances of \\m , \\r , \\s , \\v or references to the OS platform \nExample: \n# echo \"Authorized users only. All activity may be monitored and reported.\" > \n/etc/issue.net",
        "References": "1. NIST SP 800-53 Rev. 5: CM-6, CM-1, CM-3 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1018, T1018.000, T1082, \nT1082.000, T1592, \nT1592.004 \nTA0007",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.6.4 Ensure access to /etc/motd is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The contents of the /etc/motd file are displayed to users after login and function as a \nmessage of the day for authenticated users.",
        "Rationale": "- IF - the /etc/motd file does not have the correct access configured, it could be \nmodified by unauthorized users with incorrect or misleading information.",
        "Impact": "",
        "Audit": "Run the following command and verify that if /etc/motd exists, Access is 644 or more \nrestrictive, Uid and Gid are both 0/root: \n# [ -e /etc/motd ] && stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: { %g/ \n%G)' /etc/motd \n \nAccess: (0644/-rw-r--r--)  Uid: ( 0/ root) Gid: ( 0/ root) \n  -- OR -- \nNothing is returned",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/motd: \n# chown root:root $(readlink -e /etc/motd) \n# chmod u-x,go-wx $(readlink -e /etc/motd) \n- OR - \nRun the following command to remove the /etc/motd file: \n# rm /etc/motd",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1222, T1222.002 \nTA0005 \nM1022 \n \n1.6.5 Ensure access to /etc/issue is configured (Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nThe contents of the /etc/issue file are displayed to users prior to login for local \nterminals. \nRationale: \n- IF - the /etc/issue file does not have the correct access configured, it could be \nmodified by unauthorized users with incorrect or misleading information. \nAudit: \nRun the following command and verify Access is 644 or more restrictive and Uid and \nGid are both 0/root: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: { %g/ %G)' /etc/issue \n \nAccess: (0644/-rw-r--r--)  Uid: ( 0/ root) Gid: { 0/ root) \nRemediation: \nRun the following commands to set mode, owner, and group on /etc/issue: \n# chown root:root $(readlink -e /etc/issue) \n# chmod u-x,go-wx $(readlink -e /etc/issue) \nDefault Value: \nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root) \nReferences: \n1. NIST SP 800-53 Rev. 5: AC-3, MP-2 \n \n \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1222, T1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "1.6.6 Ensure access to /etc/issue.net is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The contents of the /etc/issue.net file are displayed to users prior to login for remote \nconnections from configured services.",
        "Rationale": "- IF - the /etc/issue.net file does not have the correct access configured, it could be \nmodified by unauthorized users with incorrect or misleading information.",
        "Impact": "",
        "Audit": "Run the following command and verify Access is 644 or more restrictive and Uid and \nGid are both 0/root: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: { %g/ %G)' /etc/issue.net \n \nAccess: (0644/-rw-r--r--)  Uid: ( 0/ root)   Gid: ( 0/ root)",
        "Remediation": "Run the following commands to set mode, owner, and group on /etc/issue.net: \n# chown root:root $(readlink -e /etc/issue.net) \n# chmod u-x,go-wx $(readlink -e /etc/issue.net) \nDefault Value: \nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1222, T1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.7.1 Ensure GDM is removed (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server",
        "Description": "The GNOME Display Manager (GDM) is a program that manages graphical display \nservers and handles graphical user logins.",
        "Rationale": "If a Graphical User Interface (GUI) is not required, it should be removed to reduce the \nattack surface of the system. \nImpact: \nRemoving the GNOME Display manager will remove the Graphical User Interface (GUI) \nfrom the system.",
        "Impact": "",
        "Audit": "Run the following command and verify gdm3 is not installed: \n# dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' gdm3 \n \ngdm3       unknown ok not-installed        not-installed",
        "Remediation": "Run the following commands to uninstall gdm3 and remove unused dependencies: \n# apt purge gdm3 \n# apt autoremove gdm3",
        "References": "1. NIST SP 800-53 Rev. 5: CM-11",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1543, T1543.002 \nTA0002 \nM1033"
    },
    {
        "Title": "1.7.2 Ensure GDM login banner is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "GDM is the GNOME Display Manager which handles graphical login for GNOME based \nsystems.",
        "Rationale": "Warning messages inform users who are attempting to login to the system of their legal \nstatus regarding the system and must include the name of the organization that owns \nthe system and any monitoring policies that are in place.",
        "Impact": "",
        "Audit": "Run the following commands to verify that the text banner on the login screen is \nenabled and set: \n# gsettings get org.gnome.login-screen banner-message-enable  \ntrue \n# gsettings get org.gnome.login-screen banner-message-text  \n'Authorized uses only. All activity may be monitored and reported'",
        "Remediation": "- IF - A user profile is already created run the following commands to set and enable the \ntext banner message on the login screen: \n# gsettings set org.gnome.login-screen banner-message-text 'Authorized uses \nonly. All activity may be monitored and reported' \n# gsettings set org.gnome.login-screen banner-message-enable true \nNote: \n\u2022 \nbanner-message-text may be set in accordance with local site policy \n\u2022 \ngsettings commands in this section MUST be done from a command window \non a graphical desktop or an error will be returned. \n\u2022 \nThe system must be restarted after all gsettings configurations have been set \nin order for CIS-CAT Assessor to appropriately assess. \n- OR/IF - A user profile does not exist: \n1. Create or edit the gdm profile in the /etc/dconf/profile/gdm with the following \nlines: \nuser-db:user \nsystem-db:gdm \nfile-db:/usr/share/gdm/greeter-dconf-defaults \nNote: gdm is the name of a dconf database. \n \n2. Create a gdm keyfile for machine-wide settings in /etc/dconf/db/gdm.d/01-\nbanner-message: \n[org/gnome/login-screen] \nbanner-message-enable=true \nbanner-message-text='Type the banner message here.' \n \n3. Update the system databases \n# dconf update \nNote: \n\u2022 \nUsers must log out and back in again before the system-wide settings take effect. \n\u2022 \nThere is no character limit for the banner message. gnome-shell autodetects \nlonger stretches of text and enters two column mode. \n\u2022 \nThe banner message cannot be read from an external file. \n \nDefault Value: \ndisabled",
        "References": "1. https://help.gnome.org/admin/system-admin-guide/stable/login-banner.html.en \n2. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nAdditional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner-\nmessage file. \nIf a different GUI login service is in use, consult your documentation and apply an \nequivalent banner. \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.002, T1078.003, \nT1087, T1087.001, \nT1087.002 \nTA0007 \nM1028",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.7.3 Ensure GDM disable-user-list option is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "GDM is the GNOME Display Manager which handles graphical login for GNOME based \nsystems. \nThe disable-user-list option controls if a list of users is displayed on the login \nscreen",
        "Rationale": "Displaying the user list eliminates half of the Userid/Password equation that an \nunauthorized person would need to log on.",
        "Impact": "",
        "Audit": "Run the following command and to verify that the disable-user-list option is \nenabled: \n# gsettings get org.gnome.login-screen disable-user-list \ntrue",
        "Remediation": "- IF - A user profile exists run the following command to enable the disable-user-\nlist: \n# gsettings set org.gnome.login-screen disable-user-list true \nNote: \n\u2022 \ngsettings commands in this section MUST be done from a command window \non a graphical desktop or an error will be returned. \n\u2022 \nThe system must be restarted after all gsettings configurations have been set \nin order for CIS-CAT Assessor to appropriately assess. \n- OR/IF - A user profile does not exist: \n1. Create or edit the gdm profile in /etc/dconf/profile/gdm with the following \nlines: \nuser-db:user \nsystem-db:gdm \nfile-db:/usr/share/gdm/greeter-dconf-defaults \nNote: gdm is the name of a dconf database. \n \n2. Create a gdm keyfile for machine-wide settings in /etc/dconf/db/gdm.d/00-\nlogin-screen: \n[org/gnome/login-screen] \n# Do not show the user list \ndisable-user-list=true \n \n3. Update the system databases: \n# dconf update \nNote: When the user profile is created or changed, the user will need to log out and log \nin again before the changes will be applied. \nDefault Value: \nfalse",
        "References": "1. https://help.gnome.org/admin/system-admin-guide/stable/login-userlist-\ndisable.html.en \n2. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nIf a different GUI login service is in use and required on the system, consult your \ndocumentation to disable displaying the user list \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.002, T1078.003, \nT1087, T1087.001, \nT1087.002 \nTA0007 \nM1028",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.7.4 Ensure GDM screen locks when the user is idle \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "GNOME Desktop Manager can make the screen lock automatically whenever the user \nis idle for some amount of time.",
        "Rationale": "Setting a lock-out value reduces the window of opportunity for unauthorized user access \nto another user's session that has been left unattended.",
        "Impact": "",
        "Audit": "Run the following commands to verify that the screen locks when the user is idle: \n# gsettings get org.gnome.desktop.screensaver lock-delay \nuint32 5 \n# gsettings get org.gnome.desktop.session idle-delay \nuint32 900 \nNotes: \n\u2022 \nlock-delay=uint32 {n} - should be 5 seconds or less and follow local site \npolicy \n\u2022 \nidle-delay=uint32 {n} - Should be 900 seconds (15 minutes) or less, not 0 \n(disabled) and follow local site policy",
        "Remediation": "- IF - A user profile is already created run the following commands to enable screen \nlocks when the user is idle: \n# gsettings set org.gnome.desktop.screensaver lock-delay 5 \n# gsettings set org.gnome.desktop.session idle-delay 900 \nNote: \n\u2022 \ngsettings commands in this section MUST be done from a command window \non a graphical desktop or an error will be returned. \n\u2022 \nThe system must be restarted after all gsettings configurations have been set \nin order for CIS-CAT Assessor to appropriately assess. \n- OR/IF- A user profile does not exist: \n1. Create or edit the user profile in the /etc/dconf/profile/ and verify it includes \nthe following: \nuser-db:user \nsystem-db:{NAME_OF_DCONF_DATABASE} \nNote: local is the name of a dconf database used in the examples. \n2. Create the directory /etc/dconf/db/local.d/ if it doesn't already exist: \n3. Create the key file /etc/dconf/db/local.d/00-screensaver to provide \ninformation for the local database: \nExample key file: \n# Specify the dconf path \n[org/gnome/desktop/session] \n \n# Number of seconds of inactivity before the screen goes blank \n# Set to 0 seconds if you want to deactivate the screensaver. \nidle-delay=uint32 180 \n \n# Specify the dconf path \n[org/gnome/desktop/screensaver] \n \n# Number of seconds after the screen is blank before locking the screen \nlock-delay=uint32 0 \nNote: You must include the uint32 along with the integer key values as shown. \n4. Run the following command to update the system databases: \n# dconf update \n5. Users must log out and back in again before the system-wide settings take effect.",
        "References": "1. https://help.gnome.org/admin/system-admin-guide/stable/desktop-\nlockscreen.html.en",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.3 Configure Automatic Session Locking on Enterprise \nAssets \n \nConfigure automatic session locking on enterprise assets after a defined period \nof inactivity. For general purpose operating systems, the period must not exceed \n15 minutes. For mobile end-user devices, the period must not exceed 2 minutes. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1461 \nTA0027 \nM1012"
    },
    {
        "Title": "1.7.5 Ensure GDM screen locks cannot be overridden \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "GNOME Desktop Manager can lock down specific settings by using the lockdown mode \nin dconf to prevent users from changing specific settings. \nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. \nThe files inside this directory contain a list of keys or subpaths to lock. Just as with the \nkeyfiles, you may add any number of files to this directory.",
        "Rationale": "Setting a lock-out value reduces the window of opportunity for unauthorized user access \nto another user's session that has been left unattended. \nWithout locking down the system settings, user settings take precedence over the \nsystem settings.",
        "Impact": "",
        "Audit": "Run the following script to verify that the screen lock cannot be overridden: \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() \n   f_check_setting()  \n   { \n      grep -Psrilq -- \"^\\h*$2\\b\" /etc/dconf/db/local.d/locks/* && \\ \n      echo \"- \\\"$3\\\" is locked\" || echo \"- \\\"$3\\\" is not locked or not set\" \n   } \n   declare -A settings=( \n      [\"idle-delay\"]=\"/org/gnome/desktop/session/idle-delay\" \n      [\"lock-delay\"]=\"/org/gnome/desktop/screensaver/lock-delay\" \n   ) \n   for setting in \"${!settings[@]}\"; do \n      result=$(f_check_setting \"$setting\" \"${settings[$setting]}\" \"$setting\") \n      if [[ $result == *\"is not locked\"* || $result == *\"not set to false\"* \n]]; then \n         a_output2+=(\"$result\") \n      else \n         a_output+=(\"$result\") \n      fi \n   done \n   printf '%s\\n' \"\" \"- Audit Result:\" \n   if [ \"${#a_output2[@]}\" -gt 0 ]; then \n      printf '%s\\n' \"  ** FAIL **\" \" - Reason(s) for audit failure:\" \n\"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \n   else \n      printf '%s\\n' \"  ** PASS **\" \"${a_output[@]}\" \n   fi \n}",
        "Remediation": "1. To prevent the user from overriding these settings, create the file \n/etc/dconf/db/local.d/locks/00-screensaver with the following content: \n# Lock desktop screensaver settings \n/org/gnome/desktop/session/idle-delay \n/org/gnome/desktop/screensaver/lock-delay \n2. Update the system databases: \n# dconf update \nNote: \n\u2022 \nA user profile must exist in order to apply locks. \n\u2022 \nUsers must log out and back in again before the system-wide settings take effect.",
        "References": "1. https://help.gnome.org/admin/system-admin-guide/stable/desktop-\nlockscreen.html.en \n2. https://help.gnome.org/admin/system-admin-guide/stable/dconf-lockdown.html.en \n3. NIST SP 800-53 Rev. 5: CM-11",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.3 Configure Automatic Session Locking on Enterprise \nAssets \n \nConfigure automatic session locking on enterprise assets after a defined period \nof inactivity. For general purpose operating systems, the period must not exceed \n15 minutes. For mobile end-user devices, the period must not exceed 2 minutes. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1456 \nTA0027 \nM1001"
    },
    {
        "Title": "1.7.6 Ensure GDM automatic mounting of removable media is \ndisabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 2 - Workstation",
        "Description": "By default GNOME automatically mounts removable media when inserted as a \nconvenience to the user.",
        "Rationale": "With automounting enabled anyone with physical access could attach a USB drive or \ndisc and have its contents available in system even if they lacked permissions to mount \nit themselves. \nImpact: \nThe use of portable hard drives is very common for workstation users. If your \norganization allows the use of portable storage or media on workstations and physical \naccess controls to workstations is considered adequate there is little value add in \nturning off automounting.",
        "Impact": "",
        "Audit": "Run the following commands to verify automatic mounting is disabled: \n# gsettings get org.gnome.desktop.media-handling automount \nfalse \n# gsettings get org.gnome.desktop.media-handling automount-open  \nfalse",
        "Remediation": "- IF - A user profile exists run the following commands to ensure automatic mounting is \ndisabled: \n# gsettings set org.gnome.desktop.media-handling automount false \n# gsettings set org.gnome.desktop.media-handling automount-open false  \nNote: \n\u2022 \ngsettings commands in this section MUST be done from a command window \non a graphical desktop or an error will be returned. \n\u2022 \nThe system must be restarted after all gsettings configurations have been set \nin order for CIS-CAT Assessor to appropriately assess. \n- OR/IF - A user profile does not exist: \n1. Create a file /etc/dconf/db/local.d/00-media-automount with following \ncontent: \n[org/gnome/desktop/media-handling] \nautomount=false \nautomount-open=false \n2. After creating the file, apply the changes using below command : \n# dconf update \nNote: Users must log out and back in again before the system-wide settings take effect.",
        "References": "1. https://access.redhat.com/solutions/20107 \n2. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n10.3 Disable Autorun and Autoplay for Removable \nMedia \n \nDisable autorun and autoplay auto-execute functionality for removable \nmedia. \n\u25cf \n\u25cf \n\u25cf \nv7 \n8.5 Configure Devices Not To Auto-run Content \n \nConfigure devices to not auto-run content from removable media. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1091, T1091.000 \nTA0008 \nM1042"
    },
    {
        "Title": "1.7.7 Ensure GDM disabling automatic mounting of removable \nmedia is not overridden (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 2 - Workstation",
        "Description": "By default GNOME automatically mounts removable media when inserted as a \nconvenience to the user. \nBy using the lockdown mode in dconf, you can prevent users from changing specific \nsettings. To lock down a dconf key or subpath, create a locks subdirectory in the keyfile \ndirectory. The files inside this directory contain a list of keys or subpaths to lock. Just as \nwith the keyfiles, you may add any number of files to this directory.",
        "Rationale": "With automounting enabled anyone with physical access could attach a USB drive or \ndisc and have its contents available in system even if they lacked permissions to mount \nit themselves. \nImpact: \nThe use of portable hard drives is very common for workstation users",
        "Impact": "",
        "Audit": "Run the following script to verify automatic mounting of removable media is not \noverridden and correctly configured in a configuration file: \n\u2022 \nautomount=false \n\u2022 \nautomount-open=false \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() \n   check_setting()  \n   { \n      grep -Psrilq \"^\\h*$1\\h*=\\h*false\\b\" /etc/dconf/db/local.d/locks/* 2> \n/dev/null && \\ \n      echo \"- \\\"$3\\\" is locked and set to false\" || echo \"- \\\"$3\\\" is not \nlocked or not set to false\"  \n   } \n   declare -A settings=( \n      [\"automount\"]=\"org/gnome/desktop/media-handling\" \n      [\"automount-open\"]=\"org/gnome/desktop/media-handling\" \n   ) \n   for setting in \"${!settings[@]}\"; do \n      result=$(check_setting \"$setting\" \"${settings[$setting]}\" \"$setting\") \n      if [[ $result == *\"is not locked\"* || $result == *\"not set to false\"* \n]]; then \n         a_output2+=(\"$result\") \n      else \n         a_output+=(\"$result\") \n      fi \n   done \n   printf '%s\\n' \"\" \"- Audit Result:\" \n   if [ \"${#a_output2[@]}\" -gt 0 ]; then \n      printf '%s\\n' \"  ** FAIL **\" \" - Reason(s) for audit failure:\" \n\"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \n   else \n      printf '%s\\n' \"  ** PASS **\" \"${a_output[@]}\" \n   fi \n}",
        "Remediation": "1. To prevent the user from overriding these settings, create the file \n/etc/dconf/db/local.d/locks/00-media-automount with the following \ncontent: \n[org/gnome/desktop/media-handling] \nautomount=false \nautomount-open=false \n2. Update the systems databases: \n# dconf update \nNote: \n\u2022 \nA user profile must exist in order to apply locks. \n\u2022 \nUsers must log out and back in again before the system-wide settings take effect.",
        "References": "1. https://help.gnome.org/admin/system-admin-guide/stable/dconf-lockdown.html.en \n2. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5 \n3. https://manpages.ubuntu.com/manpages/trusty/man1/gsettings.1.html \n4. https://access.redhat.com/solutions/20107 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1091, T1091.000 \nTA0001, TA0008 \nM1042",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "1.7.8 Ensure GDM autorun-never is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The autorun-never setting allows the GNOME Desktop Display Manager to disable \nautorun through GDM.",
        "Rationale": "Malware on removable media may taking advantage of Autorun features when the \nmedia is inserted into a system and execute.",
        "Impact": "",
        "Audit": "Run the following command to verify that autorun-never is set to true for GDM: \n# gsettings get org.gnome.desktop.media-handling autorun-never \ntrue",
        "Remediation": "- IF - A user profile exists run the following command to set autorun-never to true for \nGDM users: \n# gsettings set org.gnome.desktop.media-handling autorun-never true \nNote: \n\u2022 \ngsettings commands in this section MUST be done from a command window \non a graphical desktop or an error will be returned. \n\u2022 \nThe system must be restarted after all gsettings configurations have been set \nin order for CIS-CAT Assessor to appropriately assess. \n- OR/IF - A user profile does not exist: \n1. create the file /etc/dconf/db/local.d/locks/00-media-autorun with the \nfollowing content: \n[org/gnome/desktop/media-handling] \nautorun-never=true \n2. Update the systems databases: \n# dconf update \nNote: Users must log out and back in again before the system-wide settings take effect. \nDefault Value: \nfalse",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n10.3 Disable Autorun and Autoplay for Removable \nMedia \n \nDisable autorun and autoplay auto-execute functionality for removable \nmedia. \n\u25cf \n\u25cf \n\u25cf \nv7 \n8.5 Configure Devices Not To Auto-run Content \n \nConfigure devices to not auto-run content from removable media. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1091, T1091.000 \nTA0001, TA0008 \nM1042"
    },
    {
        "Title": "1.7.9 Ensure GDM autorun-never is not overridden (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The autorun-never setting allows the GNOME Desktop Display Manager to disable \nautorun through GDM. \nBy using the lockdown mode in dconf, you can prevent users from changing specific \nsettings. \nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. \nThe files inside this directory contain a list of keys or subpaths to lock. Just as with the \nkeyfiles, you may add any number of files to this directory.",
        "Rationale": "Malware on removable media may taking advantage of Autorun features when the \nmedia is inserted into a system and execute.",
        "Impact": "",
        "Audit": "Run the following script to verify that autorun-never=true cannot be overridden: \n#!/usr/bin/env bash \n \n{ \n    # Function to check and report if a specific setting is locked and set to \ntrue \n    check_setting() { \n        grep -Psrilq \"^\\h*$1\\h*=\\h*true\\b\" /etc/dconf/db/local.d/locks/* 2> \n/dev/null && echo \"- \\\"$3\\\" is locked and set to false\" || echo \"- \\\"$3\\\" is \nnot locked or not set to false\"  \n    } \n    # Array of settings to check \n    declare -A settings=([\"autorun-never\"]=\"org/gnome/desktop/media-\nhandling\") \n    # Check GNOME Desktop Manager configurations \n    l_output=() l_output2=() \n    for setting in \"${!settings[@]}\"; do \n        result=$(check_setting \"$setting\") \n        l_output+=(\"$result\") \n        if [[ $result == *\"is not locked\"* || $result == *\"not set to true\"* \n]]; then \n            l_output2+=(\"$result\") \n        fi \n    done \n    # Report results \n    if [ ${#l_output2[@]} -ne 0 ]; then \n        printf '%s\\n' \"- Audit Result:\" \"  ** FAIL **\" \n        printf '%s\\n' \"- Reason(s) for audit failure:\" \n        for msg in \"${l_output2[@]}\"; do \n            printf '%s\\n' \"$msg\" \n        done \n    else \n        printf '%s\\n' \"- Audit Result:\" \"  ** PASS **\" \n    fi \n}",
        "Remediation": "1. To prevent the user from overriding these settings, create the file \n/etc/dconf/db/local.d/locks/00-media-autorun with the following content: \n[org/gnome/desktop/media-handling] \nautorun-never=true \n2. Update the systems databases: \n# dconf update \nNote: \n\u2022 \nA user profile must exist in order to apply locks. \n\u2022 \nUsers must log out and back in again before the system-wide settings take effect.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n10.3 Disable Autorun and Autoplay for Removable \nMedia \n \nDisable autorun and autoplay auto-execute functionality for removable \nmedia. \n\u25cf \n\u25cf \n\u25cf \nv7 \n8.5 Configure Devices Not To Auto-run Content \n \nConfigure devices to not auto-run content from removable media. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1091, T1091.000 \nTA0001, TA0008 \nM1028"
    },
    {
        "Title": "1.7.10 Ensure XDMCP is not enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "X Display Manager Control Protocol (XDMCP) is designed to provide authenticated \naccess to display management services for remote displays",
        "Rationale": "XDMCP is inherently insecure. \n\u2022 \nXDMCP is not a ciphered protocol. This may allow an attacker to capture \nkeystrokes entered by a user \n\u2022 \nXDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to \nsteal the credentials of legitimate users by impersonating the XDMCP server.",
        "Impact": "",
        "Audit": "Run the following script and verify the output: \n#!/usr/bin/env bash \n \n{ \n   while IFS= read -r l_file; do \n      awk '/\\[xdmcp\\]/{ f = 1;next } /\\[/{ f = 0 } f {if \n(/^\\s*Enable\\s*=\\s*true/) print \"The file: \\\"'\"$l_file\"'\\\" includes: \\\"\" $0 \n\"\\\" in the \\\"[xdmcp]\\\" block\"}' \"$l_file\" \n   done < <(grep -Psil -- '^\\h*\\[xdmcp\\]' \n/etc/{gdm3,gdm}/{custom,daemon}.conf) \n} \nNothing should be returned",
        "Remediation": "Edit all files returned by the audit and remove or commend out the Enable=true line in \nthe [xdmcp] block: \nExample file: \n# GDM configuration storage \n# \n# See /usr/share/gdm/gdm.schemas for a list of available options. \n \n[daemon] \n# Uncomment the line below to force the login screen to use Xorg \n#WaylandEnable=false \n \n# Enabling automatic login \n#  AutomaticLoginEnable = true \n#  AutomaticLogin = user1 \n \n# Enabling timed login \n#  TimedLoginEnable = true \n#  TimedLogin = user1 \n#  TimedLoginDelay = 10 \n \n[security] \n \n[xdmcp] \n# Enable=true <- **This line should be removed or commented out** \n \n[chooser] \n \n[debug] \n# Uncomment the line below to turn on debugging \n# More verbose logs \n# Additionally lets the X server dump core if it crashes \n#Enable=true \nDefault Value: \nfalse (This is denoted by no Enabled= entry in the [xdmcp] block",
        "References": "1. NIST SP 800-53 Rev. 5: SI-4",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1040, T1040.000, T1056, \nT1056.001, T1557, \nT1557.000 \nTA0002 \nM1050"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "2.1.1 Ensure autofs services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 2 - Workstation",
        "Description": "autofs allows automatic mounting of devices, typically including CD/DVDs and USB \ndrives.",
        "Rationale": "With automounting enabled anyone with physical access could attach a USB drive or \ndisc and have its contents available in the filesystem even if they lacked permissions to \nmount it themselves. \nImpact: \nThe use of portable hard drives is very common for workstation users. If your \norganization allows the use of portable storage or media on workstations and physical \naccess controls to workstations is considered adequate there is little value add in \nturning off automounting. \nThere may be packages that are dependent on the autofs package. If the autofs \npackage is removed, these dependent packages will be removed as well. Before \nremoving the autofs package, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask the autofs.service leaving the \nautofs package installed.",
        "Impact": "",
        "Audit": "As a preference autofs should not be installed unless other packages depend on it. \nRun the following command to verify autofs is not installed: \n# dpkg-query -s autofs &>/dev/null && echo \"autofs is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify autofs.service is not enabled: \n# systemctl is-enabled autofs.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify the autofs.service is not active: \n# systemctl is-active autofs.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop autofs.service and remove the autofs \npackage: \n# systemctl stop autofs.service \n# apt purge autofs \n- OR - \n- IF - the autofs package is required as a dependency: \nRun the following commands to stop and mask autofs.service: \n# systemctl stop autofs.service \n# systemctl mask autofs.service",
        "References": "1. NIST SP 800-53 Rev. 5: SI-3, MP-7 \nAdditional Information: \nThis control should align with the tolerance of the use of portable drives and optical \nmedia in the organization. On a server, requiring an admin to manually mount media \ncan be part of defense-in-depth to reduce the risk of unapproved software or information \nbeing introduced or proprietary software or information being exfiltrated. If admins \ncommonly use flash drives and Server access has sufficient physical controls, requiring \nmanual mounting may not increase security.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n10.3 Disable Autorun and Autoplay for Removable \nMedia \n \nDisable autorun and autoplay auto-execute functionality for removable \nmedia. \n\u25cf \n\u25cf \n\u25cf \nv7 \n8.5 Configure Devices Not To Auto-run Content \n \nConfigure devices to not auto-run content from removable media. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1068, T1068.000, T1203, \nT1203.000, T1211, \nT1211.000, T1212, \nT1212.000"
    },
    {
        "Title": "2.1.2 Ensure avahi daemon services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD \nservice discovery. Avahi allows programs to publish and discover services and hosts \nrunning on a local network with no specific configuration. For example, a user can plug \na computer into a network and Avahi automatically finds printers to print to, files to look \nat and people to talk to, as well as network services running on the machine.",
        "Rationale": "Automatic discovery of network services is not normally required for system \nfunctionality. It is recommended to remove this package to reduce the potential attack \nsurface. \nImpact: \nThere may be packages that are dependent on the avahi package. If the avahi \npackage is removed, these dependent packages will be removed as well. Before \nremoving the avahi package, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask the avahi-daemon.socket and \navahi-daemon.service leaving the avahi package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify avahi-daemon is not installed: \n# dpkg-query -s avahi-daemon &>/dev/null && echo \"avahi-daemon is installed\" \nNothing should be returned. \n- OR - \n- IF - the avahi package is required as a dependency: \nRun the following command to verify avahi-daemon.socket and avahi-\ndaemon.service are not enabled: \n# systemctl is-enabled avahi-daemon.socket avahi-daemon.service 2>/dev/null | \ngrep 'enabled' \nNothing should be returned. \nRun the following command to verify avahi-daemon.socket and avahi-\ndaemon.service are not active: \n# systemctl is-active avahi-daemon.socket avahi-daemon.service 2>/dev/null | \ngrep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop avahi-daemon.socket and avahi-\ndaemon.service, and remove the avahi-daemon package: \n# systemctl stop avahi-daemon.socket avahi-daemon.service \n# apt purge avahi-daemon \n- OR - \n- IF - the avahi-daemon package is required as a dependency: \nRun the following commands to stop and mask the avahi-daemon.socket and avahi-\ndaemon.service: \n# systemctl stop avahi-daemon.socket avahi-daemon.service \n# systemctl mask avahi-daemon.socket avahi-daemon.service",
        "References": "1. NIST SP 800-53 Rev. 5: SI-4",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042 \n \n2.1.3 Ensure dhcp server services are not in use (Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nThe Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to \nbe dynamically assigned IP addresses. There are two versions of the DHCP protocol \nDHCPv4 and DHCPv6. At startup the server may be started for one or the other via the -4 \nor -6 arguments. \nRationale: \nUnless a system is specifically set up to act as a DHCP server, it is recommended that \nthis package be removed to reduce the potential attack surface. \nImpact: \nThere may be packages that are dependent on the isc-dhcp-server package. If the \nisc-dhcp-server package is removed, these dependent packages will be removed as \nwell. Before removing the isc-dhcp-server package, review any dependent packages \nto determine if they are required on the system. \n- IF - a dependent package is required: stop and mask the isc-dhcp-server.service \nand isc-dhcp-server6.service leaving the isc-dhcp-server package installed. \n \n \n \nAudit: \nRun the following commands to verify isc-dhcp-server is not installed: \n# dpkg-query -s isc-dhcp-server &>/dev/null && echo \"isc-dhcp-server is \ninstalled\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify isc-dhcp-server.service and isc-dhcp-\nserver6.service are not enabled: \n# systemctl is-enabled isc-dhcp-server.service isc-dhcp-server6.service \n2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify isc-dhcp-server.service and isc-dhcp-\nserver6.service are not active: \n# systemctl is-active isc-dhcp-server.service isc-dhcp-server6.service \n2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy \nRemediation: \nRun the following commands to stop isc-dhcp-server.service and isc-dhcp-\nserver6.service and remove the isc-dhcp-server package: \n# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service \n# apt purge isc-dhcp-server \n- OR - \n- IF - the isc-dhcp-server package is required as a dependency: \nRun the following commands to stop and mask isc-dhcp-server.service and isc-\ndhcp-server6.service: \n# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service \n# systemctl mask isc-dhcp-server isc-dhcp-server6.service \nReferences: \n1. More detailed documentation on DHCP is available at \nhttp://www.isc.org/software/dhcp. \n2. NIST SP 800-53 Rev. 5: CM-7 \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042 \n \n2.1.4 Ensure dns server services are not in use (Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nThe Domain Name System (DNS) is a hierarchical naming system that maps names to \nIP addresses for computers, services and other resources connected to a network. \nNote: bind9 is the package and bind.service is the alias for named.service. \nRationale: \nUnless a system is specifically designated to act as a DNS server, it is recommended \nthat the package be deleted to reduce the potential attack surface. \nImpact: \nThere may be packages that are dependent on the bind9 package. If the bind9 \npackage is removed, these dependent packages will be removed as well. Before \nremoving the bind9 package, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask named.service leaving the \nbind9 package installed. \n \n \n \nAudit: \nRun the following command to verify bind9 is not installed: \n# dpkg-query -s bind9 &>/dev/null && echo \"bind9 is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify named.service is not enabled: \n# systemctl is-enabled named.service 2>/dev/null | grep 'enabled' \n \nNothing should be returned \nRun the following command to verify the named.service is not active: \n# systemctl is-active named.service 2>/dev/null | grep '^active' \n \nNothing should be returned \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy \nRemediation: \nRun the following commands to stop named.service and remove the bind9 package: \n# systemctl stop named.service \n# apt purge bind9 \n- OR - \n- IF - the bind9 package is required as a dependency: \nRun the following commands to stop and mask bind9.service: \n# systemctl stop named.service \n# systemctl mask named.service \nReferences: \n1. NIST SP 800-53 Rev. 5: CM-7 \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.5 Ensure dnsmasq services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP \n(Dynamic Host Configuration Protocol) services.",
        "Rationale": "Unless a system is specifically designated to act as a DNS caching, DNS forwarding \nand/or DHCP server, it is recommended that the package be removed to reduce the \npotential attack surface. \nImpact: \nThere may be packages that are dependent on the dnsmasq package. If the dnsmasq \npackage is removed, these dependent packages will be removed as well. Before \nremoving the dnsmasq package, review any dependent packages to determine if they \nare required on the system. \n- IF - a dependent package is required: stop and mask the dnsmasq.service leaving \nthe dnsmasq package installed.",
        "Impact": "",
        "Audit": "Run one of the following commands to verify dnsmasq is not installed: \n# dpkg-query -s dnsmasq &>/dev/null && echo \"dnsmasq is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify dnsmasq.service is not enabled: \n# systemctl is-enabled dnsmasq.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify the dnsmasq.service is not active: \n# systemctl is-active dnsmasq.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop dnsmasq.service and remove dnsmasq package: \n# systemctl stop dnsmasq.service \n# apt purge dnsmasq \n- OR - \n- IF - the dnsmasq package is required as a dependency: \nRun the following commands to stop and mask the dnsmasq.service: \n# systemctl stop dnsmasq.service \n# systemctl mask dnsmasq.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.6 Ensure ftp server services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The File Transfer Protocol (FTP) provides networked computers with the ability to \ntransfer files. vsftpd is the Very Secure File Transfer Protocol Daemon.",
        "Rationale": "FTP does not protect the confidentiality of data or authentication credentials. It is \nrecommended SFTP be used if file transfer is required. Unless there is a need to run \nthe system as a FTP server (for example, to allow anonymous downloads), it is \nrecommended that the package be deleted to reduce the potential attack surface. \nImpact: \nThere may be packages that are dependent on the vsftpd package. If the vsftpd \npackage is removed, these dependent packages will be removed as well. Before \nremoving the vsftpd package, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask the vsftpd.service leaving the \nvsftpd package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify vsftpd is not installed: \n# dpkg-query -s vsftpd &>/dev/null && echo \"vsftpd is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify vsftpd service is not enabled: \n# systemctl is-enabled vsftpd.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify the vsftpd service is not active: \n# systemctl is-active vsftpd.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: \n\u2022 \nOther ftp server packages may exist. They should also be audited, if not required \nand authorized by local site policy \n\u2022 \nIf the package is required for a dependency: \no Ensure the dependent package is approved by local site policy \no Ensure stopping and masking the service and/or socket meets local site \npolicy",
        "Remediation": "Run the following commands to stop vsftpd.service and remove the vsftpd \npackage: \n# systemctl stop vsftpd.service \n# apt purge vsftpd \n- OR - \n- IF - the vsftpd package is required as a dependency: \nRun the following commands to stop and mask the vsftpd.service: \n# systemctl stop vsftpd.service \n# systemctl mask vsftpd.service \nNote: Other ftp server packages may exist. If not required and authorized by local site \npolicy, they should also be removed. If the package is required for a dependency, the \nservice should be stopped and masked.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7 \n \nAdditional Information: \nAdditional FTP servers also exist and should be audited.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042 \n \n2.1.7 Ensure ldap server services are not in use (Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nThe Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for \nNIS/YP. It is a service that provides a method for looking up information from a central \ndatabase. \nRationale: \nIf the system will not need to act as an LDAP server, it is recommended that the \nsoftware be removed to reduce the potential attack surface. \nImpact: \nThere may be packages that are dependent on the slapd package. If the slapd \npackage is removed, these dependent packages will be removed as well. Before \nremoving the slapd package, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask the slapd.service leaving the \nslapd package installed. \nAudit: \nRun the following command to verify slapd is not installed: \n# dpkg-query -s slapd &>/dev/null && echo \"slapd is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify slapd.service is not enabled: \n# systemctl is-enabled slapd.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify slapd.service is not active: \n# systemctl is-active slapd.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy \n \nRemediation: \nRun the following commands to stop slapd.service and remove the slapd package: \n# systemctl stop slapd.service \n# apt purge slapd \n- OR - \n- IF - the slapd package is required as a dependency: \nRun the following commands to stop and mask slapd.service: \n# systemctl stop slapd.service \n# systemctl mask slapd.service \nReferences: \n1. For more detailed documentation on OpenLDAP, go to the project homepage at \nhttp://www.openldap.org. \n2. NIST SP 800-53 Rev. 5: CM-7 \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.8 Ensure message access server services are not in use \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "dovecot-imapd and dovecot-pop3d are an open source IMAP and POP3 server for \nLinux based systems.",
        "Rationale": "Unless POP3 and/or IMAP servers are to be provided by this system, it is \nrecommended that the package be removed to reduce the potential attack surface. \nNote: Several IMAP/POP3 servers exist and can use other service names. These \nshould also be audited and the packages removed if not required. \nImpact: \nThere may be packages that are dependent on dovecot-imapd and/or dovecot-pop3d \npackages. If dovecot-imapd and dovecot-pop3d packages are removed, these \ndependent packages will be removed as well. Before removing dovecot-imapd and/or \ndovecot-pop3d packages, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask dovecot.socket and \ndovecot.service leaving dovecot-imapd and/or dovecot-pop3d packages installed.",
        "Impact": "",
        "Audit": "Run the following command to verify dovecot-imapd and dovecot-pop3d are not \ninstalled: \n# dpkg-query -s dovecot-imapd &>/dev/null && echo \"dovecot-imapd is \ninstalled\" \nNothing should be returned. \n# dpkg-query -s dovecot-pop3d &>/dev/null && echo \"dovecot-pop3d is \ninstalled\" \nNothing should be returned. \n- OR - \n- IF - a package is installed and is required for dependencies: \nRun the following commands to verify dovecot.socket and dovecot.service are not \nenabled: \n# systemctl is-enabled dovecot.socket dovecot.service 2>/dev/null | grep \n'enabled' \nNothing should be returned. \nRun the following command to verify dovecot.socket and dovecot.service are not \nactive: \n# systemctl is-active dovecot.socket dovecot.service 2>/dev/null | grep \n'^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run one of the following commands to remove dovecot-imapd and dovecot-pop3d: \nRun the following commands to stop dovecot.socket and dovecot.service, and \nremove the dovecot-imapd and dovecot-pop3d packages: \n# systemctl stop dovecot.socket dovecot.service \n# apt purge dovecot-imapd dovecot-pop3d \n- OR - \n- IF - a package is installed and is required for dependencies: \nRun the following commands to stop and mask dovecot.socket and \ndovecot.service: \n# systemctl stop dovecot.socket dovecot.service \n# systemctl mask dovecot.socket dovecot.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7 \nAdditional Information: \nSeveral IMAP/POP3 servers exist and can use other service names. courier-imap \nand cyrus-imap are example services that provide a mail server. These and other \nservices should also be audited.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.9 Ensure network file system services are not in use \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The Network File System (NFS) is one of the first and most widely distributed file \nsystems in the UNIX environment. It provides the ability for systems to mount file \nsystems of other servers through the network.",
        "Rationale": "If the system does not export NFS shares, it is recommended that the nfs-kernel-\nserver package be removed to reduce the remote attack surface. \nImpact: \nThere may be packages that are dependent on the nfs-kernel-server package. If the \nnfs-kernel-server package is removed, these dependent packages will be removed \nas well. Before removing the nfs-kernel-server package, review any dependent \npackages to determine if they are required on the system. \n- IF - a dependent package is required: stop and mask the nfs-server.service \nleaving the nfs-kernel-server package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify nfs-kernel-server is not installed: \n# dpkg-query -s nfs-kernel-server &>/dev/null && echo \"nfs-kernel-server is \ninstalled\" \nNothing should be returned. \n- OR - \n- IF - package is required for dependencies: \nRun the following command to verify that the nfs-server.service is not enabled: \n# systemctl is-enabled nfs-server.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify the nfs-server.service is not active: \n# systemctl is-active nfs-server.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following command to stop nfs-server.service and remove nfs-kernel-\nserver package: \n# systemctl stop nfs-server.service \n# apt purge nfs-kernel-server \n- OR - \n- IF - the nfs-kernel-server package is required as a dependency: \nRun the following commands to stop and mask the nfs-server.service: \n# systemctl stop nfs-server.service \n# systemctl mask nfs-server.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-6, CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000, T1039, \nT1039.000, T1083, \nT1083.000, T1135, \nT1135.000, T1210, \nT1210.000 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.10 Ensure nis server services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The Network Information Service (NIS) (formally known as Yellow Pages) is a client-\nserver directory service protocol for distributing system configuration files. The NIS \nserver is a collection of programs that allow for the distribution of configuration files. The \nNIS client (ypbind) was used to bind a machine to an NIS server and receive the \ndistributed configuration files.",
        "Rationale": "ypserv.service is inherently an insecure system that has been vulnerable to DOS \nattacks, buffer overflows and has poor authentication for querying NIS maps. NIS \ngenerally has been replaced by such protocols as Lightweight Directory Access \nProtocol (LDAP). It is recommended that ypserv.service be removed and other, more \nsecure services be used \nImpact: \nThere may be packages that are dependent on the ypserv package. If the ypserv \npackage is removed, these dependent packages will be removed as well. Before \nremoving the ypserv package, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask the ypserv.service leaving the \nypserv package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify ypserv is not installed: \n# dpkg-query -s ypserv &>/dev/null && echo \"ypserv is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify ypserv.service is not enabled: \n# systemctl is-enabled ypserv.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify ypserv.service is not active: \n# systemctl is-active ypserv.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop ypserv.service and remove ypserv package: \n# systemctl stop ypserv.service \n# apt purge ypserv \n- OR - \n- IF - the ypserv package is required as a dependency: \nRun the following commands to stop and mask ypserv.service: \n# systemctl stop ypserv.service \n# systemctl mask ypserv.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.11 Ensure print server services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The Common Unix Print System (CUPS) provides the ability to print to both local and \nnetwork printers. A system running CUPS can also accept print jobs from remote \nsystems and print them to local printers. It also provides a web based remote \nadministration capability.",
        "Rationale": "If the system does not need to print jobs or accept print jobs from other systems, it is \nrecommended that CUPS be removed to reduce the potential attack surface. \nImpact: \nRemoving the cups package, or disabling cups.socket and/or cups.service will \nprevent printing from the system, a common task for workstation systems. \nThere may be packages that are dependent on the cups package. If the cups package \nis removed, these dependent packages will be removed as well. Before removing the \ncups package, review any dependent packages to determine if they are required on the \nsystem. \n- IF - a dependent package is required: stop and mask cups.socket and \ncups.service leaving the cups package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify cups is not Installed: \n# dpkg-query -s cups &>/dev/null && echo \"cups is installed\" \nNothing should be returned. \n- OR - \n- IF - the cups package is required as a dependency: \nRun the following command to verify the cups.socket and cups.service are not \nenabled: \n# systemctl is-enabled cups.socket cups.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify the cups.socket and cups.service are not \nactive: \n# systemctl is-active cups.socket cups.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop cups.socket and cups.service, and remove the \ncups package: \n# systemctl stop cups.socket cups.service \n# apt purge cups \n- OR - \n- IF - the cups package is required as a dependency: \nRun the following commands to stop and mask the cups.socket and cups.service: \n# systemctl stop cups.socket cups.service \n# systemctl mask cups.socket cups.service",
        "References": "1. http://www.cups.org \n2. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042 \n \n2.1.12 Ensure rpcbind services are not in use (Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nThe rpcbind utility maps RPC services to the ports on which they listen. RPC \nprocesses notify rpcbind when they start, registering the ports they are listening on and \nthe RPC program numbers they expect to serve. The client system then contacts \nrpcbind on the server with a particular RPC program number. The rpcbind.service \nredirects the client to the proper port number so it can communicate with the requested \nservice. \nPortmapper is an RPC service, which always listens on tcp and udp 111, and is used to \nmap other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their \ncorresponding port number on the server. When a remote host makes an RPC call to \nthat server, it first consults with portmap to determine where the RPC server is listening. \nRationale: \nA small request (~82 bytes via UDP) sent to the Portmapper generates a large \nresponse (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If \nrpcbind is not required, it is recommended to remove rpcbind package to reduce the \npotential attack surface. \nImpact: \nMany of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils \npackage used for The Network File System (NFS), are dependent on the rpcbind \npackage. If the rpcbind package is removed, these dependent packages will be \nremoved as well. Before removing the rpcbind package, review any dependent \npackages to determine if they are required on the system. \n- IF - a dependent package is required: stop and mask the rpcbind.socket and \nrpcbind.service leaving the rpcbind package installed. \n \n \n \nAudit: \nRun the following command to verify rpcbind package is not installed: \n# dpkg-query -s rpcbind &>/dev/null && echo \"rpcbind is installed\" \nNothing should be returned. \n- OR - \n- IF - the rpcbind package is required as a dependency: \nRun the following command to verify rpcbind.socket and rpcbind.service are not \nenabled: \n# systemctl is-enabled rpcbind.socket rpcbind.service 2>/dev/null | grep \n'enabled' \nNothing should be returned. \nRun the following command to verify rpcbind.socket and rpcbind.service are not \nactive: \n# systemctl is-active rpcbind.socket rpcbind.service 2>/dev/null | grep \n'^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy \nRemediation: \nRun the following commands to stop rpcbind.socket and rpcbind.service, and \nremove the rpcbind package: \n# systemctl stop rpcbind.socket rpcbind.service \n# apt purge rpcbind \n- OR - \n- IF - the rpcbind package is required as a dependency: \nRun the following commands to stop and mask the rpcbind.socket and \nrpcbind.service: \n# systemctl stop rpcbind.socket rpcbind.service \n# systemctl mask rpcbind.socket rpcbind.service \nReferences: \n1. NIST SP 800-53 Rev. 5: CM-6, CM-7 \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1498, \nT1498.002, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.13 Ensure rsync services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The rsync service can be used to synchronize files between systems over network \nlinks.",
        "Rationale": "rsync.service presents a security risk as the rsync protocol is unencrypted. \nThe rsync package should be removed to reduce the attack area of the system. \nImpact: \nThere may be packages that are dependent on the rsync package. If the rsync \npackage is removed, these dependent packages will be removed as well. Before \nremoving the rsync package, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask rsync.service leaving the \nrsync package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify rsync is not installed: \n# dpkg-query -s rsync &>/dev/null && echo \"rsync is installed\" \nNothing should be returned. \n- OR - \n- IF - the rsync package is required as a dependency: \nRun the following command to verify rsync.service is not enabled: \n# systemctl is-enabled rsync.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify rsync.service is not active: \n# systemctl is-active rsync.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop rsync.service, and remove the rsync package: \n# systemctl stop rsync.service \n# apt purge rsync \n- OR - \n- IF - the rsync package is required as a dependency: \nRun the following commands to stop and mask rsync.service: \n# systemctl stop rsync.service \n# systemctl mask rsync.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1105, T1105.000, T1203, \nT1203.000, T1210, \nT1210.000, T1543, \nT1543.002, T1570, \nT1570.000 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.14 Ensure samba file server services are not in use \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The Samba daemon allows system administrators to configure their Linux systems to \nshare file systems and directories with Windows desktops. Samba will advertise the file \nsystems and directories via the Server Message Block (SMB) protocol. Windows \ndesktop users will be able to mount these directories and file systems as letter drives on \ntheir systems.",
        "Rationale": "If there is no need to mount directories and file systems to Windows systems, then this \nservice should be deleted to reduce the potential attack surface. \nImpact: \nThere may be packages that are dependent on the samba package. If the samba \npackage is removed, these dependent packages will be removed as well. Before \nremoving the samba package, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask the smbd.service leaving the \nsamba package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify samba is not installed: \n# dpkg-query -s samba &>/dev/null && echo \"samba is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify smbd.service is not enabled: \n# systemctl is-enabled smbd.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify the smbd.service is not active: \n# systemctl is-active smbd.service 2>/dev/null | grep '^active' \nNothing should be returned.",
        "Remediation": "Run the following commands to stop smbd.service and remove samba package: \n# systemctl stop smbd.service \n# apt purge samba \n- OR - \n- IF - the samba package is required as a dependency: \nRun the following commands to stop and mask the smbd.service: \n# systemctl stop smbd.service \n# systemctl mask smbd.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-6, CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000, T1039, \nT1039.000, T1083, \nT1083.000, T1135, \nT1135.000, T1203, \nT1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008"
    },
    {
        "Title": "2.1.15 Ensure snmp services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring \nthe health and welfare of network equipment, computer equipment and devices like \nUPSs. \nNet-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 \n(RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6. \nSupport for SNMPv2 classic (a.k.a. \"SNMPv2 historic\" - RFCs 1441-1452) was dropped \nwith the 4.0 release of the UCD-snmp package. \nThe Simple Network Management Protocol (SNMP) server is used to listen for SNMP \ncommands from an SNMP management system, execute the commands or collect the \ninformation and then send results back to the requesting system.",
        "Rationale": "The SNMP server can communicate using SNMPv1, which transmits data in the clear \nand does not require authentication to execute commands. SNMPv3 replaces the \nsimple/clear text password sharing used in SNMPv2 with more securely encoded \nparameters. If the the SNMP service is not required, the snmpd package should be \nremoved to reduce the attack surface of the system. \nNote: If SNMP is required: \n\u2022 \nThe server should be configured for SNMP v3 only. User Authentication and \nMessage Encryption should be configured. \n\u2022 \nIf SNMP v2 is absolutely necessary, modify the community strings' values. \nImpact: \nThere may be packages that are dependent on the snmpd package. If the snmpd \npackage is removed, these packages will be removed as well. \nBefore removing the snmpd package, review any dependent packages to determine if \nthey are required on the system. If a dependent package is required, stop and mask the \nsnmpd.service leaving the snmpd package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify snmpd is not installed: \n# dpkg-query -s snmpd &>/dev/null && echo \"snmpd is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify the snmpd.service is not enabled: \n# systemctl is-enabled snmpd.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify the snmpd.service is not active: \n# systemctl is-active snmpd.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop snmpd.service and remove the snmpd package: \n# systemctl stop snmpd.service \n# apt purge snmpd \n- OR - If the package is required for dependencies: \nRun the following commands to stop and mask the snmpd.service: \n# systemctl stop snmpd.service \n# systemctl mask snmpd.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.16 Ensure tftp server services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between \ntwo TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending \nand receiving files.",
        "Rationale": "Unless there is a need to run the system as a TFTP server, it is recommended that the \npackage be removed to reduce the potential attack surface. \nTFTP does not have built-in encryption, access control or authentication. This makes it \nvery easy for an attacker to exploit TFTP to gain access to files \nImpact: \nTFTP is often used to provide files for network booting such as for PXE based \ninstallation of servers. \nThere may be packages that are dependent on the tftpd-hpa package. If the tftpd-\nhpa package is removed, these dependent packages will be removed as well. Before \nremoving the tftpd-hpa package, review any dependent packages to determine if they \nare required on the system. \n- IF - a dependent package is required: stop and mask tftpd-hpa.service leaving the \ntftpd-hpa package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify tftpd-hpa is not installed: \n# dpkg-query -s tftpd-hpa &>/dev/null && echo \"tftpd-hpa is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify tftpd-hpa.service is not enabled: \n# systemctl is-enabled tftpd-hpa.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify the tftpd-hpa.service is not active: \n# systemctl is-active tftpd-hpa.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop tftpd-hpa.service, and remove the tftpd-hpa \npackage: \n# systemctl stop tftpd-hpa.service \n# apt purge tftpd-hpa \n- OR - \n- IF - the tftpd-hpa package is required as a dependency: \nRun the following commands to stop and mask tftpd-hpa.service: \n# systemctl stop tftpd-hpa.service \n# systemctl mask tftpd-hpa.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.17 Ensure web proxy server services are not in use \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Squid is a standard proxy server used in many distributions and environments.",
        "Rationale": "Unless a system is specifically set up to act as a proxy server, it is recommended that \nthe squid package be removed to reduce the potential attack surface. \nNote: Several HTTP proxy servers exist. These should be checked and removed unless \nrequired. \nImpact: \nThere may be packages that are dependent on the squid package. If the squid \npackage is removed, these dependent packages will be removed as well. Before \nremoving the squid package, review any dependent packages to determine if they are \nrequired on the system. \n- IF - a dependent package is required: stop and mask the squid.service leaving the \nsquid package installed.",
        "Impact": "",
        "Audit": "Run the following command to verify squid is not installed: \n# dpkg-query -s squid &>/dev/null && echo \"squid is installed\" \nNothing should be returned. \n- OR - \n- IF - the package is required for dependencies: \nRun the following command to verify squid.service is not enabled: \n# systemctl is-enabled squid.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify the squid.service is not active: \n# systemctl is-active squid.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop squid.service and remove the squid package: \n# systemctl stop squid.service \n# apt purge squid \n- OR - If the squid package is required as a dependency: \nRun the following commands to stop and mask the squid.service: \n# systemctl stop squid.service \n# systemctl mask squid.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7 \nAdditional Information: \nSeveral HTTP proxy servers exist. These and other services should be checked",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.18 Ensure web server services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Web servers provide the ability to host web site content.",
        "Rationale": "Unless there is a local site approved requirement to run a web server service on the \nsystem, web server packages should be removed to reduce the potential attack surface. \nImpact: \nRemoval of web server packages will remove that ability for the server to host web \nservices. \n- IF - the web server package is required for a dependency, any related service or \nsocket should be stopped and masked. \nNote: If the remediation steps to mask a service are followed and that package is not \ninstalled on the system, the service and/or socket will still be masked. If the package is \ninstalled due to an approved requirement to host a web server, the associated service \nand/or socket would need to be unmasked before it could be enabled and/or started.",
        "Impact": "",
        "Audit": "Run the following command to verify apache2 is not installed: \n# dpkg-query -s apache2 &>/dev/null && echo \"apache2 is installed\" \nNothing should be returned. \nRun the following command to verify nginx is not installed: \n# dpkg-query -s nginx &>/dev/null && echo \"nginx is installed\" \nNothing should be returned. \n- OR - \n- IF - a package is installed and is required for dependencies: \nRun the following command to verify apache2.socket, apache2.service, and \nnginx.service are not enabled: \n# systemctl is-enabled apache2.socket apache2.service nginx.service \n2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify apache2.socket, apache2.service, and \nnginx.service are not active: \n# systemctl is-active apache2.socket apache2.service nginx.service \n2>/dev/null | grep '^active' \nNothing should be returned. \nNote: \n\u2022 \nOther web server packages may exist. They should also be audited, if not \nrequired and authorized by local site policy \n\u2022 \nIf the package is required for a dependency: \no Ensure the dependent package is approved by local site policy \no Ensure stopping and masking the service and/or socket meets local site \npolicy",
        "Remediation": "Run the following commands to stop httpd.socket, httpd.service, and \nnginx.service, and remove apache2 and nginx packages: \n# systemctl stop apache2.socket apache2.service nginx.service \n# apt purge apache2 nginx \n- OR - \n- IF - a package is installed and is required for dependencies: \nRun the following commands to stop and mask apache2.socket, apache2.service, \nand nginx.service: \n# systemctl stop apache2.socket apache2.service nginx.service \n# systemctl mask apache2.socket apache2.service nginx.service \nNote: Other web server packages may exist. If not required and authorized by local site \npolicy, they should also be removed. If the package is required for a dependency, the \nservice and socket should be stopped and masked.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7 \nAdditional Information: \nSeveral httpd servers exist and can use other service names. apache2 and nginx are \nexample services that provide an HTTP server. These and other services should also \nbe audited",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.19 Ensure xinetd services are not in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The eXtended InterNET Daemon (xinetd) is an open source super daemon that \nreplaced the original inetd daemon. The xinetd daemon listens for well known \nservices and dispatches the appropriate daemon to properly respond to service \nrequests.",
        "Rationale": "If there are no xinetd services required, it is recommended that the package be \nremoved to reduce the attack surface are of the system. \nNote: If an xinetd service or services are required, ensure that any xinetd service not \nrequired is stopped and masked \nImpact: \nThere may be packages that are dependent on the xinetd package. If the xinetd \npackage is removed, these dependent packages will be removed as well. Before \nremoving the xinetd package, review any dependent packages to determine if they are \nrequired on the system. \n-IF- a dependent package is required: stop and mask xinetd.service leaving the xinetd \npackage installed.",
        "Impact": "",
        "Audit": "Run the following command to verify the xinetd package is not installed: \n# dpkg-query -s xinetd &>/dev/null && echo \"xinetd is installed\" \nNothing should be returned. \n-OR- \n-IF- the xinetd package is required as a dependency: \nRun the following command to verify xinetd.service is not enabled: \n# systemctl is-enabled xinetd.service 2>/dev/null | grep 'enabled' \n \nNothing should be returned \nRun the following command to verify xinetd.service is not active: \n# systemctl is-active xinetd.service 2>/dev/null | grep '^active' \n \nNothing should be returned \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy",
        "Remediation": "Run the following commands to stop xinetd.service, and remove the xinetd \npackage: \n# systemctl stop xinetd.service \n# apt purge xinetd \n-OR- \n-IF- the xinetd package is required as a dependency: \nRun the following commands to stop and mask the xinetd.service: \n# systemctl stop xinetd.service \n# systemctl mask xinetd.service",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.20 Ensure X window server services are not in use \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server",
        "Description": "The X Window System provides a Graphical User Interface (GUI) where users can have \nmultiple windows in which to run programs and various add on. The X Windows system \nis typically used on workstations where users login, but not on servers where users \ntypically do not login.",
        "Rationale": "Unless your organization specifically requires graphical login access via X Windows, \nremove it to reduce the potential attack surface. \nImpact: \nIf a Graphical Desktop Manager (GDM) is in use on the system, there may be a \ndependency on the xorg-x11-server-common package. If the GDM is required and \napproved by local site policy, the package should not be removed. \nMany Linux systems run applications which require a Java runtime. Some Linux Java \npackages have a dependency on specific X Windows xorg-x11-fonts. One workaround \nto avoid this dependency is to use the \"headless\" Java packages for your specific Java \nruntime.",
        "Impact": "",
        "Audit": "- IF - a Graphical Desktop Manager or X-Windows server is not required and approved \nby local site policy: \nRun the following command to Verify X Windows Server is not installed. \ndpkg-query -s xserver-common &>/dev/null && echo \"xserver-common is \ninstalled\" \nNothing should be returned",
        "Remediation": "- IF - a Graphical Desktop Manager or X-Windows server is not required and approved \nby local site policy: \nRun the following command to remove the X Windows Server package: \n# apt purge xserver-common",
        "References": "1. NIST SP 800-53 Rev. 5: CM-11",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n2.6 Address unapproved software \n \nEnsure that unauthorized software is either removed or the inventory is \nupdated in a timely manner \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.21 Ensure mail transfer agent is configured for local-only \nmode (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for \nincoming mail and transfer the messages to the appropriate user or mail server. If the \nsystem is not intended to be a mail server, it is recommended that the MTA be \nconfigured to only process local mail.",
        "Rationale": "The software for all Mail Transfer Agents is complex and most have a long history of \nsecurity issues. While it is important to ensure that the system can process local mail \nmessages, it is not necessary to have the MTA's daemon listening on a port unless the \nserver is intended to be a mail server that receives and processes mail from other \nsystems.",
        "Impact": "",
        "Audit": "Run the following script to verify that the MTA is not listening on any non-loopback \naddress ( 127.0.0.1 or ::1 \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); a_port_list=(\"25\" \"465\" \"587\") \n   for l_port_number in \"${a_port_list[@]}\"; do \n      if ss -plntu | grep -P -- ':'\"$l_port_number\"'\\b' | grep -Pvq -- \n'\\h+(127\\.0\\.0\\.1|\\[?::1\\]?):'\"$l_port_number\"'\\b'; then \n         a_output2+=(\" - Port \\\"$l_port_number\\\" is listening on a non-\nloopback network interface\") \n      else \n         a_output+=(\" - Port \\\"$l_port_number\\\" is not listening on a non-\nloopback network interface\") \n      fi \n   done \n   if command -v postconf &> /dev/null; then \n      l_interfaces=\"$(postconf -n inet_interfaces)\" \n   elif command -v exim &> /dev/null; then \n      l_interfaces=\"$(exim -bP local_interfaces)\" \n   elif command -v sendmail &> /dev/null; then \n      l_interfaces=\"$(grep -i \"0 DaemonPortOptions=\" /etc/mail/sendmail.cr | \ngrep -oP '?<=Addr=)[^,+]+')\" \n   fi \n   if [ -n \"$l_interfaces\" ]; then \n      if grep -Pqi '\\ball\\b' <<< \"$l_interfaces\"; then \n         a_output2+=(\" - MTA is bound to all network interfaces\") \n      elif ! grep -Pqi '(inet_interfaces\\h*=\\h*)?(0\\.0\\.0\\.0|::1|loopback-\nonly)' <<< \"$l_interfaces\"; then \n         a_output2+=(\" - MTA is bound to a network interface\" \"   \n\\\"$l_interfaces\\\"\") \n      else \n         a_output+=(\" - MTA is not bound to a non loopback network interface\" \n\"   \\\"$l_interfaces\\\"\") \n      fi \n   else \n      a_output+=(\" - MTA not detected or in use\") \n   fi \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \"  * Reasons for \naudit failure *\" \"${a_output2[@]}\" \"\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL \nsection. If the line already exists, change it to look like the line below: \ninet_interfaces = loopback-only \nRun the following command to restart postfix: \n# systemctl restart postfix \nNote: \n\u2022 \nThis recommendation is designed around the postfix mail server. \n\u2022 \nDepending on your environment you may have an alternative MTA installed such \nas exim4. If this is the case consult the documentation for your installed MTA to \nconfigure the recommended state.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1018, T1018.000, T1210, \nT1210.000 \nTA0008 \nM1042"
    },
    {
        "Title": "2.1.22 Ensure only approved services are listening on a network \ninterface (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "A network port is identified by its number, the associated IP address, and the type of the \ncommunication protocol such as TCP or UDP. \nA listening port is a network port on which an application or process listens on, acting as \na communication endpoint. \nEach listening port can be open or closed (filtered) using a firewall. In general terms, an \nopen port is a network port that accepts incoming packets from remote locations.",
        "Rationale": "Services listening on the system pose a potential risk as an attack vector. These \nservices should be reviewed, and if not required, the service should be stopped, and the \npackage containing the service should be removed. If required packages have a \ndependency, the service should be stopped and masked to reduce the attack surface of \nthe system. \nImpact: \nThere may be packages that are dependent on the service's package. If the service's \npackage is removed, these dependent packages will be removed as well. Before \nremoving the service's package, review any dependent packages to determine if they \nare required on the system. \n- IF - a dependent package is required: stop and mask the <service_name>.socket \nand <service_name>.service leaving the service's package installed.",
        "Impact": "",
        "Audit": "Run the following command: \n# ss -plntu \nReview the output to ensure: \n\u2022 \nAll services listed are required on the system and approved by local site policy. \n\u2022 \nBoth the port and interface the service is listening on are approved by local site \npolicy. \n\u2022 \nIf a listed service is not required: \no Remove the package containing the service \no - IF - the service's package is required for a dependency, stop and mask \nthe service and/or socket",
        "Remediation": "Run the following commands to stop the service and remove the package containing \nthe service: \n# systemctl stop <service_name>.socket <service_name>.service \n# apt purge <package_name> \n- OR - If required packages have a dependency: \nRun the following commands to stop and mask the service and socket: \n# systemctl stop <service_name>.socket <service_name>.service \n# systemctl mask <service_name>.socket <service_name>.service \nNote: replace <service_name> with the appropriate service name.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1210, \nT1210.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "2.2.1 Ensure NIS Client is not installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The Network Information Service (NIS), formerly known as Yellow Pages, is a client-\nserver directory service protocol used to distribute system configuration files. The NIS \nclient was used to bind a machine to an NIS server and receive the distributed \nconfiguration files.",
        "Rationale": "The NIS service is inherently an insecure system that has been vulnerable to DOS \nattacks, buffer overflows and has poor authentication for querying NIS maps. NIS \ngenerally has been replaced by such protocols as Lightweight Directory Access \nProtocol (LDAP). It is recommended that the service be removed. \nImpact: \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Impact": "",
        "Audit": "Verify nis is not installed. Use the following command to provide the needed \ninformation: \n# dpkg-query -s nis &>/dev/null && echo \"nis is installed\" \nNothing should be returned.",
        "Remediation": "Uninstall nis: \n# apt purge nis",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7, CM-11",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n2.6 Address unapproved software \n \nEnsure that unauthorized software is either removed or the inventory is \nupdated in a timely manner \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.2.2 Ensure rsh client is not installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The rsh-client package contains the client commands for the rsh services.",
        "Rationale": "These legacy clients contain numerous security exposures and have been replaced with \nthe more secure SSH package. Even if the server is removed, it is best to ensure the \nclients are also removed to prevent users from inadvertently attempting to use these \ncommands and therefore exposing their credentials. Note that removing the rsh-\nclient package removes the clients for rsh , rcp and rlogin . \nImpact: \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Impact": "",
        "Audit": "Verify rsh-client is not installed. Use the following command to provide the needed \ninformation: \n# dpkg-query -s rsh-client &>/dev/null && echo \"rsh-client is installed\" \nNothing should be returned.",
        "Remediation": "Uninstall rsh: \n# apt purge rsh-client",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1040, T1040.000, T1203, \nT1203.000, T1543, \nT1543.002 \nTA0008 \nM1041, M1042"
    },
    {
        "Title": "2.2.3 Ensure talk client is not installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The talk software makes it possible for users to send and receive messages across \nsystems through a terminal session. The talk client, which allows initialization of talk \nsessions, is installed by default.",
        "Rationale": "The software presents a security risk as it uses unencrypted protocols for \ncommunication. \nImpact: \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Impact": "",
        "Audit": "Verify talk is not installed. The following command may provide the needed \ninformation: \n# dpkg-query -s talk &>/dev/null && echo \"talk is installed\" \nNothing should be returned.",
        "Remediation": "Uninstall talk: \n# apt purge talk",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1543, \nT1543.002 \nTA0006, TA0008 \nM1041, M1042"
    },
    {
        "Title": "2.2.4 Ensure telnet client is not installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The inetutils-telnet package contains the telnet client, which allows users to start \nconnections to other systems via the telnet protocol.",
        "Rationale": "The telnet protocol is insecure and unencrypted. The use of an unencrypted \ntransmission medium could allow an unauthorized user to steal credentials. The ssh \npackage provides an encrypted session and stronger security and is included in most \nLinux distributions. \nImpact: \nMany insecure service clients are used as troubleshooting tools and in testing \nenvironments. Uninstalling them can inhibit capability to test and troubleshoot. If they \nare required it is advisable to remove the clients after use to prevent accidental or \nintentional misuse.",
        "Impact": "",
        "Audit": "Verify inetutils-telnet & telnet are not installed. Use the following command to \nprovide the needed information: \n# dpkg-query -l | grep -E 'telnet|inetutils-telnet' &>/dev/null && echo \n\"telnet is installed\" \nNothing should be returned.",
        "Remediation": "Run the following commands to uninstall telnet & inetutils-telnet: \n# apt purge telnet \n# apt purge inetutils-telnet",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7, CM-11",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1040, T1040.000, T1203, \nT1203.000, T1543, \nT1543.002 \nTA0006, TA0008 \nM1041, M1042"
    },
    {
        "Title": "2.2.5 Ensure ldap client is not installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for \nNIS/YP. It is a service that provides a method for looking up information from a central \ndatabase.",
        "Rationale": "If the system will not need to act as an LDAP client, it is recommended that the software \nbe removed to reduce the potential attack surface. \nImpact: \nRemoving the LDAP client will prevent or inhibit using LDAP for authentication in your \nenvironment.",
        "Impact": "",
        "Audit": "Verify that ldap-utils is not installed. Use the following command to provide the \nneeded information: \n# dpkg-query -s ldap-utils &>/dev/null && echo \"ldap-utils is installed\" \nNothing should be returned.",
        "Remediation": "Uninstall ldap-utils: \n# apt purge ldap-utils",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "2.2.6 Ensure ftp client is not installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "tnftp an enhanced FTP client, is the user interface to the Internet standard File \nTransfer Protocol. The program allows a user to transfer files to and from a remote \nnetwork site.",
        "Rationale": "Unless there is a need to run the system using Internet standard File Transfer Protocol \n(for example, to allow anonymous downloads), it is recommended that the package be \nremoved to reduce the potential attack surface.",
        "Impact": "",
        "Audit": "Verify tnftp & ftp is not installed. Use the following command to provide the needed \ninformation: \n# dpkg-query -l | grep -E 'ftp|tnftp' &>/dev/null && echo \"ftp is installed\" \nNothing should be returned.",
        "Remediation": "Run the following commands to uninstall tnftp & ftp: \n# apt purge ftp \n# apt purge tnftp",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7, CM-11",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1203, T1203.000, T1543, \nT1543.002 \nTA0008 \nM1042"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "2.3.1.1 Ensure a single time synchronization daemon is in use \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "System time should be synchronized between all systems in an environment. This is \ntypically done by establishing an authoritative time server or set of servers and having \nall systems synchronize their clocks to them. \nNote: \n\u2022 \nOn virtual systems where host based time synchronization is available \nconsult your virtualization software documentation and verify that host \nbased synchronization is in use and follows local site policy. In this \nscenario, this section should be skipped  \n\u2022 \nOnly one time synchronization method should be in use on the system. \nConfiguring multiple time synchronization methods could lead to unexpected or \nunreliable results",
        "Rationale": "Time synchronization is important to support time sensitive security mechanisms and \nensures log files have consistent time records across the enterprise, which aids in \nforensic investigations.",
        "Impact": "",
        "Audit": "On physical systems, and virtual systems where host based time synchronization is not \navailable. \nOne of the two time synchronization daemons should be available; chrony or systemd-\ntimesyncd \nRun the following script to verify that a single time synchronization daemon is available \non the system: \n \n#!/usr/bin/env bash \n \n{ \n    l_output=\"\" l_output2=\"\" \n    service_not_enabled_chk() \n    { \n        l_out2=\"\" \n        if systemctl is-enabled \"$l_service_name\" 2>/dev/null | grep -q 'enabled'; then \n            l_out2=\"$l_out2\\n  - Daemon: \\\"$l_service_name\\\" is enabled on the system\" \n        fi \n        if systemctl is-active \"$l_service_name\" 2>/dev/null | grep -q '^active'; then \n            l_out2=\"$l_out2\\n  - Daemon: \\\"$l_service_name\\\" is active on the system\" \n        fi \n    }    \n    l_service_name=\"systemd-timesyncd.service\" # Check systemd-timesyncd daemon \n    service_not_enabled_chk \n    if [ -n \"$l_out2\" ]; then \n        l_timesyncd=\"y\" \n        l_out_tsd=\"$l_out2\" \n    else \n        l_timesyncd=\"n\" \n        l_out_tsd=\"\\n  - Daemon: \\\"$l_service_name\\\" is not enabled and not active on the system\" \n    fi \n    l_service_name=\"chrony.service\" # Check chrony \n    service_not_enabled_chk \n    if [ -n \"$l_out2\" ]; then \n        l_chrony=\"y\" \n        l_out_chrony=\"$l_out2\" \n    else \n        l_chrony=\"n\" \n        l_out_chrony=\"\\n  - Daemon: \\\"$l_service_name\\\" is not enabled and not active on the \nsystem\" \n    fi \n    l_status=\"$l_timesyncd$l_chrony\" \n    case \"$l_status\" in \n        yy) \n            l_output2=\" - More than one time sync daemon is in use on the \nsystem$l_out_tsd$l_out_chrony\" \n            ;; \n        nn) \n            l_output2=\" - No time sync daemon is in use on the system$l_out_tsd$l_out_chrony\" \n            ;; \n        yn|ny) \n            l_output=\" - Only one time sync daemon is in use on the \nsystem$l_out_tsd$l_out_chrony\" \n            ;; \n        *) \n            l_output2=\" - Unable to determine time sync daemon(s) status\" \n            ;; \n    esac \n \n    if [ -z \"$l_output2\" ]; then \n        echo -e \"\\n- Audit Result:\\n  ** PASS **\\n$l_output\\n\" \n    else \n        echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - * Reasons for audit failure * \n:\\n$l_output2\\n\" \n    fi \n} \nNote: Follow the guidance in the subsection for the time synchronization daemon \navailable on the system and skip the other time synchronization daemon subsection.",
        "Remediation": "On physical systems, and virtual systems where host based time synchronization is not \navailable. \nSelect one of the two time synchronization daemons; chrony (1) or systemd-\ntimesyncd (2) and following the remediation procedure for the selected daemon. \nNote: enabling more than one synchronization daemon could lead to unexpected or \nunreliable results: \n1. chrony \nRun the following command to install chrony: \n# apt install chrony  \nRun the following commands to stop and mask the systemd-timesyncd daemon: \n# systemctl stop systemd-timesyncd.service \n \n# systemctl mask systemd-timesyncd.service \nNote: \n\u2022 \nSubsection: Configure chrony should be followed \n\u2022 \nSubsection: Configure systemd-timesyncd should be skipped \n \n2. systemd-timesyncd \nRun the following command to remove the chrony package: \n# apt purge chrony \n# apt autoremove chrony \nNote: \n\u2022 \nSubsection: Configure systemd-timesyncd should be followed \n\u2022 \nSubsection: Configure chrony should be skipped",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3, AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.4 Standardize Time Synchronization \n \nStandardize time synchronization. Configure at least two synchronized time \nsources across enterprise assets, where supported. \n \n\u25cf \n\u25cf \nv7 \n6.1 Utilize Three Synchronized Time Sources \n \nUse at least three synchronized time sources from which all servers and \nnetwork devices retrieve time information on a regular basis so that timestamps \nin logs are consistent. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.001 \nTA0005"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "2.3.2.1 Ensure systemd-timesyncd configured with authorized \ntimeserver (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "NTP= \n\u2022 \nA space-separated list of NTP server host names or IP addresses. During \nruntime this list is combined with any per-interface NTP servers acquired from \nsystemd-networkd.service(8). systemd-timesyncd will contact all configured \nsystem or per-interface servers in turn, until one responds. When the empty \nstring is assigned, the list of NTP servers is reset, and all prior assignments will \nhave no effect. This setting defaults to an empty list. \nFallbackNTP= \n\u2022 \nA space-separated list of NTP server host names or IP addresses to be used as \nthe fallback NTP servers. Any per-interface NTP servers obtained from systemd-\nnetworkd.service(8) take precedence over this setting, as do any servers set via \nNTP= above. This setting is hence only relevant if no other NTP server \ninformation is known. When the empty string is assigned, the list of NTP servers \nis reset, and all prior assignments will have no effect. If this option is not given, a \ncompiled-in list of NTP servers is used.",
        "Rationale": "Time synchronization is important to support time sensitive security mechanisms and to \nensure log files have consistent time records across the enterprise to aid in forensic \ninvestigations",
        "Impact": "",
        "Audit": "Run the following command to verify the NTP and/or FallbackNTP option is set to local \nsite approved authoritative time server(s): \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); a_parlist=(\"NTP=[^#\\n\\r]+\" \"FallbackNTP=[^#\\n\\r]+\") \n   l_systemd_config_file=\"/etc/systemd/timesyncd.conf\" # Main systemd configuration file \n   f_config_file_parameter_chk() \n   { \n      unset A_out; declare -A A_out # Check config file(s) setting \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_systemd_parameter=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               grep -Piq -- \"^\\h*$l_systemd_parameter_name\\b\" <<< \"$l_systemd_parameter\" && \nA_out+=([\"$l_systemd_parameter\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdanalyze\" cat-config \"$l_systemd_config_file\" | grep -Pio \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output \n         while IFS=\"=\" read -r l_systemd_file_parameter_name l_systemd_file_parameter_value; do \n            l_systemd_file_parameter_name=\"${l_systemd_file_parameter_name// /}\" \n            l_systemd_file_parameter_value=\"${l_systemd_file_parameter_value// /}\" \n            if grep -Piq \"\\b$l_systemd_parameter_value\\b\" <<< \"$l_systemd_file_parameter_value\"; \nthen \n               a_output+=(\" - \\\"$l_systemd_parameter_name\\\" is correctly set to \n\\\"$l_systemd_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_systemd_parameter_name\\\" is incorrectly set to \n\\\"$l_systemd_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\" and should have a value matching: \n\\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Pio -- \"^\\h*$l_systemd_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_systemd_parameter_name\\\" is not set in an included file\" \\ \n         \"   *** Note: \\\"$l_systemd_parameter_name\\\" May be set in a file that's ignored by load \nprocedure ***\") \n      fi \n   } \n   l_systemdanalyze=\"$(readlink -f /bin/systemd-analyze)\" \n   while IFS=\"=\" read -r l_systemd_parameter_name l_systemd_parameter_value; do # Assess and \ncheck parameters \n      l_systemd_parameter_name=\"${l_systemd_parameter_name// /}\"; \nl_systemd_parameter_value=\"${l_systemd_parameter_value// /}\" \n      l_value_out=\"${l_systemd_parameter_value//-/ through }\"; l_value_out=\"${l_value_out//|/ or \n}\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      f_config_file_parameter_chk \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit failure:\" \n\"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\" \n   fi \n} \nExample output: \n \n- Audit Result: \n  ** PASS ** \n - \"NTP\" is correctly set to \"time.nist.gov\" \n    in \"/etc/systemd/timesyncd.conf.d/60-timesyncd.conf\" \n - \"FallbackNTP\" is correctly set to \"time-a-g.nist.gov\" \n    in \"/etc/systemd/timesyncd.conf.d/60-timesyncd.conf\" \nNote: Please ensure the output for NTP and/or FallbackNTP is in accordance with local \nsite policy. The timeservers in the example output are provided as an example of \npossible timeservers and they may not follow local site policy.",
        "Remediation": "Set NTP and/or FallbackNPT parameters to local site approved authoritative time \nserver(s) in /etc/systemd/timesyncd.conf or a file in \n/etc/systemd/timesyncd.conf.d/ ending in .conf in the [Time] section: \nExample file: \n[Time] \nNTP=time.nist.gov # Uses the generic name for NIST's time servers   \nFallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space \nseparated list of NIST time servers \nExample script to create systemd drop-in configuration file: \n#!/usr/bin/env bash \n \n{ \n   a_settings=(\"NTP=time.nist.gov\" \"FallbackNTP=time-a-g.nist.gov time-b-\ng.nist.gov time-c-g.nist.gov\") \n   [ ! -d /etc/systemd/timesyncd.conf.d/ ] && mkdir \n/etc/systemd/timesyncd.conf.d/ \n   if grep -Psq -- '^\\h*\\[Time\\]' /etc/systemd/timesyncd.conf.d/60-\ntimesyncd.conf; then \n      printf '%s\\n' \"\" \"${a_settings[@]}\" >> \n/etc/systemd/timesyncd.conf.d/60-timesyncd.conf \n   else \n      printf '%s\\n' \"\" \"[Time]\" \"${a_settings[@]}\" >> \n/etc/systemd/timesyncd.conf.d/60-timesyncd.conf \n   fi \n} \nNote: If this setting appears in a canonically later file, or later in the same file, the \nsetting will be overwritten \nRun to following command to update the parameters in the service: \n# systemctl reload-or-restart systemd-journald \nDefault Value: \n#NTP= \n#FallbackNTP=",
        "References": "1. https://www.freedesktop.org/software/systemd/man/timesyncd.conf.html \n2. https://tf.nist.gov/tf-cgi/servers.cgi \n3. NIST SP 800-53 Rev. 5: AU-7, AU-8",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.4 Standardize Time Synchronization \n \nStandardize time synchronization. Configure at least two synchronized time \nsources across enterprise assets, where supported. \n \n\u25cf \n\u25cf \nv7 \n6.1 Utilize Three Synchronized Time Sources \n \nUse at least three synchronized time sources from which all servers and \nnetwork devices retrieve time information on a regular basis so that timestamps \nin logs are consistent. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.001 \nTA0002 \nM1022"
    },
    {
        "Title": "2.3.2.2 Ensure systemd-timesyncd is enabled and running \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "systemd-timesyncd is a daemon that has been added for synchronizing the system \nclock across the network",
        "Rationale": "systemd-timesyncd needs to be enabled and running in order to synchronize the system \nto a timeserver. \nTime synchronization is important to support time sensitive security mechanisms and to \nensure log files have consistent time records across the enterprise to aid in forensic \ninvestigations",
        "Impact": "",
        "Audit": "- IF - systemd-timesyncd is in use on the system, run the following commands: \nRun the following command to verify that the systemd-timesyncd service is enabled: \n# systemctl is-enabled systemd-timesyncd.service \n \nenabled \nRun the following command to verify that the systemd-timesyncd service is active: \n# systemctl is-active systemd-timesyncd.service \n \nactive",
        "Remediation": "- IF - systemd-timesyncd is in use on the system, run the following commands: \nRun the following command to unmask systemd-timesyncd.service: \n# systemctl unmask systemd-timesyncd.service \nRun the following command to enable and start systemd-timesyncd.service: \n# systemctl --now enable systemd-timesyncd.service \n- OR - \nIf another time synchronization service is in use on the system, run the following \ncommand to stop and mask systemd-timesyncd: \n# systemctl --now mask systemd-timesyncd.service",
        "References": "1. NIST SP 800-53 Rev. 5: AU-7, AU-8",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.4 Standardize Time Synchronization \n \nStandardize time synchronization. Configure at least two synchronized time \nsources across enterprise assets, where supported. \n \n\u25cf \n\u25cf \nv7 \n6.1 Utilize Three Synchronized Time Sources \n \nUse at least three synchronized time sources from which all servers and \nnetwork devices retrieve time information on a regular basis so that timestamps \nin logs are consistent. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.001 \nTA0002 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "2.3.3.1 Ensure chrony is configured with authorized timeserver \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "\u2022 \nserver \no The server directive specifies an NTP server which can be used as a time \nsource. The client-server relationship is strictly hierarchical: a client might \nsynchronize its system time to that of the server, but the server\u2019s system \ntime will never be influenced by that of a client. \no This directive can be used multiple times to specify multiple servers. \no The directive is immediately followed by either the name of the server, or \nits IP address. \n\u2022 \npool \no The syntax of this directive is similar to that for the server directive, except \nthat it is used to specify a pool of NTP servers rather than a single NTP \nserver. The pool name is expected to resolve to multiple addresses which \nmight change over time. \no This directive can be used multiple times to specify multiple pools. \no All options valid in the server directive can be used in this directive too.",
        "Rationale": "Time synchronization is important to support time sensitive security mechanisms and to \nensure log files have consistent time records across the enterprise to aid in forensic \ninvestigations",
        "Impact": "",
        "Audit": "- IF - chrony is in use on the system, run the following script to ensure chrony is \nconfigured with an authorized timeserver: \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_config_files=(\"/etc/chrony/chrony.conf\")  \n   l_include='(confdir|sourcedir)' l_parameter_name='(server|pool)' \nl_parameter_value='.+' \n   while IFS= read -r l_conf_loc; do \n      l_dir=\"\" l_ext=\"\" \n      if [ -d \"$l_conf_loc\" ]; then \n         l_dir=\"$l_conf_loc\" l_ext=\"*\" \n      elif  grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' <<< \"$l_conf_loc\" || [ -f \n\"$(readlink -f \"$l_conf_loc\")\" ]; then \n         l_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\" \n      fi \n      if [[ -n \"$l_dir\" && -n \"$l_ext\" ]]; then \n         while IFS= read -r -d $'\\0' l_file_name; do \n            [ -f \"$(readlink -f \"$l_file_name\")\" ] && \na_config_files+=(\"$(readlink -f \"$l_file_name\")\") \n         done < <(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 \n2>/dev/null) \n      fi \n   done < <(awk '$1~/^\\s*'\"$l_include\"'$/{print $2}' \"${a_config_files[*]}\" \n2>/dev/null) \n   for l_file in \"${a_config_files[@]}\"; do \n      l_parameter_line=\"$(grep -Psi \n'^\\h*'\"$l_parameter_name\"'(\\h+|\\h*:\\h*)'\"$l_parameter_value\"'\\b' \"$l_file\")\" \n      [ -n \"$l_parameter_line\" ] && a_output+=(\"  - Parameter: \\\"$(tr -d '()' \n<<< ${l_parameter_name//|/ or })\\\"\" \\ \n      \"    Exists in the file: \\\"$l_file\\\" as:\" \"$l_parameter_line\") \n   done \n   [ \"${#a_output[@]}\" -le \"0\" ] && a_output2+=(\"  - Parameter: \\\"$(tr -d \n'()' <<< ${l_parameter_name//|/ or })\\\"\" \\ \n   \"    Does not exist in the chrony configuration\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n   fi \n}",
        "Remediation": "Edit /etc/chrony/chrony.conf or a file ending in .sources in \n/etc/chrony/sources.d/ and add or edit server or pool lines as appropriate \naccording to local site policy: \nEdit the Chrony configuration and add or edit the server and/or pool lines returned by \nthe Audit Procedure as appropriate according to local site policy \n<[server|pool]> <[remote-server|remote-pool]> \nExample script to add a drop-in configuration for the pool directive: \n#!/usr/bin/env bash \n \n{ \n   [ ! -d \"/etc/chrony/sources.d/\" ] && mkdir /etc/chrony/sources.d/ \n   printf '%s\\n' \"\" \"#The maxsources option is unique to the pool directive\" \n\\ \n   \"pool time.nist.gov iburst maxsources 4\" >> /etc/chrony/sources.d/60-\nsources.sources \n   chronyc reload sources &>/dev/null \n} \nExample script to add a drop-in configuration for the server directive: \n#!/usr/bin/env bash \n \n{ \n   [ ! -d \"/etc/chrony/sources.d/\" ] && mkdir /etc/chrony/sources.d/ \n   printf '%s\\n' \"\" \"server time-a-g.nist.gov iburst\" \"server 132.163.97.3 \niburst\" \\ \n   \"server time-d-b.nist.gov iburst\" >> /etc/chrony/sources.d/60-\nsources.sources \n   chronyc reload sources &>/dev/null \n} \nRun the following command to reload the chronyd config: \n# systemctl reload-or-restart chronyd",
        "References": "1. chrony.conf(5) Manual Page \n2. https://tf.nist.gov/tf-cgi/servers.cgi \n3. NIST SP 800-53 Rev. 5: AU-3, AU-12 \nAdditional Information: \nIf pool and/or server directive(s) are set in a sources file in /etc/chrony/sources.d, \nthe line: \nsourcedir /etc/chrony/sources.d \nmust be present in /etc/chrony/chrony.conf",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.4 Standardize Time Synchronization \n \nStandardize time synchronization. Configure at least two synchronized time \nsources across enterprise assets, where supported. \n \n\u25cf \n\u25cf \nv7 \n6.1 Utilize Three Synchronized Time Sources \n \nUse at least three synchronized time sources from which all servers and \nnetwork devices retrieve time information on a regular basis so that timestamps \nin logs are consistent. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.001 \nTA0002 \nM1022"
    },
    {
        "Title": "2.3.3.2 Ensure chrony is running as user _chrony (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The chrony package is installed with a dedicated user account _chrony. This account \nis granted the access required by the chronyd service",
        "Rationale": "The chronyd service should run with only the required privlidges",
        "Impact": "",
        "Audit": "- IF - chrony is in use on the system, run the following command to verify the chronyd \nservice is being run as the _chrony user: \n# ps -ef | awk '(/[c]hronyd/ && $1!=\"_chrony\") { print $1 }' \nNothing should be returned",
        "Remediation": "Add or edit the user line to /etc/chrony/chrony.conf or a file ending in .conf in \n/etc/chrony/conf.d/: \nuser _chrony \n- OR - \nIf another time synchronization service is in use on the system, run the following \ncommand to remove chrony from the system: \n# apt purge chrony \n# apt autoremove chrony \nDefault Value: \nuser _chrony",
        "References": "1. NIST SP 800-53 Rev. 5: AU-8",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.4 Standardize Time Synchronization \n \nStandardize time synchronization. Configure at least two synchronized time \nsources across enterprise assets, where supported. \n \n\u25cf \n\u25cf \nv7 \n6.1 Utilize Three Synchronized Time Sources \n \nUse at least three synchronized time sources from which all servers and \nnetwork devices retrieve time information on a regular basis so that timestamps \nin logs are consistent. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.001 \nTA0002 \nM1022"
    },
    {
        "Title": "2.3.3.3 Ensure chrony is enabled and running (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "chrony is a daemon for synchronizing the system clock across the network",
        "Rationale": "chrony needs to be enabled and running in order to synchronize the system to a \ntimeserver. \nTime synchronization is important to support time sensitive security mechanisms and to \nensure log files have consistent time records across the enterprise to aid in forensic \ninvestigations",
        "Impact": "",
        "Audit": "- IF - chrony is in use on the system, run the following commands: \nRun the following command to verify that the chrony service is enabled: \n# systemctl is-enabled chrony.service \n \nenabled \nRun the following command to verify that the chrony service is active: \n# systemctl is-active chrony.service \n \nactive",
        "Remediation": "- IF - chrony is in use on the system, run the following commands: \nRun the following command to unmask chrony.service: \n# systemctl unmask chrony.service \nRun the following command to enable and start chrony.service: \n# systemctl --now enable chrony.service \n- OR - \nIf another time synchronization service is in use on the system, run the following \ncommand to remove chrony: \n# apt purge chrony \n# apt autoremove chrony",
        "References": "1. NIST SP 800-53 Rev. 5: AU-8",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.4 Standardize Time Synchronization \n \nStandardize time synchronization. Configure at least two synchronized time \nsources across enterprise assets, where supported. \n \n\u25cf \n\u25cf \nv7 \n6.1 Utilize Three Synchronized Time Sources \n \nUse at least three synchronized time sources from which all servers and \nnetwork devices retrieve time information on a regular basis so that timestamps \nin logs are consistent. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.001 \nTA0002 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "2.4.1.1 Ensure cron daemon is enabled and active (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The cron daemon is used to execute batch jobs on the system.",
        "Rationale": "While there may not be user jobs that need to be run on the system, the system does \nhave maintenance jobs that may include security monitoring that have to run, and cron \nis used to execute them.",
        "Impact": "",
        "Audit": "- IF - cron is installed on the system: \nRun the following command to verify cron is enabled: \n# systemctl list-unit-files | awk '$1~/^crond?\\.service/{print $2}' \n \nenabled \nRun the following command to verify that cron is active: \n# systemctl list-units | awk '$1~/^crond?\\.service/{print $3}' \n \nactive",
        "Remediation": "- IF - cron is installed on the system: \nRun the following commands to unmask, enable, and start cron: \n# systemctl unmask \"$(systemctl list-unit-files | awk \n'$1~/^crond?\\.service/{print $1}')\" \n# systemctl --now enable \"$(systemctl list-unit-files | awk \n'$1~/^crond?\\.service/{print $1}')\"",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.001 \nTA0005 \nM1018",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "2.4.1.2 Ensure permissions on /etc/crontab are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/crontab file is used by cron to control its own jobs. The commands in this \nitem make sure that root is the user and group owner of the file and that only the owner \ncan access the file.",
        "Rationale": "This file contains information on what system jobs are run by cron. Write access to \nthese files could provide unprivileged users with the ability to elevate their privileges. \nRead access to these files could provide users with the ability to gain insight on system \njobs that run on the system and could provide them a way to gain unauthorized \nprivileged access.",
        "Impact": "",
        "Audit": "- IF - cron is installed on the system: \nRun the following command and verify Uid and Gid are both 0/root and Access does \nnot grant permissions to group or other : \n# stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/crontab \n \nAccess: (600/-rw-------) Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "- IF - cron is installed on the system: \nRun the following commands to set ownership and permissions on /etc/crontab: \n# chown root:root /etc/crontab \n# chmod og-rwx /etc/crontab \nDefault Value: \nAccess: (644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1053, T1053.003 \nTA0002, TA0007 \nM1018"
    },
    {
        "Title": "2.4.1.3 Ensure permissions on /etc/cron.hourly are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "This directory contains system cron jobs that need to run on an hourly basis. The files \nin this directory cannot be manipulated by the crontab command, but are instead \nedited by system administrators using a text editor. The commands below restrict \nread/write and search access to user and group root, preventing regular users from \naccessing this directory.",
        "Rationale": "Granting write access to this directory for non-privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or \ncircumvent auditing controls.",
        "Impact": "",
        "Audit": "- IF - cron is installed on the system: \nRun the following command and verify Uid and Gid are both 0/root and Access does \nnot grant permissions to group or other: \n# stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.hourly/ \n \nAccess: (700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "- IF - cron is installed on the system: \nRun the following commands to set ownership and permissions on the \n/etc/cron.hourly directory: \n# chown root:root /etc/cron.hourly/ \n# chmod og-rwx /etc/cron.hourly/ \nDefault Value: \nAccess: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1053, T1053.003 \nTA0002, TA0007 \nM1018"
    },
    {
        "Title": "2.4.1.4 Ensure permissions on /etc/cron.daily are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/cron.daily directory contains system cron jobs that need to run on a daily \nbasis. The files in this directory cannot be manipulated by the crontab command, but \nare instead edited by system administrators using a text editor. The commands below \nrestrict read/write and search access to user and group root, preventing regular users \nfrom accessing this directory.",
        "Rationale": "Granting write access to this directory for non-privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or \ncircumvent auditing controls.",
        "Impact": "",
        "Audit": "- IF - cron is installed on the system: \nRun the following command and verify Uid and Gid are both 0/root and Access does \nnot grant permissions to group or other: \n# stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.daily/ \n \nAccess: (700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "- IF - cron is installed on the system: \nRun the following commands to set ownership and permissions on the \n/etc/cron.daily directory: \n# chown root:root /etc/cron.daily/ \n# chmod og-rwx /etc/cron.daily/ \nDefault Value: \nAccess: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1053, T1053.003 \nTA0002, TA0007 \nM1018"
    },
    {
        "Title": "2.4.1.5 Ensure permissions on /etc/cron.weekly are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/cron.weekly directory contains system cron jobs that need to run on a \nweekly basis. The files in this directory cannot be manipulated by the crontab \ncommand but are instead edited by system administrators using a text editor. The \ncommands below restrict read/write and search access to user and group root, \npreventing regular users from accessing this directory.",
        "Rationale": "Granting write access to this directory for non-privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or \ncircumvent auditing controls.",
        "Impact": "",
        "Audit": "- IF - cron is installed on the system: \nRun the following command and verify Uid and Gid are both 0/root and Access does \nnot grant permissions to group or other: \n# stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.weekly/ \n \nAccess: (700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "- IF - cron is installed on the system: \nRun the following commands to set ownership and permissions on the \n/etc/cron.weekly directory: \n# chown root:root /etc/cron.weekly/ \n# chmod og-rwx /etc/cron.weekly/ \nDefault Value: \nAccess: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1053, T1053.003 \nTA0002, TA0007 \nM1018 \n \n2.4.1.6 Ensure permissions on /etc/cron.monthly are configured \n(Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nThe /etc/cron.monthly directory contains system cron jobs that need to run on a \nmonthly basis. The files in this directory cannot be manipulated by the crontab \ncommand but are instead edited by system administrators using a text editor. The \ncommands below restrict read/write and search access to user and group root, \npreventing regular users from accessing this directory. \nRationale: \nGranting write access to this directory for non-privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or \ncircumvent auditing controls. \nAudit: \n- IF - cron is installed on the system: \nRun the following command and verify Uid and Gid are both 0/root and Access does \nnot grant permissions to group or other: \n# stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.monthly/ \n \nAccess: (700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root) \nRemediation: \n- IF - cron is installed on the system: \nRun the following commands to set ownership and permissions on the \n/etc/cron.monthly directory: \n# chown root:root /etc/cron.monthly/ \n# chmod og-rwx /etc/cron.monthly/ \nDefault Value: \nAccess: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root) \nReferences: \n1. NIST SP 800-53 Rev. 5: AC-3. MP-2 \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1053, T1053.003 \nTA0002, TA0007 \nM1018"
    },
    {
        "Title": "2.4.1.7 Ensure permissions on /etc/cron.d are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/cron.d directory contains system cron jobs that need to run in a similar \nmanner to the hourly, daily weekly and monthly jobs from /etc/crontab, but require \nmore granular control as to when they run. The files in this directory cannot be \nmanipulated by the crontab command but are instead edited by system administrators \nusing a text editor. The commands below restrict read/write and search access to user \nand group root, preventing regular users from accessing this directory.",
        "Rationale": "Granting write access to this directory for non-privileged users could provide them the \nmeans for gaining unauthorized elevated privileges. Granting read access to this \ndirectory could give an unprivileged user insight in how to gain elevated privileges or \ncircumvent auditing controls.",
        "Impact": "",
        "Audit": "- IF - cron is installed on the system: \nRun the following command and verify Uid and Gid are both 0/root and Access does \nnot grant permissions to group or other: \n# stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.d/ \n \nAccess: (700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "- IF - cron is installed on the system: \nRun the following commands to set ownership and permissions on the /etc/cron.d \ndirectory: \n# chown root:root /etc/cron.d/ \n# chmod og-rwx /etc/cron.d/ \nDefault Value: \nAccess: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1053, T1053.003 \nTA0002, TA0007 \nM1018"
    },
    {
        "Title": "2.4.1.8 Ensure crontab is restricted to authorized users \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "crontab is the program used to install, deinstall, or list the tables used to drive the cron \ndaemon. Each user can have their own crontab, and though these are files in \n/var/spool/cron/crontabs, they are not intended to be edited directly. \nIf the /etc/cron.allow file exists, then you must be listed (one user per line) therein in \norder to be allowed to use this command. If the /etc/cron.allow file does not exist but \nthe /etc/cron.deny file does exist, then you must not be listed in the /etc/cron.deny \nfile in order to use this command. \nIf neither of these files exists, then depending on site-dependent configuration \nparameters, only the super user will be allowed to use this command, or all users will be \nable to use this command. \nIf both files exist then /etc/cron.allow takes precedence. Which means that \n/etc/cron.deny is not considered and your user must be listed in /etc/cron.allow \nin order to be able to use the crontab. \nRegardless of the existence of any of these files, the root administrative user is always \nallowed to setup a crontab. \nThe files /etc/cron.allow and /etc/cron.deny, if they exist, must be either world-\nreadable, or readable by group crontab. If they are not, then cron will deny access to \nall users until the permissions are fixed. \nThere is one file for each user's crontab under the /var/spool/cron/crontabs \ndirectory. Users are not allowed to edit the files under that directory directly to ensure \nthat only users allowed by the system to run periodic tasks can add them, and only \nsyntactically correct crontabs will be written there. This is enforced by having the \ndirectory writable only by the crontab group and configuring crontab command with the \nsetgid bid set for that specific group. \nNote: \n\u2022 \nEven though a given user is not listed in cron.allow, cron jobs can still be run \nas that user \n\u2022 \nThe files /etc/cron.allow and /etc/cron.deny, if they exist, only controls \nadministrative access to the crontab command for scheduling and modifying cron \njobs",
        "Rationale": "On many systems, only the system administrator is authorized to schedule cron jobs. \nUsing the cron.allow file to control who can run cron jobs enforces this policy. It is \neasier to manage an allow list than a deny list. In a deny list, you could potentially add a \nuser ID to the system and forget to add it to the deny files.",
        "Impact": "",
        "Audit": "- IF - cron is installed on the system: \nRun the following command to verify /etc/cron.allow: \n\u2022 \nExists \n\u2022 \nIs mode 0640 or more restrictive \n\u2022 \nIs owned by the user root \n\u2022 \nIs group owned by the group root - OR - the group crontab \n# stat -Lc 'Access: (%a/%A) Owner: (%U) Group: (%G)' /etc/cron.allow \nVerify the returned value is: \nAccess: (640/-rw-r-----) Owner: (root) Group: (root) \n- OR - \nAccess: (640/-rw-r-----) Owner: (root) Group: (crontab) \nRun the following command to verify either cron.deny doesn't exist or is: \n\u2022 \nMode 0640 or more restrictive \n\u2022 \nOwned by the user root \n\u2022 \nIs group owned by the group root - OR - the group crontab \n# [ -e \"/etc/cron.deny\" ] && stat -Lc 'Access: (%a/%A) Owner: (%U) Group: \n(%G)' /etc/cron.deny \nVerify either nothing is returned - OR - returned value is one of the following: \nAccess: (640/-rw-r-----) Owner: (root) Group: (root) \n- OR - \nAccess: (640/-rw-r-----) Owner: (root) Group: (crontab) \nNote: On systems where cron is configured to use the group crontab, if the group \ncrontab is not set as the owner of cron.allow, then cron will deny access to all users \nand you will see an error similar to: \nYou (<USERNAME>) are not allowed to use this program (crontab) \nSee crontab(1) for more information",
        "Remediation": "- IF - cron is installed on the system: \nRun the following script to: \n\u2022 \nCreate /etc/cron.allow if it doesn't exist \n\u2022 \nChange owner to user root \n\u2022 \nChange group owner to group root - OR - group crontab if it exists \n\u2022 \nChange mode to 640 or more restrictive \n#!/usr/bin/env bash \n \n{ \n   [ ! -e \"/etc/cron.deny\" ] && touch /etc/cron.allow \n   chmod u-x,g-wx,o-rwx /etc/cron.allow \n   if grep -Pq -- '^\\h*crontab\\:' /etc/group; then \n      chown root:crontab /etc/cron.allow \n   else \n      chown root:root /etc/cron.allow \n   fi \n} \n- IF - /etc/cron.deny exists, run the following script to: \n\u2022 \nChange owner to user root \n\u2022 \nChange group owner to group root - OR - group crontab if it exists \n\u2022 \nChange mode to 640 or more restrictive \n#!/usr/bin/env bash \n \n{ \n   if [ -e \"/etc/cron.deny\" ]; then \n      chmod u-x,g-wx,o-rwx /etc/cron.deny \n      if grep -Pq -- '^\\h*crontab\\:' /etc/group; then \n         chown root:crontab /etc/cron.deny \n      else \n         chown root:root /etc/cron.deny \n      fi \n   fi \n} \nNote: On systems where cron is configured to use the group crontab, if the group \ncrontab is not set as the owner of cron.allow, then cron will deny access to all users \nand you will see an error similar to: \nYou (<USERNAME>) are not allowed to use this program (crontab) \nSee crontab(1) for more information",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1053, T1053.003 \nTA0002 \nM1018"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "2.4.2.1 Ensure at is restricted to authorized users (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "at allows fairly complex time specifications, extending the POSIX.2 standard. It accepts \ntimes of the form HH:MM to run a job at a specific time of day. (If that time is already \npast, the next day is assumed.) You may also specify midnight, noon, or teatime (4pm) \nand you can have a time-of-day suffixed with AM or PM for running in the morning or \nthe evening. You can also say what day the job will be run, by giving a date in the form \nmonth-name day with an optional year, or giving a date of the form MMDD[CC]YY, \nMM/DD/[CC]YY, DD.MM.[CC]YY or [CC]YY-MM-DD. The specification of a date must \nfollow the specification of the time of day. You can also give times like now + count \ntime-units, where the time-units can be minutes, hours, days, or weeks and you can tell \nat to run the job today by suffixing the time with today and to run the job tomorrow by \nsuffixing the time with tomorrow. \nThe /etc/at.allow and /etc/at.deny files determine which user can submit \ncommands for later execution via at or batch. The format of the files is a list of \nusernames, one on each line. Whitespace is not permitted. If the file /etc/at.allow \nexists, only usernames mentioned in it are allowed to use at. If /etc/at.allow does \nnot exist, /etc/at.deny is checked, every username not mentioned in it is then allowed \nto use at. An empty /etc/at.deny means that every user may use at. If neither file \nexists, only the superuser is allowed to use at.",
        "Rationale": "On many systems, only the system administrator is authorized to schedule at jobs. \nUsing the at.allow file to control who can run at jobs enforces this policy. It is easier \nto manage an allow list than a deny list. In a deny list, you could potentially add a user \nID to the system and forget to add it to the deny files.",
        "Impact": "",
        "Audit": "- IF - at is installed on the system: \nRun the following command to verify /etc/at.allow: \n\u2022 \nExists \n\u2022 \nIs mode 0640 or more restrictive \n\u2022 \nIs owned by the user root \n\u2022 \nIs group owned by the group daemon or group root \n# stat -Lc 'Access: (%a/%A) Owner: (%U) Group: (%G)' /etc/at.allow \n \nAccess: (640/-rw-r-----) Owner: (root) Group: (daemon) \n-OR- \nAccess: (640/-rw-r-----) Owner: (root) Group: (root) \nVerify mode is 640 or more restrictive, owner is root, and group is daemon or root \nRun the following command to verify at.deny doesn't exist, -OR- is: \n\u2022 \nMode 0640 or more restrictive \n\u2022 \nOwned by the user root \n\u2022 \nGroup owned by the group daemon or group root \n# [ -e \"/etc/at.deny\" ] && stat -Lc 'Access: (%a/%A) Owner: (%U) Group: (%G)' \n/etc/at.deny \n \nAccess: (640/-rw-r-----) Owner: (root) Group: (daemon) \n-OR- \nAccess: (640/-rw-r-----) Owner: (root) Group: (root) \n-OR- \nNothing is returned \nIf a value is returned, verify mode is 640 or more restrictive, owner is root, and group is \ndaemon or root",
        "Remediation": "- IF - at is installed on the system: \nRun the following script to: \n\u2022 \n/etc/at.allow: \no Create the file if it doesn't exist \no Change owner or user root \no If group daemon exists, change to group daemon, else change group to \nroot \no Change mode to 640 or more restrictive \n\u2022 \n- IF - /etc/at.deny exists: \no Change owner or user root \no If group daemon exists, change to group daemon, else change group to \nroot \no Change mode to 640 or more restrictive \n#!/usr/bin/env bash \n \n{ \n   grep -Pq -- '^daemon\\b' /etc/group && l_group=\"daemon\" || l_group=\"root\" \n   [ ! -e \"/etc/at.allow\" ] && touch /etc/at.allow \n   chown root:\"$l_group\" /etc/at.allow \n   chmod u-x,g-wx,o-rwx /etc/at.allow \n   [ -e \"/etc/at.deny\" ] && chown root:\"$l_group\" /etc/at.deny \n   [ -e \"/etc/at.deny\" ] && chmod u-x,g-wx,o-rwx /etc/at.deny \n}",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1053, T1053.003 \nTA0002 \nM1018"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "3.1.1 Ensure IPv6 status is identified (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's \ndesigned to supply IP addressing and additional security to support the predicted \ngrowth of connected devices. IPv6 is based on 128-bit addressing and can support 340 \nundecillion, which is 340,282,366,920,938,463,463,374,607,431,768,211,456 unique \naddresses. \nFeatures of IPv6 \n\u2022 \nHierarchical addressing and routing infrastructure \n\u2022 \nStatefull and Stateless configuration \n\u2022 \nSupport for quality of service (QoS) \n\u2022 \nAn ideal protocol for neighboring node interaction",
        "Rationale": "IETF RFC 4038 recommends that applications are built with an assumption of dual \nstack. It is recommended that IPv6 be enabled and configured in accordance with \nBenchmark recommendations. \n- IF - dual stack and IPv6 are not used in your environment, IPv6 may be disabled to \nreduce the attack surface of the system, and recommendations pertaining to IPv6 can \nbe skipped. \nNote: It is recommended that IPv6 be enabled and configured unless this is against \nlocal site policy \nImpact: \nIETF RFC 4038 recommends that applications are built with an assumption of dual \nstack. \nWhen enabled, IPv6 will require additional configuration to reduce risk to the system.",
        "Impact": "",
        "Audit": "Run the following script to identify if IPv6 is enabled on the system: \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" \n   ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_output=\"- IPv6 is not enabled\" \n   if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n      sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n      l_output=\"- IPv6 is not enabled\" \n   fi \n   [ -z \"$l_output\" ] && l_output=\"- IPv6 is enabled\" \n   echo -e \"\\n$l_output\\n\" \n}",
        "Remediation": "Enable or disable IPv6 in accordance with system requirements and local site policy \nDefault Value: \nIPv6 is enabled",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7 \nAdditional Information: \nHaving more addresses has grown in importance with the expansion of smart devices \nand connectivity. IPv6 provides more than enough globally unique IP addresses for \nevery networked device currently on the planet, helping ensure providers can keep pace \nwith the expected proliferation of IP-based devices.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1557, T1557.000, T1595, \nT1595.001, T1595.002 \nTA0008 \nM1042"
    },
    {
        "Title": "3.1.2 Ensure wireless interfaces are disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server",
        "Description": "Wireless networking is used when wired networks are unavailable.",
        "Rationale": "-IF- wireless is not to be used, wireless devices can be disabled to reduce the potential \nattack surface. \nImpact: \nMany if not all laptop workstations and some desktop workstations will connect via \nwireless requiring these interfaces be enabled.",
        "Impact": "",
        "Audit": "Run the following script to verify no wireless interfaces are active on the system: \n \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" l_output2=\"\" \n   module_chk() \n   { \n      # Check how module will be loaded \n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\" \n      if grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; \nthen \n         l_output=\"$l_output\\n - module: \\\"$l_mname\\\" is not loadable: \n\\\"$l_loadable\\\"\" \n      else \n         l_output2=\"$l_output2\\n - module: \\\"$l_mname\\\" is loadable: \n\\\"$l_loadable\\\"\" \n      fi \n      # Check is the module currently loaded \n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then \n         l_output=\"$l_output\\n - module: \\\"$l_mname\\\" is not loaded\" \n      else \n         l_output2=\"$l_output2\\n - module: \\\"$l_mname\\\" is loaded\" \n      fi \n      # Check if the module is deny listed \n      if modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mname\\b\"; \nthen \n         l_output=\"$l_output\\n - module: \\\"$l_mname\\\" is deny listed in: \n\\\"$(grep -Pl -- \"^\\h*blacklist\\h+$l_mname\\b\" /etc/modprobe.d/*)\\\"\" \n      else \n         l_output2=\"$l_output2\\n - module: \\\"$l_mname\\\" is not deny listed\" \n      fi \n   } \n   if [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; then \n      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name \nwireless | xargs -0 dirname); do basename \"$(readlink -f \n\"$driverdir\"/device/driver/module)\";done | sort -u) \n      for l_mname in $l_dname; do \n         module_chk \n      done \n   fi \n   # Report results. If no failures output in l_output2, we pass \n   if [ -z \"$l_output2\" ]; then \n      echo -e \"\\n- Audit Result:\\n  ** PASS **\" \n      if [ -z \"$l_output\" ]; then \n         echo -e \"\\n - System has no wireless NICs installed\" \n      else \n         echo -e \"\\n$l_output\\n\" \n      fi \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - Reason(s) for audit \nfailure:\\n$l_output2\\n\" \n      [ -n \"$l_output\" ] && echo -e \"\\n- Correctly set:\\n$l_output\\n\" \n   fi \n}",
        "Remediation": "Run the following script to disable any wireless interfaces: \n#!/usr/bin/env bash \n \n{ \n   module_fix() \n   { \n      if ! modprobe -n -v \"$l_mname\" | grep -P -- '^\\h*install \n\\/bin\\/(true|false)'; then \n         echo -e \" - setting module: \\\"$l_mname\\\" to be un-loadable\" \n         echo -e \"install $l_mname /bin/false\" >> \n/etc/modprobe.d/\"$l_mname\".conf \n      fi \n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then \n         echo -e \" - unloading module \\\"$l_mname\\\"\" \n         modprobe -r \"$l_mname\" \n      fi \n      if ! grep -Pq -- \"^\\h*blacklist\\h+$l_mname\\b\" /etc/modprobe.d/*; then \n         echo -e \" - deny listing \\\"$l_mname\\\"\" \n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mname\".conf \n      fi \n   } \n   if [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; then \n      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name \nwireless | xargs -0 dirname); do basename \"$(readlink -f \n\"$driverdir\"/device/driver/module)\";done | sort -u) \n      for l_mname in $l_dname; do \n         module_fix \n      done \n   fi \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n15.4 Disable Wireless Access on Devices if Not Required \n \nDisable wireless access on devices that do not have a business purpose for \nwireless access. \n \n \n\u25cf \nv7 \n15.5 Limit Wireless Access on Client Devices \n \nConfigure wireless access on client machines that do have an essential \nwireless business purpose, to allow access only to authorized wireless networks \nand to restrict access to other wireless networks. \n \n \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1011, T1011.000, T1595, \nT1595.001, T1595.002 \nTA0010 \nM1028 \n \n3.1.3 Ensure bluetooth services are not in use (Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 2 - Workstation \nDescription: \nBluetooth is a short-range wireless technology standard that is used for exchanging \ndata between devices over short distances. It employs UHF radio waves in the ISM \nbands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire \nconnections. \nRationale: \nAn attacker may be able to find a way to access or corrupt your data. One example of \nthis type of activity is bluesnarfing, which refers to attackers using a Bluetooth \nconnection to steal information off of your Bluetooth device. Also, viruses or other \nmalicious code can take advantage of Bluetooth technology to infect other devices. If \nyou are infected, your data may be corrupted, compromised, stolen, or lost. \nImpact: \nMany personal electronic devices (PEDs) use Bluetooth technology. For example, you \nmay be able to operate your computer with a wireless keyboard. Disabling Bluetooth will \nprevent these devices from connecting to the system. \nThere may be packages that are dependent on the bluez package. If the bluez \npackage is removed, these dependent packages will be removed as well. Before \nremoving the bluez package, review any dependent packages to determine if they are \nrequired on the system. \n-IF- a dependent package is required: stop and mask bluetooth.service leaving the \nbluez package installed. \n \n \n \nAudit: \nRun the following command to verify the bluez package is not installed: \n# dpkg-query -s bluez &>/dev/null && echo \"bluez is installed\"  \nNothing should be returned. \n- OR - \n- IF - the bluez package is required as a dependency: \nRun the following command to verify bluetooth.service is not enabled: \n# systemctl is-enabled bluetooth.service 2>/dev/null | grep 'enabled' \nNothing should be returned. \nRun the following command to verify bluetooth.service is not active: \n# systemctl is-active bluetooth.service 2>/dev/null | grep '^active' \nNothing should be returned. \nNote: If the package is required for a dependency \n\u2022 \nEnsure the dependent package is approved by local site policy \n\u2022 \nEnsure stopping and masking the service and/or socket meets local site policy \nRemediation: \nRun the following commands to stop bluetooth.service, and remove the bluez \npackage: \n# systemctl stop bluetooth.service \n# apt purge bluez \n- OR - \n- IF - the bluez package is required as a dependency: \nRun the following commands to stop and mask bluetooth.service: \n# systemctl stop bluetooth.service \n# systemctl mask bluetooth.service \nNote: A reboot may be required \nReferences: \n1. https://www.cisa.gov/tips/st05-015 \n2. NIST SP 800-53 Rev. 5: CM-7 \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1011, T1011.001 \nTA0010 \nM1042"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "3.2.1 Ensure dccp kernel module is not available (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that \nsupports streaming media and telephony. DCCP provides a way to gain access to \ncongestion control, without having to do it at the application layer, but does not provide \nin-sequence delivery.",
        "Rationale": "- IF - the protocol is not required, it is recommended that the drivers not be installed to \nreduce the potential attack surface.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the dccp kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the dccp kernel module is not available on the system, or pre-compiled into the \nkernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"dccp\" \nl_mod_type=\"net\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the dccp module: \n- IF - the dccp kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install dccp /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist dccp in the /etc/modprobe.d/ \ndirectory \n\u2022 \nRun modprobe -r dccp 2>/dev/null; rmmod dccp 2>/dev/null to remove \ndccp from the kernel \n- IF - the dccp kernel module is not available on the system, or pre-compiled into the \nkernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"dccp\" l_mod_type=\"net\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: SI-4, CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1068, T1068.000, T1210, \nT1210.000 \nTA0008 \nM1042"
    },
    {
        "Title": "3.2.2 Ensure tipc kernel module is not available (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The Transparent Inter-Process Communication (TIPC) protocol is designed to provide \ncommunication between cluster nodes.",
        "Rationale": "- IF - the protocol is not being used, it is recommended that kernel module not be \nloaded, disabling the service to reduce the potential attack surface.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the tipc kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the tipc kernel module is not available on the system, or pre-compiled into the \nkernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"tipc\" \nl_mod_type=\"net\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the tipc module: \n- IF - the tipc kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install tipc /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist tipc in the /etc/modprobe.d/ \ndirectory \n\u2022 \nRun modprobe -r tipc 2>/dev/null; rmmod tipc 2>/dev/null to remove \ntipc from the kernel \n- IF - the tipc kernel module is not available on the system, or pre-compiled into the \nkernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"tipc\" l_mod_type=\"net\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: SI-4, CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1068, T1068.000, T1210, \nT1210.000 \nTA0008 \nM1042"
    },
    {
        "Title": "3.2.3 Ensure rds kernel module is not available (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to \nprovide low-latency, high-bandwidth communications between cluster nodes. It was \ndeveloped by the Oracle Corporation.",
        "Rationale": "- IF - the protocol is not being used, it is recommended that kernel module not be \nloaded, disabling the service to reduce the potential attack surface.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the rds kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the rds kernel module is not available on the system, or pre-compiled into the \nkernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"rds\" \nl_mod_type=\"net\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the rds module: \n- IF - the rds kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install rds /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist rds in the /etc/modprobe.d/ \ndirectory \n\u2022 \nRun modprobe -r rds 2>/dev/null; rmmod rds 2>/dev/null to remove \nrds from the kernel \n- IF - the rds kernel module is not available on the system, or pre-compiled into the \nkernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"rds\" l_mod_type=\"net\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: SI-4, CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1068, T1068.000, T1210, \nT1210.000 \nTA0008 \nM1042"
    },
    {
        "Title": "3.2.4 Ensure sctp kernel module is not available (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to \nsupport message oriented communication, with several streams of messages in one \nconnection. It serves a similar function as TCP and UDP, incorporating features of both. \nIt is message-oriented like UDP, and ensures reliable in-sequence transport of \nmessages with congestion control like TCP.",
        "Rationale": "- IF - the protocol is not being used, it is recommended that kernel module not be \nloaded, disabling the service to reduce the potential attack surface.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n- IF - the sctp kernel module is available in ANY installed kernel, verify: \n\u2022 \nAn entry including /bin/true or /bin/false exists in a file within the \n/etc/modprobe.d/ directory \n\u2022 \nThe module is deny listed in a file within the /etc/modprobe.d/ directory \n\u2022 \nThe module is not loaded in the running kernel \n- IF - the sctp kernel module is not available on the system, or pre-compiled into the \nkernel, no additional configuration is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"sctp\" \nl_mod_type=\"net\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_chk() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if ! lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loaded\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loaded\") \n      fi \n      if grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is not loadable\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is loadable\") \n      fi \n      if grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output+=(\"  - kernel module: \\\"$l_mod_name\\\" is deny listed\") \n      else \n         a_output2+=(\"  - kernel module: \\\"$l_mod_name\\\" is not deny listed\") \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_chk \n      else \n         a_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\") \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"- Correctly set:\" \n\"${a_output[@]}\" \n   fi \n}",
        "Remediation": "Run the following script to unload and disable the sctp module: \n- IF - the sctp kernel module is available in ANY installed kernel: \n\u2022 \nCreate a file ending in .conf with install sctp /bin/false in the \n/etc/modprobe.d/ directory \n\u2022 \nCreate a file ending in .conf with blacklist sctp in the /etc/modprobe.d/ \ndirectory \n\u2022 \nRun modprobe -r sctp 2>/dev/null; rmmod sctp 2>/dev/null to remove \nsctp from the kernel \n- IF - the sctp kernel module is not available on the system, or pre-compiled into the \nkernel, no remediation is necessary \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"sctp\" l_mod_type=\"net\" \n   l_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\" \n   f_module_fix() \n   { \n      l_dl=\"y\" a_showconfig=() \n      while IFS= read -r l_showconfig; do \n         a_showconfig+=(\"$l_showconfig\") \n      done < <(modprobe --showconfig | grep -P -- \n'\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b') \n      if  lsmod | grep \"$l_mod_chk_name\" &> /dev/null; then \n         a_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\") \n         modprobe -r \"$l_mod_chk_name\" 2>/dev/null; rmmod \"$l_mod_name\" \n2>/dev/null \n      fi \n      if ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' <<< \"${a_showconfig[*]}\"; then \n         a_output2+=(\" - setting kernel  module: \\\"$l_mod_name\\\" to \n\\\"$(readlink -f /bin/false)\\\"\") \n         printf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n      if ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' <<< \n\"${a_showconfig[*]}\"; then \n         a_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\") \n         printf '%s\\n' \"blacklist $l_mod_chk_name\" >> \n/etc/modprobe.d/\"$l_mod_name\".conf \n      fi \n   } \n   for l_mod_base_directory in $l_mod_path; do # Check if the module exists \non the system \n      if [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] && [ -n \"$(ls -A \n\"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then \n         a_output3+=(\"  - \\\"$l_mod_base_directory\\\"\") \n         l_mod_chk_name=\"$l_mod_name\" \n         [[ \"$l_mod_name\" =~ overlay ]] && l_mod_chk_name=\"${l_mod_name::-2}\"         \n         [ \"$l_dl\" != \"y\" ] && f_module_fix \n      else \n         printf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \n\\\"$l_mod_base_directory\\\"\" \n      fi \n   done \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \" -- INFO --\" \" - module: \n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" || \nprintf '%s\\n' \"\" \" - No changes needed\" \n   printf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" \ncomplete\" \"\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: SI-4, CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1068, T1068.000, T1210, \nT1210.000 \nTA0008 \nM1042"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "3.3.1 Ensure ip forwarding is disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to \ntell the system whether it can forward packets or not.",
        "Rationale": "Setting net.ipv4.ip_forward and net.ipv6.conf.all.forwarding to 0 ensures \nthat a system with multiple interfaces (for example, a hard proxy), will never be able to \nforward packets, and therefore, never serve as a router. \nImpact: \nIP forwarding is required on systems configured to act as a router. If these parameters \nare disabled, the system will not be able to perform as a router. \nMany Cloud Service Provider (CSP) hosted systems require IP forwarding to be \nenabled. If the system is running on a CSP platform, this requirement should be \nreviewed before disabling IP forwarding.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameters are set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.ip_forward is set to 0 \n\u2022 \nnet.ipv6.conf.all.forwarding is set to 0 \nNote: \n\u2022 \nkernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, \nthe parameter is overridden by an incorrect setting later in that file, or in a \ncanonically later file, that \"correct\" setting will be ignored both by the script and \nby the system during a normal kernel parameter load sequence. \n\u2022 \nIPv6 kernel parameters only apply to systems where IPv6 is enabled \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.ip_forward=0\" \"net.ipv6.conf.all.forwarding=0\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.ip_forward = 0 \nExample: \n# printf '%s\\n' \"net.ipv4.ip_forward = 0\" >> /etc/sysctl.d/60-\nnetipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.ip_forward=0 \n   sysctl -w net.ipv4.route.flush=1 \n} \n- IF - IPv6 is enabled on the system: \nSet the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv6.conf.all.forwarding = 0 \nExample: \n# printf '%s\\n' \"net.ipv6.conf.all.forwarding = 0\" >> /etc/sysctl.d/60-\nnetipv6_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash  \n \n{ \n   sysctl -w net.ipv6.conf.all.forwarding=0 \n   sysctl -w net.ipv6.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nnet.ipv4.ip_forward = 0 \nnet.ipv6.conf.all.forwarding = 0",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \n \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1557, T1557.000 \nTA0006, TA0009 \nM1030, M1042"
    },
    {
        "Title": "3.3.2 Ensure packet redirect sending is disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "ICMP Redirects are used to send routing information to other hosts. As a host itself \ndoes not act as a router (in a host only configuration), there is no need to send \nredirects.",
        "Rationale": "An attacker could use a compromised host to send invalid ICMP redirects to other \nrouter devices in an attempt to corrupt routing and have users access a system set up \nby the attacker as opposed to a valid system. \nImpact: \nIP forwarding is required on systems configured to act as a router. If these parameters \nare disabled, the system will not be able to perform as a router.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameters are set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.conf.all.send_redirects is set to 0 \n\u2022 \nnet.ipv4.conf.default.send_redirects is set to 0 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.conf.all.send_redirects=0\" \n\"net.ipv4.conf.default.send_redirects=0\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.conf.all.send_redirects = 0 \n\u2022 \nnet.ipv4.conf.default.send_redirects = 0 \nExample: \n# printf '%s\\n' \"net.ipv4.conf.all.send_redirects = 0\" \n\"net.ipv4.conf.default.send_redirects = 0\" >> /etc/sysctl.d/60-\nnetipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.conf.all.send_redirects=0 \n   sysctl -w net.ipv4.conf.default.send_redirects=0 \n   sysctl -w net.ipv4.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nnet.ipv4.conf.all.send_redirects = 1 \nnet.ipv4.conf.default.send_redirects = 1",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1557, T1557.000 \nTA0006, TA0009 \nM1030, M1042"
    },
    {
        "Title": "3.3.3 Ensure bogus icmp responses are ignored (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 prevents the kernel \nfrom logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, \nkeeping file systems from filling up with useless log messages.",
        "Rationale": "Some routers (and some attackers) will send responses that violate RFC-1122 and \nattempt to fill up a log file system with many useless error messages.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameter is set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.icmp_ignore_bogus_error_responses is set to 1 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.icmp_ignore_bogus_error_responses=1\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.icmp_ignore_bogus_error_responses = 1 \nExample: \n# printf '%s\\n' \"net.ipv4.icmp_ignore_bogus_error_responses = 1\" >> \n/etc/sysctl.d/60-netipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1 \n   sysctl -w net.ipv4.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nnet.ipv4.icmp_ignore_bogus_error_responses = 1",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0040 \nM1053"
    },
    {
        "Title": "3.3.4 Ensure broadcast icmp requests are ignored (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to \nignore all ICMP echo and timestamp requests to broadcast and multicast addresses.",
        "Rationale": "Accepting ICMP echo and timestamp requests with broadcast or multicast destinations \nfor your network could be used to trick your host into starting (or participating) in a \nSmurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP \nbroadcast messages with a spoofed source address. All hosts receiving this message \nand responding would send echo-reply messages back to the spoofed address, which is \nprobably not routable. If many hosts respond to the packets, the amount of traffic on the \nnetwork could be significantly multiplied.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameter is set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.icmp_echo_ignore_broadcasts is set to 1 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.icmp_echo_ignore_broadcasts=1\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.icmp_echo_ignore_broadcasts = 1 \nExample: \n# printf '%s\\n' \"net.ipv4.icmp_echo_ignore_broadcasts = 1\" >> \n/etc/sysctl.d/60-netipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1 \n   sysctl -w net.ipv4.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nnet.ipv4.icmp_echo_ignore_broadcasts = 1",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1498, T1498.001 \nTA0040 \nM1037"
    },
    {
        "Title": "3.3.5 Ensure icmp redirects are not accepted (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "ICMP redirect messages are packets that convey routing information and tell your host \n(acting as a router) to send packets via an alternate path. It is a way of allowing an \noutside routing device to update your system routing tables.",
        "Rationale": "ICMP redirect messages are packets that convey routing information and tell your host \n(acting as a router) to send packets via an alternate path. It is a way of allowing an \noutside routing device to update your system routing tables. By setting \nnet.ipv4.conf.all.accept_redirects, \nnet.ipv4.conf.default.accept_redirects, \nnet.ipv6.conf.all.accept_redirects, and \nnet.ipv6.conf.default.accept_redirects to 0, the system will not accept any \nICMP redirect messages, and therefore, won't allow outsiders to update the system's \nrouting tables.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameters are set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.conf.all.accept_redirects is set to 0 \n\u2022 \nnet.ipv4.conf.default.accept_redirects is set to 0 \n\u2022 \nnet.ipv6.conf.all.accept_redirects is set to 0 \n\u2022 \nnet.ipv6.conf.default.accept_redirects is set to 0 \nNote: \n\u2022 \nkernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, \nthe parameter is overridden by an incorrect setting later in that file, or in a \ncanonically later file, that \"correct\" setting will be ignored both by the script and \nby the system during a normal kernel parameter load sequence. \n\u2022 \nIPv6 kernel parameters only apply to systems where IPv6 is enabled \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.conf.all.accept_redirects=0\" \n\"net.ipv4.conf.default.accept_redirects=0\" \n\"net.ipv6.conf.all.accept_redirects=0\" \n\"net.ipv6.conf.default.accept_redirects=0\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.conf.all.accept_redirects = 0 \n\u2022 \nnet.ipv4.conf.default.accept_redirects = 0 \nExample: \n# printf '%s\\n' \"net.ipv4.conf.all.accept_redirects = 0\" \n\"net.ipv4.conf.default.accept_redirects = 0\" >> /etc/sysctl.d/60-\nnetipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.conf.all.accept_redirects=0 \n   sysctl -w net.ipv4.conf.default.accept_redirects=0 \n   sysctl -w net.ipv4.route.flush=1 \n} \n- IF - IPv6 is enabled on the system: \nSet the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv6.conf.all.accept_redirects = 0 \n\u2022 \nnet.ipv6.conf.default.accept_redirects = 0 \nExample: \n# printf '%s\\n' \"net.ipv6.conf.all.accept_redirects = 0\" \n\"net.ipv6.conf.default.accept_redirects = 0\" >> /etc/sysctl.d/60-\nnetipv6_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv6.conf.all.accept_redirects=0 \n   sysctl -w net.ipv6.conf.default.accept_redirects=0 \n   sysctl -w net.ipv6.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \n \n \n \nDefault Value: \nnet.ipv4.conf.all.accept_redirects = 1 \nnet.ipv4.conf.default.accept_redirects = 1 \nnet.ipv6.conf.all.accept_redirects = 1 \nnet.ipv6.conf.default.accept_redirects = 1",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1557, T1557.000 \nTA0006, TA0009 \nM1030, M1042"
    },
    {
        "Title": "3.3.6 Ensure secure icmp redirects are not accepted (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Secure ICMP redirects are the same as ICMP redirects, except they come from \ngateways listed on the default gateway list. It is assumed that these gateways are \nknown to your system, and that they are likely to be secure.",
        "Rationale": "It is still possible for even known gateways to be compromised. Setting \nnet.ipv4.conf.all.secure_redirects and \nnet.ipv4.conf.default.secure_redirects to 0 protects the system from routing \ntable updates by possibly compromised known gateways.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameters are set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.conf.all.secure_redirects is set to 0 \n\u2022 \nnet.ipv4.conf.default.secure_redirects is set to 0 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.conf.all.secure_redirects=0\" \n\"net.ipv4.conf.default.secure_redirects=0\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.conf.all.secure_redirects = 0 \n\u2022 \nnet.ipv4.conf.default.secure_redirects = 0 \nExample: \n# printf '%s\\n' \"net.ipv4.conf.all.secure_redirects = 0\" \n\"net.ipv4.conf.default.secure_redirects = 0\" >> /etc/sysctl.d/60-\nnetipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.conf.all.secure_redirects=0 \n   sysctl -w net.ipv4.conf.default.secure_redirects=0 \n   sysctl -w net.ipv4.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nnet.ipv4.conf.all.secure_redirects = 1 \nnet.ipv4.conf.default.secure_redirects = 1",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1557, T1557.000 \nTA0006, TA0009 \nM1030, M1042"
    },
    {
        "Title": "3.3.7 Ensure reverse path filtering is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to \n1 forces the Linux kernel to utilize reverse path filtering on a received packet to \ndetermine if the packet was valid. Essentially, with reverse path filtering, if the return \npacket does not go out the same interface that the corresponding source packet came \nfrom, the packet is dropped (and logged if log_martians is set).",
        "Rationale": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to \n1 is a good way to deter attackers from sending your system bogus packets that cannot \nbe responded to. One instance where this feature breaks down is if asymmetrical \nrouting is employed. This would occur when using dynamic routing protocols (bgp, ospf, \netc) on your system. If you are using asymmetrical routing on your system, you will not \nbe able to enable this feature without breaking the routing. \nImpact: \nIf you are using asymmetrical routing on your system, you will not be able to enable this \nfeature without breaking the routing.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameters are set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.conf.all.rp_filter is set to 1 \n\u2022 \nnet.ipv4.conf.default.rp_filter is set to 1 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.conf.all.rp_filter=1\" \n\"net.ipv4.conf.default.rp_filter=1\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.conf.all.rp_filter = 1 \n\u2022 \nnet.ipv4.conf.default.rp_filter = 1 \nExample: \n# printf '%s\\n' \"net.ipv4.conf.all.rp_filter = 1\" \n\"net.ipv4.conf.default.rp_filter = 1\" >> /etc/sysctl.d/60-netipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.conf.all.rp_filter=1 \n   sysctl -w net.ipv4.conf.default.rp_filter=1 \n   sysctl -w net.ipv4.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nnet.ipv4.conf.all.rp_filter = 2 \nnet.ipv4.conf.default.rp_filter = 1",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1498, T1498.001 \nTA0006, TA0040 \nM1030, M1042"
    },
    {
        "Title": "3.3.8 Ensure source routed packets are not accepted \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "In networking, source routing allows a sender to partially or fully specify the route \npackets take through a network. In contrast, non-source routed packets travel a path \ndetermined by routers in the network. In some cases, systems may not be routable or \nreachable from some locations (e.g. private addresses vs. Internet routable), and so \nsource routed packets would need to be used.",
        "Rationale": "Setting net.ipv4.conf.all.accept_source_route, \nnet.ipv4.conf.default.accept_source_route, \nnet.ipv6.conf.all.accept_source_route and \nnet.ipv6.conf.default.accept_source_route to 0 disables the system from \naccepting source routed packets. Assume this system was capable of routing packets to \nInternet routable addresses on one interface and private addresses on another \ninterface. Assume that the private addresses were not routable to the Internet routable \naddresses and vice versa. Under normal routing circumstances, an attacker from the \nInternet routable addresses could not use the system as a way to reach the private \naddress systems. If, however, source routed packets were allowed, they could be used \nto gain access to the private address systems as the route could be specified, rather \nthan rely on routing protocols that did not allow this routing.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameters are set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.conf.all.accept_source_route is set to 0 \n\u2022 \nnet.ipv4.conf.default.accept_source_route is set to 0 \n\u2022 \nnet.ipv6.conf.all.accept_source_route is set to 0 \n\u2022 \nnet.ipv6.conf.default.accept_source_route is set to 0 \nNote: \n\u2022 \nkernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, \nthe parameter is overridden by an incorrect setting later in that file, or in a \ncanonically later file, that \"correct\" setting will be ignored both by the script and \nby the system during a normal kernel parameter load sequence. \n\u2022 \nIPv6 kernel parameters only apply to systems where IPv6 is enabled \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.conf.all.accept_source_route=0\" \n\"net.ipv4.conf.default.accept_source_route=0\" \n\"net.ipv6.conf.all.accept_source_route=0\" \n\"net.ipv6.conf.default.accept_source_route=0\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.conf.all.accept_source_route = 0 \n\u2022 \nnet.ipv4.conf.default.accept_source_route = 0 \nExample: \n# printf '%s\\n' \"net.ipv4.conf.all.accept_source_route = 0\" \n\"net.ipv4.conf.default.accept_source_route = 0\" >> /etc/sysctl.d/60-\nnetipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.conf.all.accept_source_route=0 \n   sysctl -w net.ipv4.conf.default.accept_source_route=0 \n   sysctl -w net.ipv4.route.flush=1 \n} \n- IF - IPv6 is enabled on the system: \nSet the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv6.conf.all.accept_source_route = 0 \n\u2022 \nnet.ipv6.conf.default.accept_source_route = 0 \nExample: \n# printf '%s\\n' \"net.ipv6.conf.all.accept_source_route = 0\" \n\"net.ipv6.conf.default.accept_source_route = 0\" >> /etc/sysctl.d/60-\nnetipv6_sysctl.conf \nRun the following command to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv6.conf.all.accept_source_route=0 \n   sysctl -w net.ipv6.conf.default.accept_source_route=0 \n   sysctl -w net.ipv6.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \n \n \n \nDefault Value: \nnet.ipv4.conf.all.accept_source_route = 0 \nnet.ipv4.conf.default.accept_source_route = 0 \nnet.ipv6.conf.all.accept_source_route = 0 \nnet.ipv6.conf.default.accept_source_route = 0",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1590, T1590.005 \nTA0007"
    },
    {
        "Title": "3.3.9 Ensure suspicious packets are logged (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "When enabled, this feature logs packets with un-routable source addresses to the \nkernel log.",
        "Rationale": "Setting net.ipv4.conf.all.log_martians and \nnet.ipv4.conf.default.log_martians to 1 enables this feature. Logging these \npackets allows an administrator to investigate the possibility that an attacker is sending \nspoofed packets to their system.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameters are set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.conf.all.log_martians is set to 1 \n\u2022 \nnet.ipv4.conf.default.log_martians is set to 1 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.conf.all.log_martians=1\" \n\"net.ipv4.conf.default.log_martians=1\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.conf.all.log_martians = 1 \n\u2022 \nnet.ipv4.conf.default.log_martians = 1 \nExample: \n# printf '%s\\n' \"net.ipv4.conf.all.log_martians = 1\" \n\"net.ipv4.conf.default.log_martians = 1\" >> /etc/sysctl.d/60-\nnetipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.conf.all.log_martians=1 \n   sysctl -w net.ipv4.conf.default.log_martians=1 \n   sysctl -w net.ipv4.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nnet.ipv4.conf.all.log_martians = 0 \nnet.ipv4.conf.default.log_martians = 0",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event source, \ndate, user, timestamp, source addresses, destination addresses, and other useful \nelements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005"
    },
    {
        "Title": "3.3.10 Ensure tcp syn cookies is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until \nthe half-open connection queue is full, at which time, the SYN cookie functionality kicks \nin. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply \nreplies to the SYN with a SYN/ACK, but will include a specially crafted TCP sequence \nnumber that encodes the source and destination IP address and port number and the \ntime the packet was sent. A legitimate connection would send the ACK packet of the \nthree way handshake with the specially crafted sequence number. This allows the \nsystem to verify that it has received a valid response to a SYN cookie and allow the \nconnection, even though there is no corresponding SYN in the queue.",
        "Rationale": "Attackers use SYN flood attacks to perform a denial of service attacked on a system by \nsending many SYN packets without completing the three way handshake. This will \nquickly use up slots in the kernel's half-open connection queue and prevent legitimate \nconnections from succeeding. Setting net.ipv4.tcp_syncookies to 1 enables SYN \ncookies, allowing the system to keep accepting valid connections, even if under a denial \nof service attack.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameter is set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv4.tcp_syncookies is set to 1 \nNote: kernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, the \nparameter is overridden by an incorrect setting later in that file, or in a canonically later \nfile, that \"correct\" setting will be ignored both by the script and by the system during a \nnormal kernel parameter load sequence. \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv4.tcp_syncookies=1\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv4.tcp_syncookies = 1 \nExample: \n# printf '%s\\n' \"net.ipv4.tcp_syncookies = 1\" >> /etc/sysctl.d/60-\nnetipv4_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv4.tcp_syncookies=1 \n   sysctl -w net.ipv4.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nnet.ipv4.tcp_syncookies = 1",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.001 \nTA0040 \nM1037"
    },
    {
        "Title": "3.3.11 Ensure ipv6 router advertisements are not accepted \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Routers periodically multicast Router Advertisement messages to announce their \navailability and convey information to neighboring nodes that enable them to be \nautomatically configured on the network. \nnet.ipv6.conf.all.accept_ra and net.ipv6.conf.default.accept_ra determine \nthe systems ability to accept these advertisements",
        "Rationale": "It is recommended that systems do not accept router advertisements as they could be \ntricked into routing traffic to compromised machines. Setting hard routes within the \nsystem (usually a single default route to a trusted router) protects the system from bad \nroutes. Setting net.ipv6.conf.all.accept_ra and \nnet.ipv6.conf.default.accept_ra to 0 disables the system's ability to accept IPv6 \nrouter advertisements.",
        "Impact": "",
        "Audit": "Run the following script to verify the following kernel parameters are set in the running \nconfiguration and correctly loaded from a kernel parameter configuration file: \n\u2022 \nnet.ipv6.conf.all.accept_ra is set to 0 \n\u2022 \nnet.ipv6.conf.default.accept_ra is set to 0 \nNote: \n\u2022 \nkernel parameters are loaded by file and parameter order precedence. The \nfollowing script observes this precedence as part of the auditing procedure. The \nparameters being checked may be set correctly in a file. If that file is superseded, \nthe parameter is overridden by an incorrect setting later in that file, or in a \ncanonically later file, that \"correct\" setting will be ignored both by the script and \nby the system during a normal kernel parameter load sequence. \n\u2022 \nIPv6 kernel parameters only apply to systems where IPv6 is enabled \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ipv6_disabled=\"\" \n   a_parlist=(\"net.ipv6.conf.all.accept_ra=0\" \n\"net.ipv6.conf.default.accept_ra=0\") \n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\s*IPT_SYSCTL=/ {print \n$2}' /etc/default/ufw)\" \n   f_ipv6_chk() \n   { \n      l_ipv6_disabled=\"no\" \n      ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_disabled=\"yes\" \n      if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n         l_ipv6_disabled=\"yes\" \n      fi \n   } \n   f_kernel_parameter_chk() \n   {   \n      l_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F= \n'{print $2}' | xargs)\" # Check running configuration \n      if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_running_parameter_value\"; then \n         a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_running_parameter_value\\\"\" \n         \"    in the running configuration\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_running_parameter_value\\\"\" \\ \n         \"    in the running configuration\" \\ \n         \"    and should have a value of: \\\"$l_value_out\\\"\") \n      fi \n      unset A_out; declare -A A_out # Check durable setting (files) \n      while read -r l_out; do \n         if [ -n \"$l_out\" ]; then \n            if [[ $l_out =~ ^\\s*# ]]; then \n               l_file=\"${l_out//# /}\" \n            else \n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\" \n               [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_file\") \n            fi \n         fi \n      done < <(\"$l_systemdsysctl\" --cat-config | grep -Po \n'^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)') \n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered \nby systemd-sysctl --cat-config) \n         l_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\" \n         l_kpar=\"${l_kpar//\\//.}\" \n         [ \"$l_kpar\" = \"$l_parameter_name\" ] && \nA_out+=([\"$l_kpar\"]=\"$l_ufwscf\") \n      fi \n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate \noutput \n \n         while IFS=\"=\" read -r l_fkpname l_file_parameter_value; do \n            l_fkpname=\"${l_fkpname// /}\"; \nl_file_parameter_value=\"${l_file_parameter_value// /}\" \n            if grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' <<< \n\"$l_file_parameter_value\"; then \n               a_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \n\\\"$l_file_parameter_value\\\"\" \\ \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\") \n            else \n               a_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \n\\\"$l_file_parameter_value\\\"\" \n               \"    in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\ \n               \"    and should have a value of: \\\"$l_value_out\\\"\") \n            fi \n         done < <(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \n\"${A_out[@]}\") \n      else \n         a_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"    ** Note: \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure **\") \n      fi \n   } \n   l_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\" \n   while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and \ncheck parameters \n      l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n      l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n      l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n      if grep -q '^net.ipv6.' <<< \"$l_parameter_name\"; then \n         [ -z \"$l_ipv6_disabled\" ] && f_ipv6_chk \n         if [ \"$l_ipv6_disabled\" = \"yes\" ]; then \n            a_output+=(\" - IPv6 is disabled on the system, \n\\\"$l_parameter_name\\\" is not applicable\") \n         else \n            f_kernel_parameter_chk \n         fi \n      else \n         f_kernel_parameter_chk \n      fi \n   done < <(printf '%s\\n' \"${a_parlist[@]}\") \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "- IF - IPv6 is enabled on the system: \nSet the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending \nin .conf: \n\u2022 \nnet.ipv6.conf.all.accept_ra = 0 \n\u2022 \nnet.ipv6.conf.default.accept_ra = 0 \nExample: \n# printf '%s\\n' \"net.ipv6.conf.all.accept_ra = 0\" \n\"net.ipv6.conf.default.accept_ra = 0\" >> /etc/sysctl.d/60-netipv6_sysctl.conf \nRun the following script to set the active kernel parameters: \n#!/usr/bin/env bash \n \n{ \n   sysctl -w net.ipv6.conf.all.accept_ra=0 \n   sysctl -w net.ipv6.conf.default.accept_ra=0 \n   sysctl -w net.ipv6.route.flush=1 \n} \nNote: If these settings appear in a canonically later file, or later in the same file, these \nsettings will be overwritten \nDefault Value: \nnet.ipv6.conf.all.accept_ra = 1 \nnet.ipv6.conf.default.accept_ra = 1",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nOn systems with Uncomplicated Firewall, additional settings may be configured in \n/etc/ufw/sysctl.conf \n\u2022 \nThe settings in /etc/ufw/sysctl.conf will override settings in \n/etc/sysctl.conf  \n\u2022 \nThis behavior can be changed by updating the IPT_SYSCTL parameter in \n/etc/default/ufw",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1557, T1557.000 \nTA0006, TA0040 \nM1030, M1042"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "4.1.1 Ensure a single firewall configuration utility is in use \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "In Linux security, employing a single, effective firewall configuration utility ensures that \nonly legitimate traffic gets processed, reducing the system\u2019s exposure to potential \nthreats. The choice between ufw, nftables, and iptables depends on organizational \nneeds. \nNote: iptables is being phased out, and support for iptables will be reduced over \ntime. It is recommended to transition towards either nftables or ufw as the default \nfirewall management tool.",
        "Rationale": "Proper configuration of a single firewall utility minimizes cyber threats and protects \nservices and data, while avoiding vulnerabilities like open ports or exposed services. \nStandardizing on a single tool simplifies management, reduces errors, and fortifies \nsecurity across Linux systems. \nImpact: \nThe use of more than one firewall utility may produce unexpected results.",
        "Impact": "",
        "Audit": "Run the following script to verify that a single firewall utility is in use on the system: \n#!/usr/bin/env bash \n \n{ \n   active_firewall=() firewalls=(\"ufw\" \"nftables\" \"iptables\") \n   # Determine which firewall is in use \n   for firewall in \"${firewalls[@]}\"; do \n      case $firewall in \n         nftables) \n            cmd=\"nft\" ;; \n         *) \n            cmd=$firewall ;; \n      esac           \n      if command -v $cmd &> /dev/null && systemctl is-enabled --quiet \n$firewall && systemctl is-active --quiet $firewall; then \n         active_firewall+=(\"$firewall\") \n      fi \n   done \n   # Display audit results \n   if [ ${#active_firewall[@]} -eq 1 ]; then \n      printf '%s\\n' \"\" \"Audit Results:\" \" ** PASS **\" \" - A single firewall \nis in use follow the recommendation in ${active_firewall[0]} subsection ONLY\" \n   elif [ ${#active_firewall[@]} -eq 0 ]; then \n      printf '%s\\n' \"\" \" Audit Results:\" \" ** FAIL **\" \"- No firewall in use \nor unable to determine firewall status\" \n   else \n      printf '%s\\n' \"\" \" Audit Results:\" \" ** FAIL **\" \" - Multiple firewalls \nare in use: ${active_firewall[*]}\" \n   fi   \n}",
        "Remediation": "Remediating to a single firewall configuration is a complex process and involves several \nsteps. The following provides the basic steps to follow for a single firewall configuration: \n1. Determine which firewall utility best fits organizational needs \n2. Follow the recommendations in the subsequent subsection for the single firewall \nto be used \nNote: Review the firewall subsection overview for the selected firewall to be \nused, it contains a script to \nsimplify this process. \n3. Return to this recommendation to ensure a single firewall configuration utility is in \nuse",
        "References": "1. https://wiki.debian.org/DebianFirewall \n2. https://wiki.ubuntu.com/UncomplicatedFirewall \n3. https://assets.ubuntu.com/v1/544d9904-ubuntu-server-guide-2024-01-22.pdf \n4. https://www.debian.org/doc/manuals/debian-reference/debian-reference.en.pdf",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "4.2.1 Ensure ufw is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited \nfor host-based firewalls. ufw provides a framework for managing netfilter, as well as a \ncommand-line interface for manipulating the firewall",
        "Rationale": "A firewall utility is required to configure the Linux kernel's netfilter framework via the \niptables or nftables back-end. \nThe Linux kernel's netfilter framework host-based firewall can protect against threats \noriginating from within a corporate network to include malicious mobile code and poorly \nconfigured software on a host. \nNote: Only one firewall utility should be installed and configured. UFW is dependent on \nthe iptables package",
        "Impact": "",
        "Audit": "Run the following command to verify that Uncomplicated Firewall (UFW) is installed: \n# dpkg-query -s ufw &>/dev/null && echo \"ufw is installed\" \n \nufw is installed",
        "Remediation": "Run the following command to install Uncomplicated Firewall (UFW): \n# apt install ufw",
        "References": "1. NIST SP 800-53 Rev. 5: SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.2.2 Ensure iptables-persistent is not installed with ufw \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin",
        "Rationale": "Running both ufw and the services included in the iptables-persistent package may lead \nto conflict",
        "Impact": "",
        "Audit": "Run the following command to verify that the iptables-persistent package is not \ninstalled: \n# dpkg-query -s iptables-persistent &>/dev/null && echo \"iptables-persistent \nis installed\" \nNothing should be returned",
        "Remediation": "Run the following command to remove the iptables-persistent package: \n# apt purge iptables-persistent",
        "References": "1. NIST SP 800-53 Rev. 5: SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0005 \nM1033"
    },
    {
        "Title": "4.2.3 Ensure ufw service is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for \nmanaging netfilter, as well as a command-line and available graphical user interface for \nmanipulating the firewall. \nNote: \n\u2022 \nWhen running ufw enable or starting ufw via its initscript, ufw will flush its chains. \nThis is required so ufw can maintain a consistent state, but it may drop existing \nconnections (eg ssh). ufw does support adding rules before enabling the firewall. \n\u2022 \nRun the following command before running ufw enable. \n# ufw allow proto tcp from any to any port 22 \n\u2022 \nThe rules will still be flushed, but the ssh port will be open after enabling the \nfirewall. Please note that once ufw is 'enabled', ufw will not flush the chains when \nadding or removing rules (but will when modifying a rule or changing the default \npolicy) \n\u2022 \nBy default, ufw will prompt when enabling the firewall while running under ssh. \nThis can be disabled by using ufw --force enable",
        "Rationale": "The ufw service must be enabled and running in order for ufw to protect the system \nImpact: \nChanging firewall settings while connected over network can result in being locked out \nof the system.",
        "Impact": "",
        "Audit": "Run the following command to verify that the ufw daemon is enabled: \n# systemctl is-enabled ufw.service \n \nenabled \nRun the following command to verify that the ufw daemon is active: \n# systemctl is-active ufw \n \nactive \nRun the following command to verify ufw is active \n# ufw status \n \nStatus: active",
        "Remediation": "Run the following command to unmask the ufw daemon: \n# systemctl unmask ufw.service \nRun the following command to enable and start the ufw daemon: \n# systemctl --now enable ufw.service \n \nactive \nRun the following command to enable ufw: \n# ufw enable",
        "References": "1. http://manpages.ubuntu.com/manpages/precise/en/man8/ufw.8.html \n2. NIST SP 800-53 Rev. 5: SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0005 \nM1018"
    },
    {
        "Title": "4.2.4 Ensure ufw loopback traffic is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \noperation of the system. The loopback interface is the only place that loopback network \n(127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces \nshould ignore traffic on this network as an anti-spoofing measure.",
        "Impact": "",
        "Audit": "Run the following command and verify loopback interface to accept traffic: \n# grep -P -- 'lo|127.0.0.0' /etc/ufw/before.rules \nOutput includes: \n# allow all on loopback \n-A ufw-before-input -i lo -j ACCEPT \n-A ufw-before-output -o lo -j ACCEPT \nRun the following command and verify all other interfaces deny traffic to the loopback \nnetwork (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) \n# ufw status verbose \n \nTo                         Action      From \n--                         ------      ----                   \nAnywhere                   DENY IN     127.0.0.0/8                           \nAnywhere (v6)              DENY IN     ::1                         \nNote: ufw status only shows rules added with ufw and not the rules found in the \n/etc/ufw rules files where allow all on loopback is configured by default.",
        "Remediation": "Run the following commands to configure the loopback interface to accept traffic: \n# ufw allow in on lo \n# ufw allow out on lo \nRun the following commands to configure all other interfaces to deny traffic to the \nloopback network: \n# ufw deny in from 127.0.0.0/8 \n# ufw deny in from ::1 \nDefault Value: \n# allow all on loopback \n-A ufw-before-input -i lo -j ACCEPT \n-A ufw-before-output -o lo -j ACCEPT",
        "References": "1. NIST SP 800-53 Rev. 5: SC-7 \n2. https://manpages.ubuntu.com/manpages/jammy/en/man8/ufw-framework.8.html",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.2.5 Ensure ufw outbound connections are configured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Configure the firewall rules for new outbound connections. \nNote: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system. \n\u2022 \nUnlike iptables, when a new outbound rule is added, ufw automatically takes care \nof associated established connections, so no rules for the latter kind are required.",
        "Rationale": "If rules are not in place for new outbound connections all packets will be dropped by the \ndefault policy preventing network usage.",
        "Impact": "",
        "Audit": "Run the following command and verify all rules for new outbound connections match \nsite policy: \n# ufw status numbered",
        "Remediation": "Configure ufw in accordance with site policy. The following commands will implement a \npolicy to allow all outbound connections on all interfaces: \n# ufw allow out on all",
        "References": "1. NIST SP 800-53 Rev. 5: SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.2.6 Ensure ufw firewall rules exist for all open ports (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Services and ports can be accepted or explicitly rejected. \nNote: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system \n\u2022 \nThe remediation command opens up the port to traffic from all sources. Consult \nufw documentation and set any restrictions in compliance with site policy",
        "Rationale": "To reduce the attack surface of a system, all services and ports should be blocked \nunless required. \n\u2022 \nAny ports that have been opened on non-loopback addresses need firewall rules \nto govern traffic. \n\u2022 \nWithout a firewall rule configured for open ports, the default firewall policy will \ndrop all packets to these ports. \n\u2022 \nRequired ports should have a firewall rule created to allow approved connections \nin accordance with local site policy. \n\u2022 \nUnapproved ports should have an explicit deny rule created.",
        "Impact": "",
        "Audit": "Run the following script to verify a firewall rule exists for all open ports: \n#!/usr/bin/env bash \n \n{ \n   unset a_ufwout;unset a_openports \n   while read -r l_ufwport; do \n      [ -n \"$l_ufwport\" ] && a_ufwout+=(\"$l_ufwport\") \n   done < <(ufw status verbose | grep -Po '^\\h*\\d+\\b' | sort -u) \n   while read -r l_openport; do \n      [ -n \"$l_openport\" ] && a_openports+=(\"$l_openport\") \n   done < <(ss -tuln | awk '($5!~/%lo:/ && $5!~/127.0.0.1:/ && \n$5!~/\\[?::1\\]?:/) {split($5, a, \":\"); print a[2]}' | sort -u) \n   a_diff=(\"$(printf '%s\\n' \"${a_openports[@]}\" \"${a_ufwout[@]}\" \n\"${a_ufwout[@]}\" | sort | uniq -u)\") \n   if [[ -n \"${a_diff[*]}\" ]]; then \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n- The following port(s) don't \nhave a rule in UFW: $(printf '%s\\n' \\\\n\"${a_diff[*]}\")\\n- End List\" \n   else \n      echo -e \"\\n - Audit Passed -\\n- All open ports have a rule in UFW\\n\" \n   fi \n}",
        "Remediation": "For each port identified in the audit which does not have a firewall rule, evaluate the \nservice listening on the port and add a rule for accepting or denying inbound \nconnections in accordance with local site policy: \nExamples: \n# ufw allow in <port>/<tcp or udp protocol> \n \n# ufw deny in <port>/<tcp or udp protocol> \nNote: Examples create rules for from any, to any. More specific rules should be \nconcentered when allowing inbound traffic e.g only traffic from this network. \nExample to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network: \nufw allow from 192.168.1.0/24 to any proto tcp port 443",
        "References": "1. NIST SP 800-53 Rev. 5: SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.2.7 Ensure ufw default deny firewall policy (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "A default deny policy on connections ensures that any unconfigured network usage will \nbe rejected. \nNote: Any port or protocol without a explicit allow before the default deny will be \nblocked",
        "Rationale": "With a default accept policy the firewall will accept any packet that is not configured to \nbe denied. It is easier to allow list acceptable usage than to deny list unacceptable \nusage. \nImpact: \nAny port and protocol not explicitly allowed will be blocked. The following rules should \nbe considered before applying the default deny. \nufw allow out http \nufw allow out https \nufw allow out ntp # Network Time Protocol \nufw allow out to any port 53 # DNS \nufw allow out to any port 853 # DNS over TLS \nufw logging on",
        "Impact": "",
        "Audit": "Run the following command and verify that the default policy for incoming , outgoing , \nand routed directions is deny , reject , or disabled: \n# ufw status verbose | grep Default: \nExample output: \nDefault: deny (incoming), deny (outgoing), disabled (routed)",
        "Remediation": "Run the following commands to implement a default deny policy: \n# ufw default deny incoming \n# ufw default deny outgoing \n# ufw default deny routed",
        "References": "1. NIST SP 800-53 Rev. 5: SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.3 Configure nftables \nIf Uncomplicated Firewall (UFW) or iptables are being used in your environment, \nplease follow the guidance in their respective section and pass-over the guidance \nin this section. \nnftables is a subsystem of the Linux kernel providing filtering and classification of \nnetwork packets/datagrams/frames and is the successor to iptables. The biggest \nchange with the successor nftables is its simplicity. With iptables, we have to \nconfigure every single rule and use the syntax which can be compared with normal \ncommands. With nftables, the simpler syntax, much like BPF (Berkely Packet Filter) \nmeans shorter lines and less repetition. Support for nftables should also be compiled \ninto the kernel, together with the related nftables modules. Please ensure that your \nkernel supports nf_tables before choosing this option. \nNotes: \n\u2022 \nThis section broadly assumes starting with an empty nftables firewall ruleset \n(established by flushing the rules with nft flush ruleset). \n\u2022",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "4.3.1 Ensure nftables is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "nftables provides a new in-kernel packet classification framework that is based on a \nnetwork-specific Virtual Machine (VM) and a new nft userspace command line tool. \nnftables reuses the existing Netfilter subsystems such as the existing hook \ninfrastructure, the connection tracking system, NAT, userspace queuing and logging \nsubsystem. \nNotes: \n\u2022 \nnftables is available in Linux kernel 3.13 and newer \n\u2022 \nOnly one firewall utility should be installed and configured \n\u2022 \nChanging firewall settings while connected over the network can result in being \nlocked out of the system",
        "Rationale": "nftables is a subsystem of the Linux kernel that can protect against threats originating \nfrom within a corporate network to include malicious mobile code and poorly configured \nsoftware on a host.",
        "Impact": "",
        "Audit": "Run the following command to verify that nftables is installed: \n# dpkg-query -s nftables &>/dev/null && echo \"nftables is installed\" \n \nnftables is installed",
        "Remediation": "Run the following command to install nftables: \n# apt install nftables",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.3.2 Ensure ufw is uninstalled or disabled with nftables \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to \nbe easy to use.",
        "Rationale": "Running both the nftables service and ufw may lead to conflict and unexpected \nresults.",
        "Impact": "",
        "Audit": "Run the following commands to verify that ufw is either not installed or inactive. Only \none of the following needs to pass. \nRun the following command to verify that ufw is not installed: \n# dpkg-query -s ufw &>/dev/null && echo \"ufw is installed\" \nNothing should be returned \n-OR- \nRun the following commands to verify ufw is disabled and ufw.service is not enabled: \n# ufw status \n \nStatus: inactive \n# systemctl is-enabled ufw.service \n \nmasked",
        "Remediation": "Run one of the following to either remove ufw or disable ufw and mask ufw.service: \nRun the following command to remove ufw: \n# apt purge ufw \n-OR- \nRun the following commands to disable ufw and mask ufw.service: \n# ufw disable \n# systemctl stop ufw.service \n# systemctl mask ufw.service \nNote: ufw disable needs to be run before systemctl mask ufw.service in order to \ncorrectly disable UFW",
        "References": "1. NIST SP 800-53 Rev. 5: SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0005 \nM1033"
    },
    {
        "Title": "4.3.3 Ensure iptables are flushed with nftables (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "nftables is a replacement for iptables, ip6tables, ebtables and arptables",
        "Rationale": "It is possible to mix iptables and nftables. However, this increases complexity and also \nthe chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is \nnot loaded",
        "Impact": "",
        "Audit": "Run the following commands to ensure no iptables rules exist \nFor iptables: \n# iptables -L \nNo rules should be returned \nFor ip6tables: \n# ip6tables -L \nNo rules should be returned",
        "Remediation": "Run the following commands to flush iptables: \nFor iptables: \n# iptables -F \nFor ip6tables: \n# ip6tables -F",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0005"
    },
    {
        "Title": "4.3.4 Ensure a nftables table exists (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Tables hold chains. Each table only has one address family and only applies to packets \nof this family. Tables can have one of five families.",
        "Rationale": "nftables doesn't have any default tables. Without a table being built, nftables will not \nfilter network traffic. \nImpact: \nAdding rules to a running nftables can cause loss of connectivity to the system",
        "Impact": "",
        "Audit": "Run the following command to verify that a nftables table exists: \n# nft list tables \nReturn should include a list of nftables: \nExample: \ntable inet filter",
        "Remediation": "Run the following command to create a table in nftables \n# nft create table inet <table name> \nExample: \n# nft create table inet filter",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1047"
    },
    {
        "Title": "4.3.5 Ensure nftables base chains exist (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Chains are containers for rules. They exist in two kinds, base chains and regular chains. \nA base chain is an entry point for packets from the networking stack, a regular chain \nmay be used as jump target and is used for better rule organization.",
        "Rationale": "If a base chain doesn't exist with a hook for input, forward, and delete, packets that \nwould flow through those chains will not be touched by nftables. \nImpact: \nIf configuring nftables over ssh, creating a base chain with a policy of drop will \ncause loss of connectivity. \nEnsure that a rule allowing ssh has been added to the base chain prior to setting the \nbase chain's policy to drop",
        "Impact": "",
        "Audit": "Run the following commands and verify that base chains exist for INPUT. \n# nft list ruleset | grep 'hook input' \n \ntype filter hook input priority 0; \nRun the following commands and verify that base chains exist for FORWARD. \n# nft list ruleset | grep 'hook forward' \n \ntype filter hook forward priority 0; \nRun the following commands and verify that base chains exist for OUTPUT. \n# nft list ruleset | grep 'hook output' \n \ntype filter hook output priority 0;",
        "Remediation": "Run the following command to create the base chains: \n# nft create chain inet <table name> <base chain name> { type filter hook \n<(input|forward|output)> priority 0 \\; } \nExample: \n# nft create chain inet filter input { type filter hook input priority 0 \\; } \n \n# nft create chain inet filter forward { type filter hook forward priority 0 \n\\; } \n \n# nft create chain inet filter output { type filter hook output priority 0 \\; \n}",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0005 \nM1047"
    },
    {
        "Title": "4.3.6 Ensure nftables loopback traffic is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \nthe operation of the system. The loopback interface is the only place that loopback \nnetwork traffic should be seen, all other interfaces should ignore traffic on this network \nas an anti-spoofing measure.",
        "Impact": "",
        "Audit": "Run the following commands to verify that the loopback interface is configured: \nRun the following command to verify the loopback interface is configured to accept \nnetwork traffic: \n# nft list ruleset | awk '/hook input/,/}/' | grep 'iif \"lo\" accept' \nExample output: \niif \"lo\" accept \nRun the following command to verify network traffic from an iPv4 loopback interface is \nconfigured to drop: \n# nft list ruleset | awk '/hook input/,/}/' | grep 'ip saddr' \nExample output: \nip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop \n- IF - IPv6 is enabled on the system: \nRun the following command to verify network traffic from an iPv6 loopback interface is \nconfigured to drop: \n# nft list ruleset | awk '/hook input/,/}/' | grep 'ip6 saddr' \nExample output: \nip6 saddr ::1 counter packets 0 bytes 0 drop",
        "Remediation": "Run the following commands to implement the loopback rules: \n# nft add rule inet filter input iif lo accept \n# nft add rule inet filter input ip saddr 127.0.0.0/8 counter drop \n- IF - IPv6 is enabled on the system: \nRun the following command to implement the IPv6 loopback rule: \n# nft add rule inet filter input ip6 saddr ::1 counter drop",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0005"
    },
    {
        "Title": "4.3.7 Ensure nftables outbound and established connections are \nconfigured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Configure the firewall rules for new outbound, and established connections",
        "Rationale": "If rules are not in place for new outbound, and established connections all packets will \nbe dropped by the default policy preventing network usage.",
        "Impact": "",
        "Audit": "Run the following commands and verify all rules for established incoming connections \nmatch site policy: site policy: \n# nft list ruleset | awk '/hook input/,/}/' | grep -E 'ip protocol (tcp|udp) \nct state' \nOutput should be similar to: \nip protocol tcp ct state established accept \nip protocol udp ct state established accept \nRun the folllowing command and verify all rules for new and established outbound \nconnections match site policy \n# nft list ruleset | awk '/hook output/,/}/' | grep -E 'ip protocol (tcp|udp) \nct state' \nOutput should be similar to: \nip protocol tcp ct state established,related,new accept \nip protocol udp ct state established,related,new accept",
        "Remediation": "Configure nftables in accordance with site policy. The following commands will \nimplement a policy to allow all outbound connections and all established connections: \n# nft add rule inet filter input ip protocol tcp ct state established accept \n \n# nft add rule inet filter input ip protocol udp ct state established accept \n \n# nft add rule inet filter output ip protocol tcp ct state \nnew,related,established accept \n \n# nft add rule inet filter output ip protocol udp ct state \nnew,related,established accept",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.3.8 Ensure nftables default deny firewall policy (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Base chain policy is the default verdict that will be applied to packets reaching the end \nof the chain.",
        "Rationale": "There are two policies: accept (Default) and drop. If the policy is set to accept, the \nfirewall will accept any packet that is not configured to be denied and the packet will \ncontinue transversing the network stack. \nIt is easier to allow list acceptable usage than to deny list unacceptable usage. \nNote: \n\u2022 \nAllow port 22(ssh) needs to be updated to only allow systems requiring ssh \nconnectivity to connect, as per site policy. \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system. \nImpact: \nIf configuring nftables over ssh, creating a base chain with a policy of drop will cause \nloss of connectivity. \nEnsure that a rule allowing ssh has been added to the base chain prior to setting the \nbase chain's policy to drop",
        "Impact": "",
        "Audit": "Run the following commands and verify that base chains contain a policy of DROP. \n# nft list ruleset | grep 'hook input' \n \ntype filter hook input priority 0; policy drop; \n# nft list ruleset | grep 'hook forward' \n \ntype filter hook forward priority 0; policy drop; \n# nft list ruleset | grep 'hook output' \n \ntype filter hook output priority 0; policy drop;",
        "Remediation": "Run the following command for the base chains with the input, forward, and output \nhooks to implement a default DROP policy: \n# nft chain <table family> <table name> <chain name> { policy drop \\; } \nExample: \n# nft chain inet filter input { policy drop \\; } \n \n# nft chain inet filter forward { policy drop \\; } \n \n# nft chain inet filter output { policy drop \\; } \nDefault Value: \naccept",
        "References": "1. Manual Page nft \n2. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.3.9 Ensure nftables service is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nftables service allows for the loading of nftables rulesets during boot, or starting on \nthe nftables service",
        "Rationale": "The nftables service restores the nftables rules from the rules files referenced in the \n/etc/nftables.conf file during boot or the starting of the nftables service",
        "Impact": "",
        "Audit": "Run the following command and verify that the nftables service is enabled: \n# systemctl is-enabled nftables \n \nenabled",
        "Remediation": "Run the following command to enable the nftables service: \n# systemctl enable nftables",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.3.10 Ensure nftables rules are permanent (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "nftables is a subsystem of the Linux kernel providing filtering and classification of \nnetwork packets/datagrams/frames. \nThe nftables service reads the /etc/nftables.conf file for a nftables file or files to \ninclude in the nftables ruleset. \nA nftables ruleset containing the input, forward, and output base chains allow network \ntraffic to be filtered. \nNote: Saving the script and following the instruction in the Configure nftables section \noverview will implement the rules in the configure nftable section, open port 22(ssh) \nfrom anywhere, and applies nftables ruleset on boot.",
        "Rationale": "Changes made to nftables ruleset only affect the live system, you will also need to \nconfigure the nftables ruleset to apply on boot",
        "Impact": "",
        "Audit": "Run the following commands to verify that input, forward, and output base chains are \nconfigured to be applied to a nftables ruleset on boot: \nRun the following command to verify the input base chain: \n# [ -n \"$(grep -E '^\\s*include' /etc/nftables.conf)\" ] && awk '/hook \ninput/,/}/' $(awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' \n/etc/nftables.conf) \nOutput should be similar to: \n                type filter hook input priority 0; policy drop; \n \n                # Ensure loopback traffic is configured \n                iif \"lo\" accept \n                ip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop \n                ip6 saddr ::1 counter packets 0 bytes 0 drop \n \n                # Ensure established connections are configured \n                ip protocol tcp ct state established accept \n                ip protocol udp ct state established accept \n               \n                # Accept port 22(SSH) traffic from anywhere \n                tcp dport ssh accept \nReview the input base chain to ensure that it follows local site policy \nRun the following command to verify the forward base chain: \n# [ -n \"$(grep -E '^\\s*include' /etc/nftables.conf)\" ] && awk '/hook \nforward/,/}/' $(awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' \n/etc/nftables.conf) \nOutput should be similar to: \n        # Base chain for hook forward named forward (Filters forwarded \nnetwork packets) \n        chain forward { \n                type filter hook forward priority 0; policy drop; \n        } \nReview the forward base chain to ensure that it follows local site policy. \nRun the following command to verify the forward base chain: \n# [ -n \"$(grep -E '^\\s*include' /etc/nftables.conf)\" ] && awk '/hook \noutput/,/}/' $(awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' \n/etc/nftables.conf) \nOutput should be similar to: \n \n        # Base chain for hook output named output (Filters outbound network \npackets) \n        chain output { \n                type filter hook output priority 0; policy drop; \n                # Ensure outbound and established connections are configured \n                ip protocol tcp ct state established,related,new accept \n                ip protocol udp ct state established,related,new accept \n                 \n        } \nReview the output base chain to ensure that it follows local site policy.",
        "Remediation": "Edit the /etc/nftables.conf file and un-comment or add a line with include \n<Absolute path to nftables rules file> for each nftables file you want included \nin the nftables ruleset on boot \nExample: \n# vi /etc/nftables.conf \nAdd the line: \ninclude \"/etc/nftables.rules\"",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "4.4.1.1 Ensure iptables packages are installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "iptables is a utility program that allows a system administrator to configure the tables \nprovided by the Linux kernel firewall, implemented as different Netfilter modules, and \nthe chains and rules it stores. Different kernel modules and programs are used for \ndifferent protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and \nebtables to Ethernet frames.",
        "Rationale": "A method of configuring and maintaining firewall rules is necessary to configure a Host \nBased Firewall.",
        "Impact": "",
        "Audit": "Run the following command to verify that iptables is installed: \n# dpkg-query -s iptables &>/dev/null && echo \"iptables is installed\" \n \niptables is installed \nRun the following command to verify that iptables-persistent is installed: \n# dpkg-query -s iptables-persistent &>/dev/null && echo \"iptables-persistent \nis installed\" \n \niptables-persistent is installed",
        "Remediation": "Run the following command to install iptables and iptables-persistent \n# apt install iptables iptables-persistent",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.4.1.2 Ensure nftables is not in use with iptables (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "nftables is a subsystem of the Linux kernel providing filtering and classification of \nnetwork packets/datagrams/frames and is the successor to iptables.",
        "Rationale": "Running both iptables and nftables may lead to conflict.",
        "Impact": "",
        "Audit": "Run the following commend to verify that nftables is not installed: \n# dpkg-query -s nftables &>/dev/null && echo \"nftables is installed\" \nNothing should be returned \n- OR - \nRun the following command to verify nftables.service is not enabled: \n# systemctl is-enabled nftables.service 2>/dev/null | grep '^enabled' \nNothing should be returned \nRun the following command to verify nftables.service is not active: \n# systemctl is-active nftables.service 2>/dev/null | grep '^active' \nNothing should be returned",
        "Remediation": "Run the following command to remove nftables: \n# apt purge nftables \n- OR - \nRun the following commands to stop and mask nftables.service: \n# systemctl stop nftables.service \n# systemctl mask nftables.service",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011"
    },
    {
        "Title": "4.4.1.3 Ensure ufw is not in use with iptables (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to \nbe easy to use. \n\u2022 \nUses a command-line interface consisting of a small number of simple \ncommands \n\u2022 \nUses iptables for configuration",
        "Rationale": "Running iptables.persistent with ufw enabled may lead to conflict and unexpected \nresults.",
        "Impact": "",
        "Audit": "Run the following commands to verify that ufw is either not installed or disabled. Only \none of the following needs to pass. \nRun the following command to verify that ufw is not installed: \n# dpkg-query -s ufw &>/dev/null && echo \"ufw is installed\" \nNothing should be returned. \n- OR - \nRun the following command to verify ufw is disabled: \n# ufw status \n \nStatus: inactive \nRun the following commands to verify that the ufw.service is not enabled: \n# systemctl is-enabled ufw 2>dev/null | grep '^enabled' \nNothing should be returned \nRun the following command to verify ufw.service is not active: \n# systemctl is-active ufw.service 2>/dev/null | grep '^active' \nNothing should be returned",
        "Remediation": "Run the following command to remove ufw: \n# apt purge ufw \n- OR - \nRun the following commands to disable ufw, and stop and mask ufw.service: \n# ufw disable \n# systemctl stop ufw.service \n# systemctl mask ufw.service \nNote: ufw disable needs to be run before systemctl mask ufw.service in order to \ncorrectly disable UFW",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "4.4.2.1 Ensure iptables default deny firewall policy (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "A default deny all policy on connections ensures that any unconfigured network usage \nwill be rejected. \nNotes: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system \n\u2022",
        "Rationale": "With a default accept policy the firewall will accept any packet that is not configured to \nbe denied. It is easier to allow list acceptable usage than to deny list unacceptable \nusage.",
        "Impact": "",
        "Audit": "Run the following command and verify that the policy for the INPUT , OUTPUT , and \nFORWARD chains is DROP or REJECT : \n# iptables -L \nChain INPUT (policy DROP) \nChain FORWARD (policy DROP) \nChain OUTPUT (policy DROP)",
        "Remediation": "Run the following commands to implement a default DROP policy: \n# iptables -P INPUT DROP \n# iptables -P OUTPUT DROP \n# iptables -P FORWARD DROP",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.4.2.2 Ensure iptables loopback traffic is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network (127.0.0.0/8). \nNote: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system \n\u2022",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \nthe operation of the system. The loopback interface is the only place that loopback \nnetwork (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on \nthis network as an anti-spoofing measure.",
        "Impact": "",
        "Audit": "Run the following commands and verify output includes the listed rules in order (pkts \nand bytes counts may differ, prot may be all or 0): \n# iptables -L INPUT -v -n \nChain INPUT (policy DROP 0 packets, 0 bytes) \n pkts bytes target     prot opt in     out     source               \ndestination \n    0     0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0 \n    0     0 DROP       all  --  *      *       127.0.0.0/8          0.0.0.0/0 \n \n # iptables -L OUTPUT -v -n \nChain OUTPUT (policy DROP 0 packets, 0 bytes) \n pkts bytes target     prot opt in     out     source               \ndestination \n    0     0 ACCEPT     all  --  *      lo      0.0.0.0/0            0.0.0.0/0",
        "Remediation": "Run the following commands to implement the loopback rules: \n# iptables -A INPUT -i lo -j ACCEPT \n# iptables -A OUTPUT -o lo -j ACCEPT \n# iptables -A INPUT -s 127.0.0.0/8 -j DROP",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.4.2.3 Ensure iptables outbound and established connections \nare configured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Configure the firewall rules for new outbound, and established connections. \nNote: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system \n\u2022",
        "Rationale": "If rules are not in place for new outbound, and established connections all packets will \nbe dropped by the default policy preventing network usage.",
        "Impact": "",
        "Audit": "Run the following command and verify all rules for new outbound, and established \nconnections match site policy: \n# iptables -L -v -n",
        "Remediation": "Configure iptables in accordance with site policy. The following commands will \nimplement a policy to allow all outbound connections and all established connections: \n# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT \n# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT \n# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT \n# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.4.2.4 Ensure iptables firewall rules exist for all open ports \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Any ports that have been opened on non-loopback addresses need firewall rules to \ngovern traffic. \nNotes: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system \n\u2022",
        "Rationale": "Without a firewall rule configured for open ports default firewall policy will drop all \npackets to these ports.",
        "Impact": "",
        "Audit": "Run the following command to determine open ports: \n# ss -4tuln \n \nNetid  State      Recv-Q Send-Q    Local Address:Port                   Peer \nAddress:Port \nudp    UNCONN     0      0                     *:68                                \n*:* \nudp    UNCONN     0      0                     *:123                               \n*:* \ntcp    LISTEN     0      128                   *:22                                \n*:* \nRun the following command to determine firewall rules: \n# iptables -L INPUT -v -n \nChain INPUT (policy DROP 0 packets, 0 bytes) \n pkts bytes target     prot opt in     out     source               \ndestination \n    0     0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0 \n    0     0 DROP       all  --  *      *       127.0.0.0/8          0.0.0.0/0 \n    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            \ntcp dpt:22 state NEW \nVerify all open ports listening on non-localhost addresses have at least one firewall rule. \nThe last line identified by the tcp dpt:22 state NEW identifies it as a firewall rule for \nnew connections on tcp port 22.",
        "Remediation": "For each port identified in the audit which does not have a firewall rule establish a \nproper rule for accepting inbound connections: \n# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j \nACCEPT",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "4.4.3.1 Ensure ip6tables default deny firewall policy (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "A default deny all policy on connections ensures that any unconfigured network usage \nwill be rejected. \nNote: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system \n\u2022",
        "Rationale": "With a default accept policy the firewall will accept any packet that is not configured to \nbe denied. It is easier to allow list acceptable usage than to deny list unacceptable \nusage.",
        "Impact": "",
        "Audit": "Run the following command and verify that the policy for the INPUT, OUTPUT, and \nFORWARD chains is DROP or REJECT: \n# ip6tables -L \nChain INPUT (policy DROP) \nChain FORWARD (policy DROP) \nChain OUTPUT (policy DROP) \n- OR - \nVerify IPv6 is disabled: \nRun the following script. Output will confirm if IPv6 is enabled on the system. \n#!/usr/bin/env bash \n \n{ \n   l_ipv6_enabled=\"is\" \n   ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_enabled=\"is not\" \n   if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n      sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n      l_ipv6_enabled=\"is not\" \n   fi \n   echo -e \" - IPv6 $l_ipv6_enabled enabled on the system\" \n}",
        "Remediation": "- IF - IPv6 is enabled on your system: \nRun the following commands to implement a default DROP policy: \n# ip6tables -P INPUT DROP \n# ip6tables -P OUTPUT DROP \n# ip6tables -P FORWARD DROP",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.4.3.2 Ensure ip6tables loopback traffic is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny \ntraffic to the loopback network (::1). \nNote: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system \n\u2022",
        "Rationale": "Loopback traffic is generated between processes on machine and is typically critical to \noperation of the system. The loopback interface is the only place that loopback network \n(::1) traffic should be seen, all other interfaces should ignore traffic on this network as \nan anti-spoofing measure.",
        "Impact": "",
        "Audit": "Run the following commands and verify output includes the listed rules in order (packet \nand byte counts may differ): \n# ip6tables -L INPUT -v -n \nChain INPUT (policy DROP 0 packets, 0 bytes) \npkts bytes target     prot opt in     out     source               \ndestination \n    0     0 ACCEPT     all      lo     *       ::/0                 ::/0         \n    0     0 DROP       all      *      *       ::1                  ::/0         \n \n \n# ip6tables -L OUTPUT -v -n \nChain OUTPUT (policy DROP 0 packets, 0 bytes) \npkts bytes target     prot opt in     out     source               \ndestination \n    0     0 ACCEPT     all      *      lo      ::/0                 ::/0         \n- OR - \nVerify IPv6 is disabled: \nRun the following script. Output will confirm if IPv6 is enabled on the system. \n#!/usr/bin/env bash \n \n{ \n   l_ipv6_enabled=\"is\" \n   ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_enabled=\"is not\" \n   if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n      sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n      l_ipv6_enabled=\"is not\" \n   fi \n   echo -e \" - IPv6 $l_ipv6_enabled enabled on the system\" \n}",
        "Remediation": "Run the following commands to implement the loopback rules: \n# ip6tables -A INPUT -i lo -j ACCEPT \n# ip6tables -A OUTPUT -o lo -j ACCEPT \n# ip6tables -A INPUT -s ::1 -j DROP",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.4.3.3 Ensure ip6tables outbound and established connections \nare configured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Configure the firewall rules for new outbound, and established IPv6 connections. \nNote: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system \n\u2022",
        "Rationale": "If rules are not in place for new outbound, and established connections all packets will \nbe dropped by the default policy preventing network usage.",
        "Impact": "",
        "Audit": "Run the following command and verify all rules for new outbound, and established \nconnections match site policy: \n# ip6tables -L -v -n \n- OR - \nVerify IPv6 is disabled: \nRun the following script. Output will confirm if IPv6 is enabled on the system. \n#!/usr/bin/env bash \n \n{ \n   l_ipv6_enabled=\"is\" \n   ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_enabled=\"is not\" \n   if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n      sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n      l_ipv6_enabled=\"is not\" \n   fi \n   echo -e \" - IPv6 $l_ipv6_enabled enabled on the system\" \n}",
        "Remediation": "Configure iptables in accordance with site policy. The following commands will \nimplement a policy to allow all outbound connections and all established connections: \n# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT \n# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT \n# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT \n# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "4.4.3.4 Ensure ip6tables firewall rules exist for all open ports \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Any ports that have been opened on non-loopback addresses need firewall rules to \ngovern traffic. \nNotes: \n\u2022 \nChanging firewall settings while connected over network can result in being \nlocked out of the system \n\u2022",
        "Rationale": "Without a firewall rule configured for open ports default firewall policy will drop all \npackets to these ports.",
        "Impact": "",
        "Audit": "Run the following command to determine open ports: \n# ss -6tuln \n \nNetid  State      Recv-Q Send-Q    Local Address:Port                   Peer \nAddress:Port   \nudp    UNCONN     0      0                   ::1:123                              \n:::* \nudp    UNCONN     0      0                    :::123                              \n:::* \ntcp    LISTEN     0      128                  :::22                               \n:::* \ntcp    LISTEN     0      20                  ::1:25                               \n:::* \nRun the following command to determine firewall rules: \n# ip6tables -L INPUT -v -n \n \nChain INPUT (policy DROP 0 packets, 0 bytes) \n pkts bytes target     prot opt in     out     source               \ndestination  \n    0     0 ACCEPT     all      lo     *       ::/0                 ::/0         \n    0     0 DROP       all      *      *       ::1                  ::/0         \n    0     0 ACCEPT     tcp      *      *       ::/0                 ::/0                 \ntcp dpt:22 state NEW \nVerify all open ports listening on non-localhost addresses have at least one firewall rule. \nThe last line identified by the \"tcp dpt:22 state NEW\" identifies it as a firewall rule for \nnew connections on tcp port 22. \n- OR - verify IPv6 is not enabled: \nRun the following script. Output will confirm if IPv6 is enabled on the system: \n#!/usr/bin/env bash \n \n{ \n   l_ipv6_enabled=\"is\" \n   ! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable && \nl_ipv6_enabled=\"is not\" \n   if sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" && \\ \n      sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \n\"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then \n      l_ipv6_enabled=\"is not\" \n   fi \n   echo -e \" - IPv6 $l_ipv6_enabled enabled on the system\" \n}",
        "Remediation": "For each port identified in the audit which does not have a firewall rule establish a \nproper rule for accepting inbound connections: \n# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j \nACCEPT",
        "References": "1. NIST SP 800-53 Rev. 5: CA-9, SC-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.4 Implement and Manage a Firewall on Servers \n \nImplement and manage a firewall on servers, where supported. Example \nimplementations include a virtual firewall, operating system firewall, or a third-\nparty firewall agent. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a \ndefault-deny rule that drops all traffic except those services and ports that are \nexplicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.004 \nTA0011 \nM1031, M1037"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The file /etc/ssh/sshd_config, and files ending in .conf in the \n/etc/ssh/sshd_config.d directory, contain configuration specifications for sshd.",
        "Rationale": "configuration specifications for sshd need to be protected from unauthorized changes \nby non-privileged users.",
        "Impact": "",
        "Audit": "Run the following script and verify /etc/ssh/sshd_config and files ending in .conf in \nthe /etc/ssh/sshd_config.d directory are: \n\u2022 \nMode 0600 or more restrictive \n\u2022 \nOwned by the root user \n\u2022 \nGroup owned by the group root. \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=() \n   perm_mask='0177' && maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\" \n   f_sshd_files_chk() \n   { \n      while IFS=: read -r l_mode l_user l_group; do \n         a_out2=() \n         [ $(( $l_mode & $perm_mask )) -gt 0 ] && a_out2+=(\"    Is mode: \n\\\"$l_mode\\\"\" \\ \n         \"    should be mode: \\\"$maxperm\\\" or more restrictive\") \n         [ \"$l_user\" != \"root\" ] && a_out2+=(\"    Is owned by \\\"$l_user\\\" \nshould be owned by \\\"root\\\"\") \n         [ \"$l_group\" != \"root\" ] && a_out2+=(\"    Is group owned by \n\\\"$l_user\\\" should be group owned by \\\"root\\\"\") \n         if [ \"${#a_out2[@]}\" -gt \"0\" ]; then \n            a_output2+=(\"  - File: \\\"$l_file\\\":\" \"${a_out2[@]}\") \n         else \n            a_output+=(\"  - File: \\\"$l_file\\\":\" \"    Correct: mode ($l_mode), \nowner ($l_user)\" \\ \n            \"    and group owner ($l_group) configured\") \n         fi \n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\")       \n   } \n   [ -e \"/etc/ssh/sshd_config\" ] && l_file=\"/etc/ssh/sshd_config\" && \nf_sshd_files_chk \n   while IFS= read -r -d $'\\0' l_file; do \n      [ -e \"$l_file\" ] && f_sshd_files_chk \n   done < <(find /etc/ssh/sshd_config.d -type f -name '*.conf' \\( -perm /077 \n-o ! -user root -o ! -group root \\) -print0 2>/dev/null) \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n} \n- IF - other locations are listed in an Include statement, *.conf files in these locations \nshould also be checked.",
        "Remediation": "Run the following script to set ownership and permissions on /etc/ssh/sshd_config \nand files ending in .conf in the /etc/ssh/sshd_config.d directory: \n#!/usr/bin/env bash \n \n{ \n   chmod u-x,og-rwx /etc/ssh/sshd_config \n   chown root:root /etc/ssh/sshd_config \n   while IFS= read -r -d $'\\0' l_file; do \n      if [ -e \"$l_file\" ]; then \n         chmod u-x,og-rwx \"$l_file\" \n         chown root:root \"$l_file\" \n      fi \n   done < <(find /etc/ssh/sshd_config.d -type f -print0 2>/dev/null) \n} \n- IF - other locations are listed in an Include statement, *.conf files in these locations \naccess should also be modified.",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1098, T1098.004, T1543, \nT1543.002 \nTA0005 \nM1022"
    },
    {
        "Title": "5.1.2 Ensure permissions on SSH private host key files are \nconfigured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "An SSH private key is one of two files used in SSH public key authentication. In this \nauthentication method, the possession of the private key is proof of identity. Only a \nprivate key that corresponds to a public key will be able to authenticate successfully. \nThe private keys need to be stored and handled carefully, and no copies of the private \nkey should be distributed.",
        "Rationale": "If an unauthorized user obtains the private SSH host key file, the host could be \nimpersonated",
        "Impact": "",
        "Audit": "Run the following script to verify SSH private host key files are owned by the root user \nand either: \n\u2022 \nowned by the group root and mode 0600 or more restrictive \n- OR - \n\u2022 \nowned by the group designated to own openSSH private keys and mode 0640 or \nmore restrictive \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=() \n   l_ssh_group_name=\"$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)\" \n   f_file_chk() \n   { \n      while IFS=: read -r l_file_mode l_file_owner l_file_group; do \n         a_out2=() \n         [ \"$l_file_group\" = \"$l_ssh_group_name\" ] && l_pmask=\"0137\" || l_pmask=\"0177\" \n         l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\" \n         if [ $(( $l_file_mode & $l_pmask )) -gt 0 ]; then \n            a_out2+=(\"    Mode: \\\"$l_file_mode\\\" should be mode: \\\"$l_maxperm\\\" or \nmore restrictive\") \n         fi \n         if [ \"$l_file_owner\" != \"root\" ]; then \n            a_out2+=(\"    Owned by: \\\"$l_file_owner\\\" should be owned by \\\"root\\\"\") \n         fi \n         if [[ ! \"$l_file_group\" =~ ($l_ssh_group_name|root) ]]; then \n            a_out2+=(\"    Owned by group \\\"$l_file_group\\\" should be group owned by: \n\\\"$l_ssh_group_name\\\" or \\\"root\\\"\") \n         fi \n         if [ \"${#a_out2[@]}\" -gt \"0\" ]; then \n            a_output2+=(\"  - File: \\\"$l_file\\\"${a_out2[@]}\") \n         else \n            a_output+=(\"  - File: \\\"$l_file\\\"\" \\ \n            \"    Correct: mode: \\\"$l_file_mode\\\", owner: \\\"$l_file_owner\\\" and group \nowner: \\\"$l_file_group\\\" configured\") \n         fi \n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\") \n   } \n   while IFS= read -r -d $'\\0' l_file; do  \n      if ssh-keygen -lf &>/dev/null \"$l_file\"; then  \n         file \"$l_file\" | grep -Piq -- '\\bopenssh\\h+([^#\\n\\r]+\\h+)?private\\h+key\\b' && \nf_file_chk \n      fi \n   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null) \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit \nfailure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Run the following script to set mode, ownership, and group on the private SSH host key \nfiles: \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=(); l_ssh_group_name=\"$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) \n{print $1}' /etc/group)\" \n   f_file_access_fix() \n   { \n      while IFS=: read -r l_file_mode l_file_owner l_file_group; do \n         a_out2=() \n         [ \"$l_file_group\" = \"$l_ssh_group_name\" ] && l_pmask=\"0137\" || l_pmask=\"0177\" \n         l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\" \n         if [ $(( $l_file_mode & $l_pmask )) -gt 0 ]; then \n            a_out2+=(\"    Mode: \\\"$l_file_mode\\\" should be mode: \\\"$l_maxperm\\\" or \nmore restrictive\" \\ \n            \"    updating to mode: \\:$l_maxperm\\\"\") \n            if [ \"l_file_group\" = \"$l_ssh_group_name\" ]; then \n               chmod u-x,g-wx,o-rwx \"$l_file\" \n            else \n               chmod u-x,go-rwx \"$l_file\" \n            fi \n         fi \n         if [ \"$l_file_owner\" != \"root\" ]; then \n            a_out2+=(\"    Owned by: \\\"$l_file_owner\\\" should be owned by \\\"root\\\"\" \\ \n            \"    Changing ownership to \\\"root\\\"\") \n            chown root \"$l_file\" \n         fi \n         if [[ ! \"$l_file_group\" =~ ($l_ssh_group_name|root) ]]; then \n            [ -n \"$l_ssh_group_name\" ] && l_new_group=\"$l_ssh_group_name\" || \nl_new_group=\"root\" \n            a_out2+=(\"    Owned by group \\\"$l_file_group\\\" should be group owned by: \n\\\"$l_ssh_group_name\\\" or \\\"root\\\"\" \\ \n            \"    Changing group ownership to \\\"$l_new_group\\\"\") \n            chgrp \"$l_new_group\" \"$l_file\" \n         fi \n         if [ \"${#a_out2[@]}\" -gt \"0\" ]; then \n            a_output2+=(\"  - File: \\\"$l_file\\\"\" \"${a_out2[@]}\") \n         else \n            a_output+=(\"  - File: \\\"$l_file\\\"\" \\ \n            \"Correct: mode: \\\"$l_file_mode\\\", owner: \\\"$l_file_owner\\\", and group \nowner: \\\"$l_file_group\\\" configured\") \n         fi \n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\") \n   } \n   while IFS= read -r -d $'\\0' l_file; do  \n      if ssh-keygen -lf &>/dev/null \"$l_file\"; then  \n         file \"$l_file\" | grep -Piq -- '\\bopenssh\\h+([^#\\n\\r]+\\h+)?private\\h+key\\b' && \nf_file_access_fix \n      fi \n   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null) \n   if [ \"${#a_output2[@]}\" -le \"0\" ]; then \n      printf '%s\\n' \"\" \" - No access changes required\" \"\" \n   else \n      printf '%s\\n' \"\" \" - Remediation results:\" \"${a_output2[@]}\" \"\" \n   fi \n}",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1552, T1552.004 \nTA0003, TA0006 \nM1022"
    },
    {
        "Title": "5.1.3 Ensure permissions on SSH public host key files are \nconfigured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "An SSH public key is one of two files used in SSH public key authentication. In this \nauthentication method, a public key is a key that can be used for verifying digital \nsignatures generated using a corresponding private key. Only a public key that \ncorresponds to a private key will be able to authenticate successfully.",
        "Rationale": "If a public host key file is modified by an unauthorized user, the SSH service may be \ncompromised.",
        "Impact": "",
        "Audit": "Run the following command and verify Access does not grant write or execute \npermissions to group or other for all returned files: \nRun the following script to verify SSH public host key files are mode 0644 or more \nrestrictive, owned by the root user, and owned by the root group: \n \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=() \n   l_pmask=\"0133\"; l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\" \n   f_file_chk() \n   { \n      while IFS=: read -r l_file_mode l_file_owner l_file_group; do \n         a_out2=() \n         if [ $(( $l_file_mode & $l_pmask )) -gt 0 ]; then \n            a_out2+=(\"    Mode: \\\"$l_file_mode\\\" should be mode: \n\\\"$l_maxperm\\\" or more restrictive\") \n         fi \n         if [ \"$l_file_owner\" != \"root\" ]; then \n            a_out2+=(\"    Owned by: \\\"$l_file_owner\\\" should be owned by: \n\\\"root\\\"\") \n         fi \n         if [ \"$l_file_group\" != \"root\" ]; then \n            a_out2+=(\"    Owned by group \\\"$l_file_group\\\" should be group \nowned by group: \\\"root\\\"\") \n         fi \n         if [ \"${#a_out2[@]}\" -gt \"0\" ]; then \n            a_output2+=(\"  - File: \\\"$l_file\\\"\" \"${a_out2[@]}\") \n         else \n            a_output+=(\"  - File: \\\"$l_file\\\"\" \\ \n            \"    Correct: mode: \\\"$l_file_mode\\\", owner: \\\"$l_file_owner\\\" \nand group owner: \\\"$l_file_group\\\" configured\") \n         fi \n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\") \n   } \n   while IFS= read -r -d $'\\0' l_file; do  \n      if ssh-keygen -lf &>/dev/null \"$l_file\"; then  \n         file \"$l_file\" | grep -Piq -- \n'\\bopenssh\\h+([^#\\n\\r]+\\h+)?public\\h+key\\b' && f_file_chk \n      fi \n   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null) \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      [ \"${#a_output[@]}\" -le 0 ] && a_output+=(\"  - No openSSH public keys \nfound\") \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Run the following script to set mode, ownership, and group on the public SSH host key \nfiles: \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=() \n   l_pmask=\"0133\"; l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\" \n   f_file_access_fix() \n   { \n      while IFS=: read -r l_file_mode l_file_owner l_file_group; do \n         a_out2=() \n         [ $(( $l_file_mode & $l_pmask )) -gt 0 ] && \\ \n            a_out2+=(\"    Mode: \\\"$l_file_mode\\\" should be mode: \n\\\"$l_maxperm\\\" or more restrictive\" \\ \n            \"    updating to mode: \\\"$l_maxperm\\\"\") && chmod u-x,go-wx \n\"$l_file\" \n         [ \"$l_file_owner\" != \"root\" ] && \\ \n            a_out2+=(\"    Owned by: \\\"$l_file_owner\\\" should be owned by \n\\\"root\\\"\" \\ \n            \"    Changing ownership to \\\"root\\\"\") && chown root \"$l_file\" \n         [ \"$l_file_group\" != \"root\" ] && \\ \n            a_out2+=(\"    Owned by group \\\"$l_file_group\\\" should be group \nowned by: \\\"root\\\"\" \\ \n            \"    Changing group ownership to \\\"root\\\"\") && chgrp root \n\"$l_file\" \n         if [ \"${#a_out2[@]}\" -gt \"0\" ]; then \n            a_output2+=(\"  - File: \\\"$l_file\\\"\" \"${a_out2[@]}\") \n         else \n            a_output+=(\"  - File: \\\"$l_file\\\"\" \\ \n            \"    Correct: mode: \\\"$l_file_mode\\\", owner: \\\"$l_file_owner\\\", \nand group owner: \\\"$l_file_group\\\" configured\") \n         fi \n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\") \n   } \n   while IFS= read -r -d $'\\0' l_file; do  \n      if ssh-keygen -lf &>/dev/null \"$l_file\"; then  \n         file \"$l_file\" | grep -Piq -- \n'\\bopenssh\\h+([^#\\n\\r]+\\h+)?public\\h+key\\b' && f_file_access_fix \n      fi \n   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null) \n   if [ \"${#a_output2[@]}\" -le \"0\" ]; then \n      printf '%s\\n' \"\" \" - No access changes required\" \"\" \n   else \n      printf '%s\\n' \" - Remediation results:\" \"${a_output2[@]}\" \"\" \n   fi \n} \nDefault Value: \n644 0/root 0/root",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1557, T1557.000 \nTA0003, TA0006 \nM1022"
    },
    {
        "Title": "5.1.4 Ensure sshd access is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "There are several options available to limit which users and group can access the \nsystem via SSH. It is recommended that at least one of the following options be \nleveraged: \n\u2022 \nAllowUsers:  \no The AllowUsers variable gives the system administrator the option of \nallowing specific users to ssh into the system. The list consists of space \nseparated user names. Numeric user IDs are not recognized with this \nvariable. If a system administrator wants to restrict user access further by \nonly allowing the allowed users to log in from a particular host, the entry \ncan be specified in the form of user@host. \n\u2022 \nAllowGroups:  \no The AllowGroups variable gives the system administrator the option of \nallowing specific groups of users to ssh into the system. The list consists \nof space separated group names. Numeric group IDs are not recognized \nwith this variable. \n\u2022 \nDenyUsers:  \no The DenyUsers variable gives the system administrator the option of \ndenying specific users to ssh into the system. The list consists of space \nseparated user names. Numeric user IDs are not recognized with this \nvariable. If a system administrator wants to restrict user access further by \nspecifically denying a user's access from a particular host, the entry can \nbe specified in the form of user@host. \n\u2022 \nDenyGroups:  \no The DenyGroups variable gives the system administrator the option of \ndenying specific groups of users to ssh into the system. The list consists \nof space separated group names. Numeric group IDs are not recognized \nwith this variable.",
        "Rationale": "Restricting which users can remotely access the system via SSH will help ensure that \nonly authorized users access the system.",
        "Impact": "",
        "Audit": "Run the following command and verify the output: \n# sshd -T | grep -Pi -- '^\\h*(allow|deny)(users|groups)\\h+\\H+' \nVerify that the output matches at least one of the following lines: \nallowusers <userlist> \n-OR- \nallowgroups <grouplist> \n-OR- \ndenyusers <userlist> \n-OR- \ndenygroups <grouplist> \nReview the list(s) to ensure included users and/or groups follow local site policy \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep -Pi -- \n'^\\h*(allow|deny)(users|groups)\\h+\\H+' \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain).",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any \nInclude and Match set statements as follows: \nAllowUsers <userlist> \n - AND/OR - \nAllowGroups <grouplist> \nNote: \n\u2022 \nFirst occurrence of a option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a .conf file in an \nInclude directory. \n\u2022 \nBe advised that these options are \"ANDed\" together. If both AllowUsers and \nAllowGroups are set, connections will be limited to the list of users that are also \na member of an allowed group. It is recommended that only one be set for clarity \nand ease of administration. \n\u2022 \nIt is easier to manage an allow list than a deny list. In a deny list, you could \npotentially add a user or group and forget to add it to the deny list. \n \nDefault Value: \nNone",
        "References": "1. SSHD_CONFIG(5) \n2. NIST SP 800-53 Rev. 5: AC-3. MP-2 \n3. SSHD(8)",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.3 Ensure the Use of Dedicated Administrative Accounts \n \nEnsure that all users with administrative account access use a dedicated or \nsecondary account for elevated activities. This account should only be used for \nadministrative activities and not internet browsing, email, or similar activities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1021, T1021.004 \nTA0008 \nM1018"
    },
    {
        "Title": "5.1.5 Ensure sshd Banner is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The Banner parameter specifies a file whose contents must be sent to the remote user \nbefore authentication is permitted. By default, no banner is displayed.",
        "Rationale": "Banners are used to warn connecting users of the particular site's policy regarding \nconnection. Presenting a warning message prior to the normal user login may assist the \nprosecution of trespassers on the computer system.",
        "Impact": "",
        "Audit": "Run the following command to verify Banner is set: \n# sshd -T | grep -Pi -- '^banner\\h+\\/\\H+' \nExample: \nbanner /etc/issue.net \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep -Pi -- '^banner\\h+\\/\\H+' \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain). \nRun the following command and verify that the contents or the file being called by the \nBanner argument match site policy: \n# [ -e \"$(sshd -T | awk '$1 == \"banner\" {print $2}')\" ] && cat \"$(sshd -T | \nawk '$1 == \"banner\" {print $2}')\" \nRun the following command and verify no results are returned: \n# grep -Psi -- \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|\\b$(grep '^ID=' /etc/os-release | cut -\nd= -f2 | sed -e 's/\"//g')\\b)\" \"$(sshd -T | awk '$1 == \"banner\" {print $2}')\"",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include \nand Match entries as follows: \nBanner /etc/issue.net \nNote: First occurrence of a option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \nEdit the file being called by the Banner argument with the appropriate contents \naccording to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to \nthe OS platform \nExample: \n# printf '%s\\n' \"Authorized users only. All activity may be monitored and \nreported.\" > \"$(sshd -T | awk '$1 == \"banner\" {print $2}')\"",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \n \nTA0001, TA0007 \nM1035",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.1.6 Ensure sshd Ciphers are configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "This variable limits the ciphers that SSH can use during communication. \nNotes: \n\u2022 \nSome organizations may have stricter requirements for approved ciphers. \n\u2022 \nEnsure that ciphers used are in compliance with site policy. \n\u2022 \nThe only \"strong\" ciphers currently FIPS 140 compliant are:  \no aes256-gcm@openssh.com  \no aes128-gcm@openssh.com  \no aes256-ctr \no aes192-ctr \no aes128-ctr",
        "Rationale": "Weak ciphers that are used for authentication to the cryptographic module cannot be \nrelied upon to provide confidentiality or integrity, and system data may be compromised. \n\u2022 \nThe Triple DES ciphers, as used in SSH, have a birthday bound of approximately \nfour billion blocks, which makes it easier for remote attackers to obtain clear text \ndata via a birthday attack against a long-duration encrypted session, aka a \n\"Sweet32\" attack. \n\u2022 \nError handling in the SSH protocol; Client and Server, when using a block cipher \nalgorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote \nattackers to recover certain plain text data from an arbitrary block of cipher text in \nan SSH session via unknown vectors.",
        "Impact": "",
        "Audit": "Run the following command to verify none of the \"weak\" ciphers are being used: \n# sshd -T | grep -Pi -- \n'^ciphers\\h+\\\"?([^#\\n\\r]+,)?((3des|blowfish|cast128|aes(128|192|256))-\ncbc|arcfour(128|256)?|rijndael-cbc@lysator\\.liu\\.se|chacha20-\npoly1305@openssh\\.com)\\b' \n- IF - a line is returned, review the list of ciphers. If the line includes chacha20-\npoly1305@openssh.com, review CVE-2023-48795 and verify the system has been \npatched. No ciphers in the list below should be returned as they're considered \"weak\": \n3des-cbc \naes128-cbc \naes192-cbc \naes256-cbc",
        "Remediation": "Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma \nseparated list of the site unapproved (weak) Ciphers preceded with a - above any \nInclude entries: \nExample: \nCiphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-\npoly1305@openssh.com \n- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-\npoly1305@openssh.com may be removed from the list of excluded ciphers. \nNote: First occurrence of an option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location. \nDefault Value: \nCiphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-\ngcm@openssh.com,aes256-gcm@openssh.com",
        "References": "1. https://nvd.nist.gov/vuln/detail/CVE-2023-48795 \n2. https://nvd.nist.gov/vuln/detail/CVE-2019-1543 \n3. https://nvd.nist.gov/vuln/detail/CVE-2016-2183 \n4. https://nvd.nist.gov/vuln/detail/CVE-2008-5161 \n5. https://www.openssh.com/txt/cbc.adv \n6. https://www.openssh.com/txt/cbc.adv \n7. SSHD_CONFIG(5) \n8. NIST SP 800-53 Rev. 5: SC-8",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.10 Encrypt Sensitive Data in Transit \n \nEncrypt sensitive data in transit. Example implementations can include: \nTransport Layer Security (TLS) and Open Secure Shell (OpenSSH). \n \n\u25cf \n\u25cf \nv7 \n14.4 Encrypt All Sensitive Information in Transit \n \nEncrypt all sensitive information in transit. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1040, T1040.000, T1557 \nTA0006 \nM1041"
    },
    {
        "Title": "5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax \nare configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Note: To clarify, the two settings described below are only meant for idle connections \nfrom a protocol perspective and are not meant to check if the user is active or not. An \nidle user does not mean an idle connection. SSH does not and never had, intentionally, \nthe capability to drop idle users. In SSH versions before 8.2p1 there was a bug that \ncaused these values to behave in such a manner that they were abused to disconnect \nidle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused \ndisconnect idle users. \nThe two options ClientAliveInterval and ClientAliveCountMax control the timeout \nof SSH sessions. Taken directly from man 5 sshd_config: \n\u2022 \nClientAliveInterval Sets a timeout interval in seconds after which if no data \nhas been received from the client, sshd(8) will send a message through the \nencrypted channel to request a response from the client. The default is 0, \nindicating that these messages will not be sent to the client. \n\u2022 \nClientAliveCountMax Sets the number of client alive messages which may be \nsent without sshd(8) receiving any messages back from the client. If this \nthreshold is reached while client alive messages are being sent, sshd will \ndisconnect the client, terminating the session. It is important to note that the use \nof client alive messages is very different from TCPKeepAlive. The client alive \nmessages are sent through the encrypted channel and therefore will not be \nspoofable. The TCP keepalive option en\u2010abled by TCPKeepAlive is spoofable. \nThe client alive mechanism is valuable when the client or server depend on \nknowing when a connection has become unresponsive. The default value is 3. If \nClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, \nunresponsive SSH clients will be disconnected after approximately 45 seconds. \nSetting a zero ClientAliveCountMax disables connection termination.",
        "Rationale": "In order to prevent resource exhaustion, appropriate values should be set for both \nClientAliveInterval and ClientAliveCountMax. Specifically, looking at the source \ncode, ClientAliveCountMax must be greater than zero in order to utilize the ability of \nSSH to drop idle connections. If connections are allowed to stay open indefinitely, this \ncan potentially be used as a DDOS attack or simple resource exhaustion could occur \nover unreliable networks. \nThe example set here is a 45 second timeout. Consult your site policy for network \ntimeouts and apply as appropriate.",
        "Impact": "",
        "Audit": "Run the following command and verify ClientAliveInterval and \nClientAliveCountMax are greater than zero: \n# sshd -T | grep -Pi -- '(clientaliveinterval|clientalivecountmax)' \nExample Output: \nclientaliveinterval 15 \nclientalivecountmax 3 \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep -Pi -- \n'(clientaliveinterval|clientalivecountmax)' \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain).",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and \nClientAliveCountMax parameters above any Include and Match entries according to \nsite policy. \nExample: \nClientAliveInterval 15 \nClientAliveCountMax 3 \nNote: First occurrence of a option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \n \nDefault Value: \nClientAliveInterval 0 \nClientAliveCountMax 3",
        "References": "1. SSHD_CONFIG(5) \n2. SSHD(8) \n3. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nhttps://bugzilla.redhat.com/show_bug.cgi?id=1873547 \nhttps://github.com/openssh/openssh-portable/blob/V_8_9/serverloop.c#L137 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.002, T1078.003 \nTA0001 \nM1026",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.1.8 Ensure sshd DisableForwarding is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Workstation \n\u2022  Level 2 - Server",
        "Description": "The DisableForwarding parameter disables all forwarding features, including X11, \nssh-agent(1), TCP and StreamLocal. This option overrides all other forwarding-related \noptions and may simplify restricted configurations. \n\u2022 \nX11Forwarding provides the ability to tunnel X11 traffic through the connection to \nenable remote graphic connections. \n\u2022 \nssh-agent is a program to hold private keys used for public key authentication. \nThrough use of environment variables the agent can be located and \nautomatically used for authentication when logging in to other machines using \nssh. \n\u2022 \nSSH port forwarding is a mechanism in SSH for tunneling application ports from \nthe client to the server, or servers to clients. It can be used for adding encryption \nto legacy applications, going through firewalls, and some system administrators \nand IT professionals use it for opening backdoors into the internal network from \ntheir home machines.",
        "Rationale": "Disable X11 forwarding unless there is an operational requirement to use X11 \napplications directly. There is a small risk that the remote X11 servers of users who are \nlogged in via SSH with X11 forwarding could be compromised by other users on the \nX11 server. Note that even if X11 forwarding is disabled, users can always install their \nown forwarders. \nanyone with root privilege on the the intermediate server can make free use of ssh-\nagent to authenticate them to other servers \nLeaving port forwarding enabled can expose the organization to security risks and \nbackdoors. SSH connections are protected with strong encryption. This makes their \ncontents invisible to most deployed network monitoring and traffic filtering solutions. \nThis invisibility carries considerable risk potential if it is used for malicious purposes \nsuch as data exfiltration. Cybercriminals or malware could exploit SSH to hide their \nunauthorized communications, or to exfiltrate stolen data from the target network. \n \nImpact: \nSSH tunnels are widely used in many corporate environments. In some environments \nthe applications themselves may have very limited native support for security. By \nutilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be \nachieved without having to modify the applications.",
        "Impact": "",
        "Audit": "Run the following command to verify DisableForwarding is set to yes: \n# sshd -T | grep -i disableforwarding \n \ndisableforwarding yes",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes \nabove any Include entry as follows: \nDisableForwarding yes \nNote: First occurrence of a option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location.",
        "References": "1. sshd_config(5) \n2. SSHD(8) \n3. NIST SP 800-53 Rev. 5: CM-7",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1210, T1210.000 \nTA0008 \nM1042"
    },
    {
        "Title": "5.1.9 Ensure sshd GSSAPIAuthentication is disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Workstation \n\u2022  Level 2 - Server",
        "Description": "The GSSAPIAuthentication parameter specifies whether user authentication based on \nGSSAPI is allowed",
        "Rationale": "Allowing GSSAPI authentication through SSH exposes the system's GSSAPI to remote \nhosts, and should be disabled to reduce the attack surface of the system",
        "Impact": "",
        "Audit": "Run the following command to verify GSSAPIAuthentication is set to no: \n# sshd -T | grep gssapiauthentication \n \ngssapiauthentication no \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep gssapiauthentication \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain)",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to \nno above any Include and Match entries as follows: \nGSSAPIAuthentication no \nNote: First occurrence of an option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \n \nDefault Value: \nGSSAPIAuthentication no",
        "References": "1. SSHD_CONFIG(5) \n2. SSHD(8) \n3. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0001 \nM1042"
    },
    {
        "Title": "5.1.10 Ensure sshd HostbasedAuthentication is disabled \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The HostbasedAuthentication parameter specifies if authentication is allowed \nthrough trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with \nsuccessful public key client host authentication.",
        "Rationale": "Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, \ndisabling the ability to use .rhosts files in SSH provides an additional layer of \nprotection.",
        "Impact": "",
        "Audit": "Run the following command to verify HostbasedAuthentication is set to no: \n# sshd -T | grep hostbasedauthentication \n \nhostbasedauthentication no \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep hostbasedauthentication \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain)",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter \nto no above any Include and Match entries as follows: \nHostbasedAuthentication no \nNote: First occurrence of a option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \nDefault Value: \nHostbasedAuthentication no",
        "References": "1. SSHD_CONFIG(5) \n2. SSHD(8) \n3. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0001 \nM1042",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.1.11 Ensure sshd IgnoreRhosts is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used \nin RhostsRSAAuthentication or HostbasedAuthentication.",
        "Rationale": "Setting this parameter forces users to enter a password when authenticating with SSH.",
        "Impact": "",
        "Audit": "Run the following command to verify IgnoreRhosts is set to yes: \n# sshd -T | grep ignorerhosts \n \nignorerhosts yes \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep ignorerhosts \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain)",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above \nany Include and Match entries as follows: \nIgnoreRhosts yes \nNote: First occurrence of a option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \nDefault Value: \nIgnoreRhosts yes",
        "References": "1. SSHD_CONFIG(5) \n2. SSHD(8) \n3. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0001 \nM1027"
    },
    {
        "Title": "5.1.12 Ensure sshd KexAlgorithms is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Key exchange is any method in cryptography by which cryptographic keys are \nexchanged between two parties, allowing use of a cryptographic algorithm. If the sender \nand receiver wish to exchange encrypted messages, each must be equipped to encrypt \nmessages to be sent and decrypt messages received \nNotes: \n\u2022 \nKex algorithms have a higher preference the earlier they appear in the list \n\u2022 \nSome organizations may have stricter requirements for approved Key exchange \nalgorithms \n\u2022 \nEnsure that Key exchange algorithms used are in compliance with site policy \n\u2022 \nThe only Key Exchange Algorithms currently FIPS 140 approved are:  \no ecdh-sha2-nistp256 \no ecdh-sha2-nistp384 \no ecdh-sha2-nistp521 \no diffie-hellman-group-exchange-sha256 \no diffie-hellman-group16-sha512 \no diffie-hellman-group18-sha512 \no diffie-hellman-group14-sha256",
        "Rationale": "Key exchange methods that are considered weak should be removed. A key exchange \nmethod may be weak because too few bits are used, or the hashing algorithm is \nconsidered too weak. Using weak algorithms could expose connections to man-in-the-\nmiddle attacks",
        "Impact": "",
        "Audit": "Run the following command to verify none of the \"weak\" Key Exchange algorithms are \nbeing used: \n# sshd -T | grep -Pi -- 'kexalgorithms\\h+([^#\\n\\r]+,)?(diffie-hellman-group1-\nsha1|diffie-hellman-group14-sha1|diffie-hellman-group-exchange-sha1)\\b' \n \nNothing should be returned \nThe following are considered \"weak\" Key Exchange Algorithms, and should not be \nused: \ndiffie-hellman-group1-sha1 \ndiffie-hellman-group14-sha1 \ndiffie-hellman-group-exchange-sha1",
        "Remediation": "Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain \na comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - \nabove any Include entries: \nExample: \nKexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-\nhellman-group-exchange-sha1 \nNote: First occurrence of an option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location. \nDefault Value: \nKexAlgorithms sntrup761x25519-sha512@openssh.com,curve25519-\nsha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-\nsha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-\nsha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256",
        "References": "1. https://ubuntu.com/server/docs/openssh-crypto-configuration \n2. NIST SP 800-53 Rev. 5: SC-8 \n3. SSHD(8) \n4. SSHD_CONFIG(5) \n \n \n \nAdditional Information: \nThe supported algorithms are: \ncurve25519-sha256 \ncurve25519-sha256@libssh.org \ndiffie-hellman-group1-sha1 \ndiffie-hellman-group14-sha1 \ndiffie-hellman-group14-sha256 \ndiffie-hellman-group16-sha512 \ndiffie-hellman-group18-sha512 \ndiffie-hellman-group-exchange-sha1 \ndiffie-hellman-group-exchange-sha256 \necdh-sha2-nistp256 \necdh-sha2-nistp384 \necdh-sha2-nistp521 \nsntrup4591761x25519-sha512@tinyssh.org",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.10 Encrypt Sensitive Data in Transit \n \nEncrypt sensitive data in transit. Example implementations can include: \nTransport Layer Security (TLS) and Open Secure Shell (OpenSSH). \n \n\u25cf \n\u25cf \nv7 \n14.4 Encrypt All Sensitive Information in Transit \n \nEncrypt all sensitive information in transit. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1040, T1040.000, T1557, \nT1557.000 \nTA0006 \nM1041"
    },
    {
        "Title": "5.1.13 Ensure sshd LoginGraceTime is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The LoginGraceTime parameter specifies the time allowed for successful \nauthentication to the SSH server. The longer the Grace period is the more open \nunauthenticated connections can exist. Like other session controls in this session the \nGrace Period should be limited to appropriate organizational limits to ensure the service \nis available for needed access.",
        "Rationale": "Setting the LoginGraceTime parameter to a low number will minimize the risk of \nsuccessful brute force attacks to the SSH server. It will also limit the number of \nconcurrent unauthenticated connections While the recommended setting is 60 seconds \n(1 Minute), set the number based on site policy.",
        "Impact": "",
        "Audit": "Run the following command and verify that output LoginGraceTime is between 1 and \n60 seconds: \n# sshd -T | grep logingracetime \n \nlogingracetime 60",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60 \nseconds or less above any Include entry as follows: \nLoginGraceTime 60 \nNote: First occurrence of a option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location. \nDefault Value: \nLoginGraceTime 120",
        "References": "1. SSHD_CONFIG(5) \n2. NIST SP 800-53 Rev. 5: CM-6 \n3. SSHD(8) \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.003, T1110.004 \nTA0006 \nM1036",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.1.14 Ensure sshd LogLevel is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "SSH provides several logging levels with varying amounts of verbosity. The DEBUG \noptions are specifically not recommended other than strictly for debugging SSH \ncommunications. These levels provide so much data that it is difficult to identify \nimportant security information, and may violate the privacy of users.",
        "Rationale": "The INFO level is the basic level that only records login activity of SSH users. In many \nsituations, such as Incident Response, it is important to determine when a particular \nuser was active on a system. The logout record can eliminate those users who \ndisconnected, which helps narrow the field. \nThe VERBOSE level specifies that login and logout activity as well as the key fingerprint \nfor any SSH key used for login will be logged. This information is important for SSH key \nmanagement, especially in legacy environments.",
        "Impact": "",
        "Audit": "Run the following command and verify that output matches loglevel VERBOSE or \nloglevel INFO: \n# sshd -T | grep loglevel \n \nloglevel VERBOSE \n   - OR - \nloglevel INFO \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep loglevel \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain)",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or \nINFO above any Include and Match entries as follows: \nLogLevel VERBOSE \n   - OR - \nLogLevel INFO \nNote: First occurrence of an option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \nDefault Value: \nLogLevel INFO",
        "References": "1. https://www.ssh.com/ssh/sshd_config/ \n2. NIST SP 800-53 Rev. 5: AU-3, AU-12, SI-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005"
    },
    {
        "Title": "5.1.15 Ensure sshd MACs are configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "This variable limits the types of MAC algorithms that SSH can use during \ncommunication. \nNotes: \n\u2022 \nSome organizations may have stricter requirements for approved MACs. \n\u2022 \nEnsure that MACs used are in compliance with site policy. \n\u2022 \nThe only \"strong\" MACs currently FIPS 140 approved are:  \no HMAC-SHA1 \no HMAC-SHA2-256 \no HMAC-SHA2-384 \no HMAC-SHA2-512",
        "Rationale": "MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase \nexploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal \nof attention as a weak spot that can be exploited with expanded computing power. An \nattacker that breaks the algorithm could take advantage of a MiTM position to decrypt \nthe SSH tunnel and capture credentials and information.",
        "Impact": "",
        "Audit": "Run the following command to verify none of the \"weak\" MACs are being used: \n# sshd -T | grep -Pi -- 'macs\\h+([^#\\n\\r]+,)?(hmac-md5|hmac-md5-96|hmac-\nripemd160|hmac-sha1-96|umac-64@openssh\\.com|hmac-md5-etm@openssh\\.com|hmac-\nmd5-96-etm@openssh\\.com|hmac-ripemd160-etm@openssh\\.com|hmac-sha1-96-\netm@openssh\\.com|umac-64-etm@openssh\\.com|umac-128-etm@openssh\\.com)\\b' \n \nNothing should be returned \nNote: Review CVE-2023-48795 and verify the system has been patched. If the system \nhas not been patched, review the use of the Encrypt Then Mac (etm) MACs. \nThe following are considered \"weak\" MACs, and should not be used: \nhmac-md5 \nhmac-md5-96 \nhmac-ripemd160 \nhmac-sha1-96 \numac-64@openssh.com \nhmac-md5-etm@openssh.com \nhmac-md5-96-etm@openssh.com \nhmac-ripemd160-etm@openssh.com \nhmac-sha1-96-etm@openssh.com \numac-64-etm@openssh.com \numac-128-etm@openssh.com",
        "Remediation": "Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma \nseparated list of the site unapproved (weak) MACs preceded with a - above any \nInclude entries: \nExample: \nMACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-\n64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-\nripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-\netm@openssh.com,umac-128-etm@openssh.com \n- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs \nshould be added to the exclude list: hmac-sha1-etm@openssh.com,hmac-sha2-256-\netm@openssh.com,hmac-sha2-512-etm@openssh.com \nNote: First occurrence of an option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location. \nDefault Value: \nMACs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-\netm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-\netm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-\n256,hmac-sha2-512,hmac-sha1",
        "References": "1. https://nvd.nist.gov/vuln/detail/CVE-2023-48795 \n2. More information on SSH downgrade attacks can be found here: \nhttp://www.mitls.org/pages/attacks/SLOTH \n3. SSHD_CONFIG(5) \n4. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.10 Encrypt Sensitive Data in Transit \n \nEncrypt sensitive data in transit. Example implementations can include: \nTransport Layer Security (TLS) and Open Secure Shell (OpenSSH). \n \n\u25cf \n\u25cf \nv7 \n14.4 Encrypt All Sensitive Information in Transit \n \nEncrypt all sensitive information in transit. \n \n\u25cf \n\u25cf \nv7 \n16.5 Encrypt Transmittal of Username and \nAuthentication Credentials \n \nEnsure that all account usernames and authentication credentials are \ntransmitted across networks using encrypted channels. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1040, T1040.000, T1557, \nT1557.000 \nTA0006 \nM1041"
    },
    {
        "Title": "5.1.16 Ensure sshd MaxAuthTries is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The MaxAuthTries parameter specifies the maximum number of authentication \nattempts permitted per connection. When the login failure count reaches half the \nnumber, error messages will be written to the syslog file detailing the login failure.",
        "Rationale": "Setting the MaxAuthTries parameter to a low number will minimize the risk of \nsuccessful brute force attacks to the SSH server. While the recommended setting is 4, \nset the number based on site policy.",
        "Impact": "",
        "Audit": "Run the following command and verify that MaxAuthTries is 4 or less: \n# sshd -T | grep maxauthtries \n \nmaxauthtries 4 \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep maxauthtries \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain)",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less \nabove any Include and Match entries as follows: \nMaxAuthTries 4 \nNote: First occurrence of an option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \n \nDefault Value: \nMaxAuthTries 6",
        "References": "1. SSHD_CONFIG(5) \n2. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n16.13 Alert on Account Login Behavior Deviation \n \nAlert when users deviate from normal login behavior, such as time-of-day, \nworkstation location and duration. \n \n \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.003 \nTA0006 \nM1036"
    },
    {
        "Title": "5.1.17 Ensure sshd MaxSessions is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The MaxSessions parameter specifies the maximum number of open sessions \npermitted from a given connection.",
        "Rationale": "To protect a system from denial of service due to a large number of concurrent \nsessions, use the rate limiting function of MaxSessions to protect availability of sshd \nlogins and prevent overwhelming the daemon.",
        "Impact": "",
        "Audit": "Run the following command and verify that MaxSessions is 10 or less: \n# sshd -T | grep -i maxsessions \n \nmaxsessions 10 \nRun the following command and verify the output: \ngrep -Psi -- '^\\h*MaxSessions\\h+\\\"?(1[1-9]|[2-9][0-9]|[1-9][0-9][0-9]+)\\b' \n/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf \n \nNothing should be returned \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep maxsessions \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain)",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less \nabove any Include and Match entries as follows: \nMaxSessions 10 \nNote: First occurrence of an option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \nDefault Value: \nMaxSessions 10",
        "References": "1. SSHD_CONFIG(5) \n2. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.002 \nTA0040",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.1.18 Ensure sshd MaxStartups is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The MaxStartups parameter specifies the maximum number of concurrent \nunauthenticated connections to the SSH daemon.",
        "Rationale": "To protect a system from denial of service due to a large number of pending \nauthentication connection attempts, use the rate limiting function of MaxStartups to \nprotect availability of sshd logins and prevent overwhelming the daemon.",
        "Impact": "",
        "Audit": "Run the following command to verify MaxStartups is 10:30:60 or more restrictive: \n# sshd -T | awk '$1 ~ /^\\s*maxstartups/{split($2, a, \":\");{if(a[1] > 10 || \na[2] > 30 || a[3] > 60) print $0}}' \nNothing should be returned",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or \nmore restrictive above any Include entries as follows: \nMaxStartups 10:30:60 \nNote: First occurrence of a option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location. \nDefault Value: \nMaxStartups 10:30:100",
        "References": "1. SSHD_CONFIG(5) \n2. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1499, T1499.002 \nTA0040",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.1.19 Ensure sshd PermitEmptyPasswords is disabled \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The PermitEmptyPasswords parameter specifies if the SSH server allows login to \naccounts with empty password strings.",
        "Rationale": "Disallowing remote shell access to accounts that have an empty password reduces the \nprobability of unauthorized access to the system.",
        "Impact": "",
        "Audit": "Run the following command to verify PermitEmptyPasswords is set to no: \n# sshd -T | grep permitemptypasswords \n \npermitemptypasswords no \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep permitemptypasswords \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain)",
        "Remediation": "Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no \nabove any Include and Match entries as follows: \nPermitEmptyPasswords no \nNote: First occurrence of an option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \n \nDefault Value: \nPermitEmptyPasswords no",
        "References": "1. SSHD_CONFIG(5) \n2. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1021 \nTA0008 \nM1042"
    },
    {
        "Title": "5.1.20 Ensure sshd PermitRootLogin is disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The PermitRootLogin parameter specifies if the root user can log in using SSH. The \ndefault is prohibit-password.",
        "Rationale": "Disallowing root logins over SSH requires system admins to authenticate using their \nown individual account, then escalating to root. This limits opportunity for non-\nrepudiation and provides a clear audit trail in the event of a security incident.",
        "Impact": "",
        "Audit": "Run the following command to verify PermitRootLogin is set to no: \n# sshd -T | grep permitrootlogin \n \npermitrootlogin no \n- IF - Match set statements are used in your environment, specify the connection \nparameters to use for the -T extended test mode and run the audit to verify the setting \nis not incorrectly configured in a match block \nExample additional audit needed for a match block for the user sshuser: \n# sshd -T -C user=sshuser | grep permitrootlogin \nNote: If provided, any Match directives in the configuration file that would apply are \napplied before the configuration is written to standard output. The connection \nparameters are supplied as keyword=value pairs and may be supplied in any order, \neither with multiple -C options or as a comma-separated list. The keywords are addr \n(source address), user (user), host (resolved source host name), laddr (local \naddress), lport (local port number), and rdomain (routing domain)",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no \nabove any Include and Match entries as follows: \nPermitRootLogin no \nNote: First occurrence of an option takes precedence, Match set statements \nwithstanding. If Include locations are enabled, used, and order of precedence is \nunderstood in your environment, the entry may be created in a file in Include location. \n \nDefault Value: \nPermitRootLogin without-password",
        "References": "1. SSHD_CONFIG(5) \n2. NIST SP 800-53 Rev. 5:AC-6",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.4 Restrict Administrator Privileges to Dedicated \nAdministrator Accounts \n \nRestrict administrator privileges to dedicated administrator accounts on \nenterprise assets. Conduct general computing activities, such as internet \nbrowsing, email, and productivity suite use, from the user\u2019s primary, non-privileged \naccount. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.3 Ensure the Use of Dedicated Administrative Accounts \n \nEnsure that all users with administrative account access use a dedicated or \nsecondary account for elevated activities. This account should only be used for \nadministrative activities and not internet browsing, email, or similar activities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1021 \nTA0008 \nM1042"
    },
    {
        "Title": "5.1.21 Ensure sshd PermitUserEnvironment is disabled \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The PermitUserEnvironment option allows users to present environment options to \nthe SSH daemon.",
        "Rationale": "Permitting users the ability to set environment variables through the SSH daemon could \npotentially allow users to bypass security controls (e.g. setting an execution path that \nhas SSH executing trojan'd programs)",
        "Impact": "",
        "Audit": "Run the following command to verify PermitUserEnviroment is set to no: \n# sshd -T | grep permituserenvironment \n \npermituserenvironment no",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to \nno above any Include entries as follows: \nPermitUserEnvironment no \nNote: First occurrence of an option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location. \nDefault Value: \nPermitUserEnvironment no",
        "References": "1. SSHD_CONFIG(5) \n2. NIST SP 800-53 Rev. 5: CM-1,CM-2, CM-6, CM-7, IA-5 \n3. SSHD(8) \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1021 \nTA0008 \nM1042",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.1.22 Ensure sshd UsePAM is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If \nset to yes this will enable PAM authentication using \nChallengeResponseAuthentication and PasswordAuthentication directives in \naddition to PAM account and session module processing for all authentication types.",
        "Rationale": "When usePAM is set to yes, PAM runs through account and session types properly. This \nis important if you want to restrict access to services based off of IP, time or other \nfactors of the account. Additionally, you can make sure users inherit certain \nenvironment variables on login or disallow access to the server",
        "Impact": "",
        "Audit": "Run the following command to verify UsePAM is set to yes: \n# sshd -T | grep -i usepam \n \nusepam yes",
        "Remediation": "Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any \nInclude entries as follows: \nUsePAM yes \nNote: First occurrence of an option takes precedence. If Include locations are enabled, \nused, and order of precedence is understood in your environment, the entry may be \ncreated in a file in Include location. \nDefault Value: \nUsePAM yes",
        "References": "1. SSHD_CONFIG(5) \n2. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \n3. SSHD(8)",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1021, T1021.004 \nTA0001 \nM1035"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.2.1 Ensure sudo is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "sudo allows a permitted user to execute a command as the superuser or another user, \nas specified by the security policy. The invoking user's real (not effective) user ID is \nused to determine the user name with which to query the security policy.",
        "Rationale": "sudo supports a plug-in architecture for security policies and input/output logging. Third \nparties can develop and distribute their own policy and I/O logging plug-ins to work \nseamlessly with the sudo front end. The default security policy is sudoers, which is \nconfigured via the file /etc/sudoers and any entries in /etc/sudoers.d. \nThe security policy determines what privileges, if any, a user has to run sudo. The policy \nmay require that users authenticate themselves with a password or another \nauthentication mechanism. If authentication is required, sudo will exit if the user's \npassword is not entered within a configurable time limit. This limit is policy-specific.",
        "Impact": "",
        "Audit": "Run the following command to verify that either sudo is installed: \n# dpkg-query -s sudo &>/dev/null && echo \"sudo is installed\" \n \nsudo is installed \n- OR - \nRun the following command to verify that either sudo-ldap is installed: \n# dpkg-query -s sudo-ldap &>/dev/null && echo \"sudo-ldap is installed\" \n \nsudo-ldap is installed",
        "Remediation": "First determine if LDAP functionality is required. If so, then install sudo-ldap, else \ninstall sudo. \nExample: \n# apt install sudo",
        "References": "1. SUDO(8) \n2. NIST SP 800-53 Rev. 5: AC-6",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.4 Restrict Administrator Privileges to Dedicated \nAdministrator Accounts \n \nRestrict administrator privileges to dedicated administrator accounts on \nenterprise assets. Conduct general computing activities, such as internet \nbrowsing, email, and productivity suite use, from the user\u2019s primary, non-privileged \naccount. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.3 Ensure the Use of Dedicated Administrative Accounts \n \nEnsure that all users with administrative account access use a dedicated or \nsecondary account for elevated activities. This account should only be used for \nadministrative activities and not internet browsing, email, or similar activities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548 \nTA0004 \nM1026"
    },
    {
        "Title": "5.2.2 Ensure sudo commands use pty (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "sudo can be configured to run only from a pseudo terminal (pseudo-pty).",
        "Rationale": "Attackers can run a malicious program using sudo which would fork a background \nprocess that remains even when the main program has finished executing. \nImpact: \nWARNING: Editing the sudo configuration incorrectly can cause sudo to stop \nfunctioning. Always use visudo to modify sudo configuration files.",
        "Impact": "",
        "Audit": "Verify that sudo can only run other commands from a pseudo terminal. \nRun the following command to verify Defaults use_pty is set: \n# grep -rPi -- '^\\h*Defaults\\h+([^#\\n\\r]+,\\h*)?use_pty\\b' /etc/sudoers* \nVerify the output matches: \n/etc/sudoers:Defaults use_pty \nRun the follow command to to verify Defaults !use_pty is not set: \n# grep -rPi -- '^\\h*Defaults\\h+([^#\\n\\r]+,\\h*)?!use_pty\\b' /etc/sudoers* \nNothing should be returned",
        "Remediation": "Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f \n<PATH TO FILE> and add the following line: \nDefaults use_pty \nEdit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo \n-f <PATH TO FILE> and remove any occurrence of !use_pty \nNote: \n\u2022 \nsudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or \ncontain a . character to avoid causing problems with package manager or editor \ntemporary/backup files. \n\u2022 \nFiles are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will \nbe parsed before /etc/sudoers.d/10_second. \n\u2022 \nBe aware that because the sorting is lexical, not numeric, \n/etc/sudoers.d/1_whoops would be loaded after \n/etc/sudoers.d/10_second. \n\u2022 \nUsing a consistent number of leading zeroes in the file names can be used to \navoid such problems.",
        "References": "1. SUDO(8) \n2. VISUDO(8) \n3. sudoers(5) \n4. NIST SP 800-53 Rev. 5: AC-6",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.4 Restrict Administrator Privileges to Dedicated \nAdministrator Accounts \n \nRestrict administrator privileges to dedicated administrator accounts on \nenterprise assets. Conduct general computing activities, such as internet \nbrowsing, email, and productivity suite use, from the user\u2019s primary, non-privileged \naccount. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.003, T1548, \nT1548.003 \nTA0001, TA0003 \nM1026, M1028"
    },
    {
        "Title": "5.2.3 Ensure sudo log file exists (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "sudo can use a custom log file",
        "Rationale": "A sudo log file simplifies auditing of sudo commands \nImpact: \nWARNING: Editing the sudo configuration incorrectly can cause sudo to stop \nfunctioning. Always use visudo to modify sudo configuration files.",
        "Impact": "",
        "Audit": "Run the following command to verify that sudo has a custom log file configured: \n# grep -rPsi \n\"^\\h*Defaults\\h+([^#]+,\\h*)?logfile\\h*=\\h*(\\\"|\\')?\\H+(\\\"|\\')?(,\\h*\\H+\\h*)*\\h*\n(#.*)?$\" /etc/sudoers* \nVerify the output matches: \nDefaults logfile=\"/var/log/sudo.log\"",
        "Remediation": "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f \n<PATH TO FILE> and add the following line: \nExample: \nDefaults logfile=\"/var/log/sudo.log\" \nNote: \n\u2022 \nsudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or \ncontain a . character to avoid causing problems with package manager or editor \ntemporary/backup files. \n\u2022 \nFiles are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will \nbe parsed before /etc/sudoers.d/10_second. \n\u2022 \nBe aware that because the sorting is lexical, not numeric, \n/etc/sudoers.d/1_whoops would be loaded after \n/etc/sudoers.d/10_second. \n\u2022 \nUsing a consistent number of leading zeroes in the file names can be used to \navoid such problems.",
        "References": "1. SUDO(8) \n2. VISUDO(8) \n3. sudoers(5) \n4. NIST SP 800-53 Rev. 5: AU-3, AU-12 \nAdditional Information: \nvisudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the \nsudoers file against multiple simultaneous edits, provides basic sanity checks, and \nchecks for parse errors. If the sudoers file is currently being edited you will receive a \nmessage to try again later.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event source, \ndate, user, timestamp, source addresses, destination addresses, and other useful \nelements. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0004 \nM1026"
    },
    {
        "Title": "5.2.4 Ensure users must provide password for privilege escalation \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The operating system must be configured so that users must provide a password for \nprivilege escalation.",
        "Rationale": "Without (re-)authentication, users may access resources or perform tasks for which they \ndo not have authorization. \nWhen operating systems provide the capability to escalate a functional capability, it is \ncritical the user (re-)authenticate. \nImpact: \nThis will prevent automated processes from being able to elevate privileges.",
        "Impact": "",
        "Audit": "Note: If passwords are not being used for authentication, this is not applicable. \nVerify the operating system requires users to supply a password for privilege escalation. \nCheck the configuration of the /etc/sudoers and /etc/sudoers.d/* files with the \nfollowing command: \n# grep -r \"^[^#].*NOPASSWD\" /etc/sudoers* \nIf any line is found refer to the remediation procedure below.",
        "Remediation": "Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit \nthe relevant sudoers file. \nRemove any line with occurrences of NOPASSWD tags in the file.",
        "References": "1. NIST SP 800-53 Rev. 5: AC-6",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.4 Restrict Administrator Privileges to Dedicated \nAdministrator Accounts \n \nRestrict administrator privileges to dedicated administrator accounts on \nenterprise assets. Conduct general computing activities, such as internet \nbrowsing, email, and productivity suite use, from the user\u2019s primary, non-privileged \naccount. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.3 Ensure the Use of Dedicated Administrative Accounts \n \nEnsure that all users with administrative account access use a dedicated or \nsecondary account for elevated activities. This account should only be used for \nadministrative activities and not internet browsing, email, or similar activities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548 \nTA0004 \nM1026 \n \n5.2.5 Ensure re-authentication for privilege escalation is not \ndisabled globally (Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nThe operating system must be configured so that users must re-authenticate for \nprivilege escalation. \nRationale: \nWithout re-authentication, users may access resources or perform tasks for which they \ndo not have authorization. \nWhen operating systems provide the capability to escalate a functional capability, it is \ncritical the user re-authenticate. \nAudit: \nVerify the operating system requires users to re-authenticate for privilege escalation. \nCheck the configuration of the /etc/sudoers and /etc/sudoers.d/* files with the \nfollowing command: \n# grep -r \"^[^#].*\\!authenticate\" /etc/sudoers* \nIf any line is found with a !authenticate tag, refer to the remediation procedure below. \nRemediation: \nConfigure the operating system to require users to reauthenticate for privilege \nescalation. \nBased on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit \nthe relevant sudoers file. \nRemove any occurrences of !authenticate tags in the file(s). \nReferences: \n1. NIST SP 800-53 Rev. 5: AC-6 \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.4 Restrict Administrator Privileges to Dedicated \nAdministrator Accounts \n \nRestrict administrator privileges to dedicated administrator accounts on \nenterprise assets. Conduct general computing activities, such as internet \nbrowsing, email, and productivity suite use, from the user\u2019s primary, non-privileged \naccount. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.3 Ensure the Use of Dedicated Administrative Accounts \n \nEnsure that all users with administrative account access use a dedicated or \nsecondary account for elevated activities. This account should only be used for \nadministrative activities and not internet browsing, email, or similar activities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548 \nTA0004 \nM1026"
    },
    {
        "Title": "5.2.6 Ensure sudo authentication timeout is configured correctly \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "sudo caches used credentials for a default of 15 minutes. This is for ease of use when \nthere are multiple administrative tasks to perform. The timeout can be modified to suit \nlocal security policies. \nThis default is distribution specific. See audit section for further information.",
        "Rationale": "Setting a timeout value reduces the window of opportunity for unauthorized privileged \naccess to another user.",
        "Impact": "",
        "Audit": "Ensure that the caching timeout is no more than 15 minutes. \nExample: \n# grep -roP \"timestamp_timeout=\\K[0-9]*\" /etc/sudoers* \nIf there is no timestamp_timeout configured in /etc/sudoers* then the default is 15 \nminutes. This default can be checked with: \n# sudo -V | grep \"Authentication timestamp timeout:\" \nNote: A value of -1 means that the timeout is disabled. Depending on the configuration \nof the timestamp_type, this could mean for all terminals / processes of that user and \nnot just that one single terminal session.",
        "Remediation": "If the currently configured timeout is larger than 15 minutes, edit the file listed in the \naudit section with visudo -f <PATH TO FILE> and modify the entry \ntimestamp_timeout= to 15 minutes or less as per your site policy. The value is in \nminutes. This particular entry may appear on it's own, or on the same line as \nenv_reset. See the following two examples: \nDefaults    env_reset, timestamp_timeout=15 \nDefaults    timestamp_timeout=15 \nDefaults    env_reset",
        "References": "1. https://www.sudo.ws/man/1.9.0/sudoers.man.html \n2. NIST SP 800-53 Rev. 5: AC-6",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.4 Restrict Administrator Privileges to Dedicated \nAdministrator Accounts \n \nRestrict administrator privileges to dedicated administrator accounts on \nenterprise assets. Conduct general computing activities, such as internet \nbrowsing, email, and productivity suite use, from the user\u2019s primary, non-privileged \naccount. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.3 Ensure the Use of Dedicated Administrative Accounts \n \nEnsure that all users with administrative account access use a dedicated or \nsecondary account for elevated activities. This account should only be used for \nadministrative activities and not internet browsing, email, or similar activities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548 \nTA0004 \nM1026"
    },
    {
        "Title": "5.2.7 Ensure access to the su command is restricted (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The su command allows a user to run a command or shell as another user. The \nprogram has been superseded by sudo, which allows for more granular control over \nprivileged access. Normally, the su command can be executed by any user. By \nuncommenting the pam_wheel.so statement in /etc/pam.d/su, the su command will \nonly allow users in a specific groups to execute su. This group should be empty to \nreinforce the use of sudo for privileged access.",
        "Rationale": "Restricting the use of su , and using sudo in its place, provides system administrators \nbetter control of the escalation of user privileges to execute privileged commands. The \nsudo utility also provides a better logging and audit mechanism, as it can log each \ncommand executed via sudo , whereas su can only record that a user executed the su \nprogram.",
        "Impact": "",
        "Audit": "Run the following command: \n# grep -Pi \n'^\\h*auth\\h+(?:required|requisite)\\h+pam_wheel\\.so\\h+(?:[^#\\n\\r]+\\h+)?((?!\\2)\n(use_uid\\b|group=\\H+\\b))\\h+(?:[^#\\n\\r]+\\h+)?((?!\\1)(use_uid\\b|group=\\H+\\b))(\\\nh+.*)?$' /etc/pam.d/su \nVerify the output matches: \nauth required pam_wheel.so use_uid group=<group_name> \nRun the following command and verify that the group specified in <group_name> \ncontains no users: \n# grep <group_name> /etc/group \nVerify the output does not contain any users in the relevant group: \n<group_name>:x:<GID>:",
        "Remediation": "Create an empty group that will be specified for use of the su command. The group \nshould be named according to site policy. \nExample: \n# groupadd sugroup \nAdd the following line to the /etc/pam.d/su file, specifying the empty group: \nauth required pam_wheel.so use_uid group=sugroup",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548 \nTA0005 \nM1026"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.3.1.1 Ensure latest version of pam is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Updated versions of PAM include additional functionality",
        "Rationale": "To ensure the system has full functionality and access to the options covered by this \nBenchmark the latest version of libpam-runtime should be installed on the system",
        "Impact": "",
        "Audit": "Run the following command to verify the version of libpam-runtime on the system: \n# dpkg-query -s libpam-runtime | grep -P -- '^(Status|Version)\\b' \nThe output should be similar to: \nStatus: install ok installed \nVersion: 1.5.3-5",
        "Remediation": "- IF - the version of libpam-runtime on the system is less than version 1.5.3-5: \nRun the following command to update to the latest version of PAM: \n# apt upgrade libpam-runtime",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.3.1.2 Ensure libpam-modules is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Pluggable Authentication Modules for PAM",
        "Rationale": "To ensure the system has full functionality and access to the PAM options covered by \nthis Benchmark",
        "Impact": "",
        "Audit": "Run the following command to verify libpam-modules is installed and version 1.5.3-5 \nor later: \n# dpkg-query -s libpam-modules | grep -P -- '^(Status|Version)\\b' \nThe output should be similar to: \nStatus: install ok installed \nVersion: 1.5.3-5",
        "Remediation": "- IF - the version of libpam-modules on the system is less than version 1.5.3-5: \nRun the following command to update to the latest version of PAM: \n# apt upgrade libpam-modules",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.3.1.3 Ensure libpam-pwquality is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "libpwquality provides common functions for password quality checking and scoring \nthem based on their apparent randomness. The library also provides a function for \ngenerating random passwords with good pronounceability. \nThis module can be plugged into the password stack of a given service to provide some \nplug-in strength-checking for passwords. The code was originally based on \npam_cracklib module and the module is backwards compatible with its options.",
        "Rationale": "Strong passwords reduce the risk of systems being hacked through brute force \nmethods.",
        "Impact": "",
        "Audit": "Run the following command to verify libpam-pwquality is installed: \n# dpkg-query -s libpam-pwquality | grep -P -- '^(Status|Version)\\b' \nThe output should be similar to: \nStatus: install ok installed \nVersion: 1.4.5-3+build1",
        "Remediation": "Run the following command to install libpam-pwquality: \n# apt install libpam-pwquality",
        "References": "1. https://packages.debian.org/buster/libpam-pwquality",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.3.2 Configure pam-auth-update profiles \npam-auth-update is a utility that permits configuring the central authentication policy \nfor the system using pre-defined profiles as supplied by PAM module packages. \nProfiles - Shipped in the /usr/share/pam-configs/ directory specify the modules, \nwith options, to enable; the preferred ordering with respect to other profiles; and \nwhether a profile should be enabled by default. Packages providing PAM modules \nregister their profiles at install time by calling pam-auth-update --package. \nSelection of profiles is done using the standard debconf interface. The profile selection \nquestion will be asked at medium priority when packages are added or removed, so no \nuser interaction is required by default. Users may invoke pam-auth-update directly to \nchange their authentication configuration. \nThe pam-auth-update script makes every effort to respect local changes to \n/etc/pam.d/common-*. Local modifications to the list of module options will be \npreserved, and additions of modules within the managed portion of the stack will cause \npam-auth-update to treat the config files as locally modified and not make further \nchanges to the config files unless given the --force option. \nIf the user specifies that pam-auth-update should override local configuration changes, \nthe locally-modified files will be saved in /etc/pam.d/ with a suffix of .pam-old. \n \n5.3.2.1 Ensure pam_unix module is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "pam_unix is the standard Unix authentication module. It uses standard calls from the \nsystem's libraries to retrieve and set account information as well as authentication. \nUsually this is obtained from the /etc/passwd and if shadow is enabled, the \n/etc/shadow file as well. \nThe account component performs the task of establishing the status of the user's \naccount and password based on the following shadow elements: expire, \nlast_change, max_change, min_change, warn_change. In the case of the latter, it may \noffer advice to the user on changing their password or, through the \nPAM_AUTHTOKEN_REQD return, delay giving service to the user until they have \nestablished a new password. The entries listed above are documented in the shadow(5) \nmanual page. Should the user's record not contain one or more of these entries, the \ncorresponding shadow check is not performed. \nThe authentication component performs the task of checking the users credentials \n(password). The default action of this module is to not permit the user access to a \nservice if their official password is blank.",
        "Rationale": "The system should only provide access after performing authentication of a user.",
        "Impact": "",
        "Audit": "Run the following command to verify that pam_unix is enabled: \n# grep -P -- '\\bpam_unix\\.so\\b' /etc/pam.d/common-\n{account,session,auth,password} \nOutput should be simular to: \n/etc/pam.d/common-account:account   [success=1 new_authtok_reqd=done \ndefault=ignore]   pam_unix.so \n/etc/pam.d/common-session:session   required   pam_unix.so \n/etc/pam.d/common-auth:auth   [success=2 default=ignore]   pam_unix.so \ntry_first_pass \n/etc/pam.d/common-password:password   [success=1 default=ignore]   \npam_unix.so obscure use_authtok try_first_pass yescrypt",
        "Remediation": "Run the following command to enable the pam_unix module: \n# pam-auth-update --enable unix \nNote: If a site specific custom profile is being used in your environment to configure \nPAM that includes the configuration for the pam_faillock module, enable that module \ninstead",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5(1)",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.2.2 Ensure pam_faillock module is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The pam_faillock.so module maintains a list of failed authentication attempts per \nuser during a specified interval and locks the account in case there were more than the \nconfigured number of consecutive failed authentications (this is defined by the deny \nparameter in the faillock configuration). It stores the failure records into per-user files in \nthe tally directory.",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.",
        "Impact": "",
        "Audit": "Run the following commands to verify that pam_faillock is enabled: \n# grep -P -- '\\bpam_faillock\\.so\\b' /etc/pam.d/common-{auth,account} \nOutput should be similar to: \n/etc/pam.d/common-auth:auth     requisite                       \npam_faillock.so preauth \n/etc/pam.d/common-auth:auth     [default=die]                   \npam_faillock.so authfail \n/etc/pam.d/common-account:account       required                        \npam_faillock.so",
        "Remediation": "Create two pam-auth-update profiles in /usr/share/pam-configs/: \n1. Create the faillock profile in /usr/share/pam-configs/ with the following \nlines: \nName: Enable pam_faillock to deny access \nDefault: yes \nPriority: 0 \nAuth-Type: Primary \nAuth: \n        [default=die]                   pam_faillock.so authfail \nExample Script: \n#!/usr/bin/env bash \n \n{ \n   arr=('Name: Enable pam_faillock to deny access' 'Default: yes' 'Priority: \n0' 'Auth-Type: Primary' 'Auth:' '        [default=die]                   \npam_faillock.so authfail')  \n   printf '%s\\n' \"${arr[@]}\" > /usr/share/pam-configs/faillock \n} \n \n2. Create the faillock_notify profile in /usr/share/pam-configs/ with the \nfollowing lines: \nName: Notify of failed login attempts and reset count upon success \nDefault: yes \nPriority: 1024 \nAuth-Type: Primary \nAuth: \n        requisite                       pam_faillock.so preauth \nAccount-Type: Primary \nAccount: \n        required                        pam_faillock.so \nExample Script: \n#!/usr/bin/env bash \n \n{ \n   arr=('Name: Notify of failed login attempts and reset count upon success' \n'Default: yes' 'Priority: 1024' 'Auth-Type: Primary' 'Auth:' '        \nrequisite                       pam_faillock.so preauth' 'Account-Type: \nPrimary' 'Account:' '        required                        \npam_faillock.so')  \n   printf '%s\\n' \"${arr[@]}\" > /usr/share/pam-configs/faillock_notify \n} \nRun the following command to update the common-auth and common-account PAM \nfiles with the new profiles: \n \n# pam-auth-update --enable <profile_filename> \nExample: \n# pam-auth-update --enable faillock \n# pam-auth-update --enable faillock_notify \nNote: \n\u2022 \nThe name used for the file must be used in the pam-auth-update --enable \ncommand \n\u2022 \nThe Name: line should be easily recognizable and understood \n\u2022 \nThe Priority: Line is important as it effects the order of the lines in the \n/etc/pam.d/ files \n\u2022 \nIf a site specific custom profile is being used in your environment to configure \nPAM that includes the configuration for the pam_faillock module, enable that \nmodule instead",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n6.2 Establish an Access Revoking Process \n \nEstablish and follow a process, preferably automated, for revoking access to \nenterprise assets, through disabling accounts immediately upon termination, rights \nrevocation, or role change of a user. Disabling accounts, instead of deleting \naccounts, may be necessary to preserve audit trails. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.7 Establish Process for Revoking Access \n \nEstablish and follow an automated process for revoking system access by \ndisabling accounts immediately upon termination or change of responsibilities of an \nemployee or contractor . Disabling these accounts, instead of deleting accounts, \nallows preservation of audit trails. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.003 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.2.3 Ensure pam_pwquality module is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The pam_pwquality.so module performs password quality checking. This module can \nbe plugged into the password stack of a given service to provide strength-checking for \npasswords. The code was originally based on pam_cracklib module and the module is \nbackwards compatible with its options. \nThe action of this module is to prompt the user for a password and check its strength \nagainst a system dictionary and a set of rules for identifying poor choices. \nThe first action is to prompt for a single password, check its strength and then, if it is \nconsidered strong, prompt for the password a second time (to verify that it was typed \ncorrectly on the first occasion). All being well, the password is passed on to subsequent \nmodules to be installed as the new authentication token.",
        "Rationale": "Use of a unique, complex passwords helps to increase the time and resources required \nto compromise the password.",
        "Impact": "",
        "Audit": "Run the following command to verify that pam_pwhistory is enabled: \n# grep -P -- '\\bpam_pwquality\\.so\\b' /etc/pam.d/common-password \nOutput should be similar to: \npassword   requisite   pam_pwquality.so retry=3",
        "Remediation": "Run the following script to verify the pam_pwquality.so line exists in a pam-auth-\nupdate profile: \n# grep -P -- '\\bpam_pwquality\\.so\\b' /usr/share/pam-configs/* \nOutput should be similar to: \n \n/usr/share/pam-configs/pwquality:       requisite                       \npam_pwquality.so retry=3 \n/usr/share/pam-configs/pwquality:       requisite                       \npam_pwquality.so retry=3 \n- IF - similar output is returned: \nRun the following command to update /etc/pam.d/common-password with the \nreturned profile: \n# pam-auth-update --enable {PROFILE_NAME} \nExample: \n# pam-auth-update pwquality \n- IF - similar output is NOT returned: \nCreate a pam-auth-update profile in /usr/share/pam-configs/ with the following \nlines: \nName: Pwquality password strength checking \nDefault: yes \nPriority: 1024 \nConflicts: cracklib \nPassword-Type: Primary \nPassword: \n        requisite                       pam_pwquality.so retry=3 \nExample: \n#!/usr/bin/env bash \n \n{ \n   arr=('Name: Pwquality password strength checking' 'Default: yes' \n'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' '        \nrequisite                       pam_pwquality.so retry=3') \n   printf '%s\\n' \"${arr[@]}\" > /usr/share/pam-configs/pwquality \n} \nRun the following command to update /etc/pam.d/common-password with the \npwquality profile: \n# pam-auth-update --enable pwquality \nNote: \n\u2022 \nThe name used for the file must be used in the pam-auth-update --enable \ncommand \n\u2022 \nThe Name: line should be easily recognizable and understood \n\u2022 \nThe Priority: Line is important as it effects the order of the lines in the \n/etc/pam.d/ files \n\u2022 \nIf a site specific custom profile is being used in your environment to configure \nPAM that includes the configuration for the pam_pwquality module, enable that \nmodule instead",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.2.4 Ensure pam_pwhistory module is enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The pam_pwhistory.so module saves the last passwords for each user in order to \nforce password change history and keep the user from alternating between the same \npassword too frequently. \nThis module does not work together with kerberos. In general, it does not make much \nsense to use this module in conjunction with NIS or LDAP, since the old passwords are \nstored on the local machine and are not available on another machine for password \nhistory checking.",
        "Rationale": "Use of a unique, complex passwords helps to increase the time and resources required \nto compromise the password.",
        "Impact": "",
        "Audit": "Run the following command to verify that pam_pwhistory is enabled: \n# grep -P -- '\\bpam_pwhistory\\.so\\b' /etc/pam.d/common-password \nOutput should be similar to: \npassword   requisite   pam_pwhistory.so remember=24 enforce_for_root \ntry_first_pass use_authtok",
        "Remediation": "Run the following script to verify the pam_pwquality.so line exists in a pam-auth-\nupdate profile: \n# grep -P -- '\\bpam_pwhistory\\.so\\b' /usr/share/pam-configs/* \nOutput should be similar to: \n/usr/share/pam-configs/pwhistory:   requisite   pam_pwhistory.so remember=24 \nenforce_for_root try_first_pass use_authtok \n- IF - similar output is returned: \nRun the following command to update /etc/pam.d/common-password with the \nreturned profile: \n# pam-auth-update --enable {PROFILE_NAME} \nExample: \n \n# pam-auth-update pwhistory \n- IF - similar output is NOT returned: \nCreate a pwhistory profile in /usr/share/pam-configs/ with the following lines: \nName: pwhistory password history checking \nDefault: yes \nPriority: 1024 \nPassword-Type: Primary \nPassword: requisite pam_pwhistory.so remember=24 enforce_for_root \ntry_first_pass use_authtok \nExample Script: \n#!/usr/bin/env bash \n \n{ \n   arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: \n1024' 'Password-Type: Primary' 'Password:' '        requisite                       \npam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok') \n   printf '%s\\n' \"${arr[@]}\" > /usr/share/pam-configs/pwhistory \n} \nRun the following command to update /etc/pam.d/common-password with the \npwhistory profile: \n# pam-auth-update --enable pwhistory \nNote: \n\u2022 \nThe name used for the file must be used in the pam-auth-update --enable \ncommand \n\u2022 \nThe Name: line should be easily recognizable and understood \n\u2022 \nThe Priority: Line is important as it effects the order of the lines in the \n/etc/pam.d/ files \n\u2022 \nIf a site specific custom profile is being used in your environment to configure \nPAM that includes the configuration for the pam_pwhistory module, enable that \nmodule instead",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.3.3.1 Configure pam_faillock module \npam_faillock.so provides a way to configure the default settings for locking the user \nafter multiple failed authentication attempts. \nOptions: \n\u2022 \n<dir=/path/to/tally-directory> - The directory where the user files with the \nfailure records are kept. The default is /var/run/faillock. Note: These files will \ndisappear after reboot on systems configured with directory /var/run/faillock \nmounted on virtual memory. \n\u2022 \naudit - Will log the user name into the system log if the user is not found. \n\u2022 \nsilent - Don't print informative messages to the user. Please note that when \nthis option is not used there will be difference in the authentication behavior for \nusers which exist on the system and non-existing users. \n\u2022 \nno_log_info - Don't log informative messages via syslog(3). \n\u2022 \nlocal_users_only - Only track failed user authentications attempts for local \nusers in /etc/passwd and ignore centralized (AD, IdM, LDAP, etc.) users. The \nfaillock(8) command will also no longer track user failed authentication attempts. \nEnabling this option will prevent a double-lockout scenario where a user is locked \nout locally and in the centralized mechanism. \n\u2022 \nnodelay - Don't enforce a delay after authentication failures. \n\u2022 \ndeny=<n> - Deny access if the number of consecutive authentication failures for \nthis user during the recent interval exceeds . The default is 3. \n\u2022 \nfail_interval=n - The length of the interval during which the consecutive \nauthentication failures must happen for the user account lock out is n seconds. \nThe default is 900 (15 minutes). \n\u2022 \nunlock_time=n - The access will be re-enabled after n seconds after the lock \nout. The value 0 has the same meaning as value never - the access will not be \nre-enabled without resetting the faillock entries by the faillock(8) command. The \ndefault is 600 (10 minutes). Note that the default directory that pam_faillock uses \nis usually cleared on system boot so the access will be also re-enabled after \nsystem reboot. If that is undesirable a different tally directory must be set with the \ndir option. Also note that it is usually undesirable to permanently lock out users \nas they can become easily a target of denial of service attack unless the \nusernames are random and kept secret to potential attackers. \n\u2022 \neven_deny_root - Root account can become locked as well as regular accounts. \n\u2022 \nroot_unlock_time=n - This option implies even_deny_root option. Allow access \nafter n seconds to root account after the account is locked. In case the option is \nnot specified the value is the same as of the unlock_time option. \n\u2022 \nadmin_group=name - If a group name is specified with this option, members of \nthe group will be handled by this module the same as the root account (the \noptions even_deny_root and root_unlock_time will apply to them. By default the \noption is not set. \n \n5.3.3.1.1 Ensure password failed attempts lockout is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The deny=<n> option will deny access if the number of consecutive authentication \nfailures for this user during the recent interval exceeds .",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems.",
        "Impact": "",
        "Audit": "Run the following command to verify that Number of failed logon attempts before the \naccount is locked is no greater than 5 and meets local site policy: \n# grep -Pi -- '^\\h*deny\\h*=\\h*[1-5]\\b' /etc/security/faillock.conf \n \ndeny = 5 \nRun the following command to verify that the deny argument has not been set, or 5 or \nless and meets local site policy: \n# grep -Pi -- \n'^\\h*auth\\h+(requisite|required|sufficient)\\h+pam_faillock\\.so\\h+([^#\\n\\r]+\\h\n+)?deny\\h*=\\h*(0|[6-9]|[1-9][0-9]+)\\b' /etc/pam.d/common-auth \nNothing should be returned",
        "Remediation": "Create or edit the following line in /etc/security/faillock.conf setting the deny \noption to 5 or less: \ndeny = 5 \nRun the following command: \n# grep -Pl -- '\\bpam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?deny\\b' /usr/share/pam-\nconfigs/* \nEdit any returned files and remove the deny=<N> arguments from the \npam_faillock.so line(s): \n \nDefault Value: \ndeny = 3 \nAdditional Information: \nIf a user has been locked out because they have reached the maximum consecutive \nfailure count defined by deny= in the pam_faillock.so module, the user can be \nunlocked by issuing the command faillock --user <USERNAME> --reset. This \ncommand sets the failed count to 0, effectively unlocking the user.",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n6.2 Establish an Access Revoking Process \n \nEstablish and follow a process, preferably automated, for revoking access to \nenterprise assets, through disabling accounts immediately upon termination, rights \nrevocation, or role change of a user. Disabling accounts, instead of deleting \naccounts, may be necessary to preserve audit trails. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.7 Establish Process for Revoking Access \n \nEstablish and follow an automated process for revoking system access by \ndisabling accounts immediately upon termination or change of responsibilities of an \nemployee or contractor . Disabling these accounts, instead of deleting accounts, \nallows preservation of audit trails. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.003 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.3.1.2 Ensure password unlock time is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "unlock_time=<n> - The access will be re-enabled after seconds after the lock out. The \nvalue 0 has the same meaning as value never - the access will not be re-enabled \nwithout resetting the faillock entries by the faillock(8) command. \nNote: \n\u2022 \nThe default directory that pam_faillock uses is usually cleared on system boot so \nthe access will be also re-enabled after system reboot. If that is undesirable a \ndifferent tally directory must be set with the dir option. \n\u2022 \nIt is usually undesirable to permanently lock out users as they can become easily \na target of denial of service attack unless the usernames are random and kept \nsecret to potential attackers. \n\u2022 \nThe maximum configurable value for unlock_time is 604800",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems. \nImpact: \nUse of unlock_time=0 may allow an attacker to cause denial of service to legitimate \nusers. This will also require a systems administrator with elevated privileges to unlock \nthe account.",
        "Impact": "",
        "Audit": "Run the following command to verify that the time in seconds before the account is \nunlocked is either 0 (never) or 900 (15 minutes) or more and meets local site policy: \n# grep -Pi -- '^\\h*unlock_time\\h*=\\h*(0|9[0-9][0-9]|[1-9][0-9]{3,})\\b' \n/etc/security/faillock.conf \n \nunlock_time = 900 \nRun the following command to verify that the unlock_time argument has not been set, \nor is either 0 (never) or 900 (15 minutes) or more and meets local site policy: \n# grep -Pi -- \n'^\\h*auth\\h+(requisite|required|sufficient)\\h+pam_faillock\\.so\\h+([^#\\n\\r]+\\h\n+)?unlock_time\\h*=\\h*([1-9]|[1-9][0-9]|[1-8][0-9][0-9])\\b' /etc/pam.d/common-\nauth \nNothing should be returned",
        "Remediation": "Set password unlock time to conform to site policy. unlock_time should be 0 (never), \nor 900 seconds or greater. \nEdit /etc/security/faillock.conf and update or add the following line: \nunlock_time = 900 \nRun the following command: remove the unlock_time argument from the \npam_faillock.so module in the PAM files: \n# grep -Pl -- '\\bpam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?unlock_time\\b' \n/usr/share/pam-configs/* \nEdit any returned files and remove the unlock_time=<N> argument from the \npam_faillock.so line(s): \nDefault Value: \nunlock_time = 600 \nAdditional Information: \nIf a user has been locked out because they have reached the maximum consecutive \nfailure count defined by deny= in the pam_faillock.so module, the user can be \nunlocked by issuing the command faillock --user <USERNAME> --reset. This \ncommand sets the failed count to 0, effectively unlocking the user.",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n6.2 Establish an Access Revoking Process \n \nEstablish and follow a process, preferably automated, for revoking access to \nenterprise assets, through disabling accounts immediately upon termination, rights \nrevocation, or role change of a user. Disabling accounts, instead of deleting \naccounts, may be necessary to preserve audit trails. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.7 Establish Process for Revoking Access \n \nEstablish and follow an automated process for revoking system access by \ndisabling accounts immediately upon termination or change of responsibilities of an \nemployee or contractor . Disabling these accounts, instead of deleting accounts, \nallows preservation of audit trails. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.003 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.3.1.3 Ensure password failed attempts lockout includes root \naccount (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "even_deny_root - Root account can become locked as well as regular accounts \nroot_unlock_time=n - This option implies even_deny_root option. Allow access after n \nseconds to root account after the account is locked. In case the option is not specified \nthe value is the same as of the unlock_time option.",
        "Rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute \nforce password attacks against your systems. \nImpact: \nUse of unlock_time=0 or root_unlock_time=0 may allow an attacker to cause denial \nof service to legitimate users.",
        "Impact": "",
        "Audit": "Run the following command to verify that even_deny_root and/or root_unlock_time \nis enabled: \n# grep -Pi -- '^\\h*(even_deny_root|root_unlock_time\\h*=\\h*\\d+)\\b' \n/etc/security/faillock.conf \nExample output: \neven_deny_root \n \n--AND/OR-- \n \nroot_unlock_time = 60 \nRun the following command to verify that - IF - root_unlock_time is set, it is set to 60 \n(One minute) or more: \n# grep -Pi -- '^\\h*root_unlock_time\\h*=\\h*([1-9]|[1-5][0-9])\\b' \n/etc/security/faillock.conf \nNothing should be returned \nRun the following command to check the pam_faillock.so module for the \nroot_unlock_time argument. Verify -IF- root_unlock_time is set, it is set to 60 (One \nminute) or more: \n# grep -Pi -- \n'^\\h*auth\\h+([^#\\n\\r]+\\h+)pam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?root_unlock_time\\\nh*=\\h*([1-9]|[1-5][0-9])\\b' /etc/pam.d/common-auth \nNothing should be returned",
        "Remediation": "Edit /etc/security/faillock.conf: \n\u2022 \nRemove or update any line containing root_unlock_time, - OR - set it to a \nvalue of 60 or more \n\u2022 \nUpdate or add the following line: \neven_deny_root \nRun the following command: \n# grep -Pl -- \n'\\bpam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?(even_deny_root|root_unlock_time)' \n/usr/share/pam-configs/* \nEdit any returned files and remove the even_deny_root and root_unlock_time \narguments from the pam_faillock.so line(s): \nDefault Value: \ndisabled \n \nAdditional Information: \nIf a user has been locked out because they have reached the maximum consecutive \nfailure count defined by deny= in the pam_faillock.so module, the user can be \nunlocked by issuing the command faillock --user <USERNAME> --reset. This \ncommand sets the failed count to 0, effectively unlocking the user.",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n6.2 Establish an Access Revoking Process \n \nEstablish and follow a process, preferably automated, for revoking access to \nenterprise assets, through disabling accounts immediately upon termination, rights \nrevocation, or role change of a user. Disabling accounts, instead of deleting \naccounts, may be necessary to preserve audit trails. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.7 Establish Process for Revoking Access \n \nEstablish and follow an automated process for revoking system access by \ndisabling accounts immediately upon termination or change of responsibilities of an \nemployee or contractor . Disabling these accounts, instead of deleting accounts, \nallows preservation of audit trails. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.003 \nTA0006 \nM1027"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.3.3.2.1 Ensure password number of changed characters is \nconfigured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The pwquality difok option sets the number of characters in a password that must not \nbe present in the old password.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute-force attacks. \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.",
        "Impact": "",
        "Audit": "Run the following command to verify that the difok option is set to 2 or more and \nfollows local site policy: \n# grep -Psi -- '^\\h*difok\\h*=\\h*([2-9]|[1-9][0-9]+)\\b' \n/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf \nExample output: \n/etc/security/pwquality.conf.d/50-pwdifok.conf:difok = 2 \nVerify returned value(s) are 2 or more and meet local site policy \nRun the following command to verify that difok is not set, is 2 or more, and conforms to \nlocal site policy: \n# grep -Psi -- \n'^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\\nr]+\\h+)?difok\\h*=\\h*([0-1])\\b' /etc/pam.d/common-password \nNothing should be returned \nNote: \n\u2022 \nsettings should be configured in only one location for clarity \n\u2022 \nSettings observe an order of precedence: \no module arguments override the settings in the \n/etc/security/pwquality.conf configuration file \no settings in the /etc/security/pwquality.conf configuration file \noverride settings in a .conf file in the \n/etc/security/pwquality.conf.d/ directory \no settings in a .conf file in the /etc/security/pwquality.conf.d/ \ndirectory are read in canonical order, with last read file containing the \nsetting taking precedence \n\u2022 \nIt is recommended that settings be configured in a .conf file in the \n/etc/security/pwquality.conf.d/ directory for clarity, convenience, and \ndurability.",
        "Remediation": "Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ \ndirectory or the file /etc/security/pwquality.conf and add or modify the following \nline to set difok to 2 or more. Ensure setting conforms to local site policy: \nExample: \n#!/usr/bin/env bash \n \n{ \n   sed -ri 's/^\\s*difok\\s*=/# &/' /etc/security/pwquality.conf \n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir \n/etc/security/pwquality.conf.d/ \n   printf '\\n%s' \"difok = 2\" > /etc/security/pwquality.conf.d/50-pwdifok.conf \n} \nRun the following command: \n# grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?difok\\b' /usr/share/pam-\nconfigs/* \nEdit any returned files and remove the difok argument from the pam_pwquality.so \nline(s): \nDefault Value: \ndifok = 1",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.3.2.2 Ensure minimum password length is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The minimum password length setting determines the lowers number of characters that \nmake up a password for a user account. There are many different theories about how to \ndetermine the best password length for an organization, but perhaps \"passphrase\" is a \nbetter term than \"password\". \nThe minlen option sets the minimum acceptable size for the new password (plus one if \ncredits are not disabled which is the default). Cannot be set to lower value than 6.",
        "Rationale": "Strong passwords help protect systems from password attacks. Types of password \nattacks include dictionary attacks, which attempt to use common words and phrases, \nand brute force attacks, which try every possible combination of characters. Also \nattackers may try to obtain the account database so they can use tools to discover the \naccounts and passwords. \nImpact: \nIn general, it is true that longer passwords are better (harder to crack), but it is also true \nthat forced password length requirements can cause user behavior that is predictable \nand undesirable. For example, requiring users to have a minimum 16-character \npassword may cause them to choose repeating patterns like fourfourfourfour or \npasswordpassword that meet the requirement but aren\u2019t hard to guess. Additionally, \nlength requirements increase the chances that users will adopt other insecure practices, \nlike writing them down, re-using them or storing them unencrypted in their documents. \nHaving a reasonable minimum length with no maximum character limit increases the \nresulting average password length used (and therefore the strength).6",
        "Impact": "",
        "Audit": "Run the following command to verify that password length is 14 or more characters, and \nconforms to local site policy: \n# grep -Psi -- '^\\h*minlen\\h*=\\h*(1[4-9]|[2-9][0-9]|[1-9][0-9]{2,})\\b' \n/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf \nExample output: \n/etc/security/pwquality.conf.d/50-pwlength.conf:minlen = 14 \nVerify returned value(s) are no less than 14 characters and meet local site policy \nRun the following command to verify that minlen is not set, or is 14 or more characters, \nand conforms to local site policy: \n# grep -Psi -- \n'^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\\nr]+\\h+)?minlen\\h*=\\h*([0-9]|1[0-3])\\b' /etc/pam.d/system-auth \n/etc/pam.d/common-password \nNothing should be returned \nNote: \n\u2022 \nsettings should be configured in only one location for clarity \n\u2022 \nSettings observe an order of precedence: \no module arguments override the settings in the \n/etc/security/pwquality.conf configuration file \no settings in the /etc/security/pwquality.conf configuration file \noverride settings in a .conf file in the \n/etc/security/pwquality.conf.d/ directory \no settings in a .conf file in the /etc/security/pwquality.conf.d/ \ndirectory are read in canonical order, with last read file containing the \nsetting taking precedence \n\u2022 \nIt is recommended that settings be configured in a .conf file in the \n/etc/security/pwquality.conf.d/ directory for clarity, convenience, and \ndurability.",
        "Remediation": "Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ \ndirectory or the file /etc/security/pwquality.conf and add or modify the following \nline to set password length of 14 or more characters. Ensure that password length \nconforms to local site policy: \nExample: \n#!/usr/bin/env bash \n \n{ \n   sed -ri 's/^\\s*minlen\\s*=/# &/' /etc/security/pwquality.conf \n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir \n/etc/security/pwquality.conf.d/ \n   printf '\\n%s' \"minlen = 14\" > /etc/security/pwquality.conf.d/50-\npwlength.conf \n} \nRun the following command: \n# grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?minlen\\b' /usr/share/pam-\nconfigs/* \nEdit any returned files and remove the minlen argument from the pam_pwquality.so \nline(s): \nDefault Value: \nminlen = 8",
        "References": "1. pam_pwquality(8) \n2. CIS Password Policy Guide \n3. NIST SP 800-53 Rev. 5: IA-5(1)",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.3.2.3 Ensure password complexity is configured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Password complexity can be set through: \n\u2022 \nminclass - The minimum number of classes of characters required in a new \npassword. (digits, uppercase, lowercase, others). e.g. minclass = 4 requires \ndigits, uppercase, lower case, and special characters. \n\u2022 \ndcredit - The maximum credit for having digits in the new password. If less than \n0 it is the minimum number of digits in the new password. e.g. dcredit = -1 \nrequires at least one digit \n\u2022 \nucredit - The maximum credit for having uppercase characters in the new \npassword. If less than 0 it is the minimum number of uppercase characters in the \nnew password. e.g. ucredit = -1 requires at least one uppercase character \n\u2022 \nocredit - The maximum credit for having other characters in the new password. \nIf less than 0 it is the minimum number of other characters in the new password. \ne.g. ocredit = -1 requires at least one special character \n\u2022 \nlcredit - The maximum credit for having lowercase characters in the new \npassword. If less than 0 it is the minimum number of lowercase characters in the \nnew password. e.g. lcredit = -1 requires at least one lowercase character",
        "Rationale": "Strong passwords protect systems from being hacked through brute force methods. \nRequiring at least one non-alphabetic character increases the search space beyond \npure dictionary words, which makes the resulting password harder to crack. \nForcing users to choose an excessively complex password, e.g. some combination of \nupper-case, lower-case, numbers, and special characters, has a negative impact. It \nplaces an extra burden on users and many will use predictable patterns (for example, a \ncapital letter in the first position, followed by lowercase letters, then one or two numbers, \nand a \u201cspecial character\u201d at the end). Attackers know this, so dictionary attacks will \noften contain these common patterns and use the most common substitutions like, $ for \ns, @ for a, 1 for l, 0 for o. \nImpact: \nPasswords that are too complex in nature make it harder for users to remember, leading \nto bad practices. In addition, composition requirements provide no defense against \ncommon attack types such as social engineering or insecure storage of passwords",
        "Impact": "",
        "Audit": "Run the following command to verify: \n\u2022 \ndcredit, ucredit, lcredit, and ocredit are not set to a value greater than 0 \n\u2022 \nComplexity conforms to local site policy: \n# grep -Psi -- '^\\h*(minclass|[dulo]credit)\\b' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf \nExample output: \n/etc/security/pwquality.conf.d/50-pwcomplexity.conf:minclass = 3 \n/etc/security/pwquality.conf.d/50-pwcomplexity.conf:ucredit = -2 \n/etc/security/pwquality.conf.d/50-pwcomplexity.conf:lcredit = -2 \n/etc/security/pwquality.conf.d/50-pwcomplexity.conf:dcredit = -1 \n/etc/security/pwquality.conf.d/50-pwcomplexity.conf:ocredit = 0 \nThe example represents a requirement of three character classes, with passwords \nrequiring two upper case, two lower case, and one numeric character. \nRun the following command to verify that module arguments in the configuration file(s) \nare not being overridden by arguments in /etc/pam.d/common-password: \n# grep -Psi -- \n'^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\\nr]+\\h+)?(minclass=\\d*|[dulo]credit=-?\\d*)\\b' /etc/pam.d/common-password \nNothing should be returned \nNote: \n\u2022 \nsettings should be configured in only one location for clarity \n\u2022 \nSettings observe an order of precedence: \no module arguments override the settings in the \n/etc/security/pwquality.conf configuration file \no settings in the /etc/security/pwquality.conf configuration file \noverride settings in a .conf file in the \n/etc/security/pwquality.conf.d/ directory \no settings in a .conf file in the /etc/security/pwquality.conf.d/ \ndirectory are read in canonical order, with last read file containing the \nsetting taking precedence \n\u2022 \nIt is recommended that settings be configured in a .conf file in the \n/etc/security/pwquality.conf.d/ directory for clarity, convenience, and \ndurability.",
        "Remediation": "Run the following command: \n# grep -Pl -- \n'\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?(minclass|[dulo]credit)\\b' \n/usr/share/pam-configs/* \nEdit any returned files and remove the minclass, dcredit, ucredit, lcredit, and \nocredit arguments from the pam_pwquality.so line(s) \nCreate or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ \ndirectory or the file /etc/security/pwquality.conf and add or modify the following \nline(s) to set complexity according to local site policy: \n\u2022 \nminclass = _N_ \n\u2022 \ndcredit = _N_ # Value should be either 0 or a number proceeded by a minus (-\n) symbol \n\u2022 \nucredit = -1 # Value should be either 0 or a number proceeded by a minus (-) \nsymbol \n\u2022 \nocredit = -1 # Value should be either 0 or a number proceeded by a minus (-) \nsymbol \n\u2022 \nlcredit = -1 # Value should be either 0 or a number proceeded by a minus (-) \nsymbol \nExample 1 - Set minclass = 3: \n#!/usr/bin/env bash \n \n{ \n   sed -ri 's/^\\s*minclass\\s*=/# &/' /etc/security/pwquality.conf \n   sed -ri 's/^\\s*[dulo]credit\\s*=/# &/' /etc/security/pwquality.conf \n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir \n/etc/security/pwquality.conf.d/ \n   printf '\\n%s' \"minclass = 3\" > /etc/security/pwquality.conf.d/50-\npwcomplexity.conf \n} \nExample 2 - set dcredit = -1, ucredit = -1, and lcredit = -1: \n#!/usr/bin/env bash \n \n{ \n   sed -ri 's/^\\s*minclass\\s*=/# &/' /etc/security/pwquality.conf \n   sed -ri 's/^\\s*[dulo]credit\\s*=/# &/' /etc/security/pwquality.conf \n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir \n/etc/security/pwquality.conf.d/ \n   printf '%s\\n' \"dcredit = -1\" \"ucredit = -1\" \"lcredit = -1\" > \n/etc/security/pwquality.conf.d/50-pwcomplexity.conf \n} \n \n \n \nDefault Value: \nminclass = 0 \ndcredit = 0 \nucredit = 0 \nocredit = 0 \nlcredit = 0",
        "References": "1. pam_pwquality(8) \n2. PWQUALITY.CONF(5) \n3. https://www.cisecurity.org/insights/white-papers/cis-password-policy-guide \n4. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.3.2.4 Ensure password same consecutive characters is \nconfigured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The pwquality maxrepeat option sets the maximum number of allowed same \nconsecutive characters in a new password.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute-force attacks. \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.",
        "Impact": "",
        "Audit": "Run the following command to verify that the maxrepeat option is set to 3 or less, not 0, \nand follows local site policy: \n# grep -Psi -- '^\\h*maxrepeat\\h*=\\h*[1-3]\\b' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf \nExample output: \n/etc/security/pwquality.conf.d/50-pwrepeat.conf:maxrepeat = 3 \nVerify returned value(s) are 3 or less, not 0, and meet local site policy \nRun the following command to verify that maxrepeat is not set, is 3 or less, not 0, and \nconforms to local site policy: \n# grep -Psi -- \n'^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\\nr]+\\h+)?maxrepeat\\h*=\\h*(0|[4-9]|[1-9][0-9]+)\\b' /etc/pam.d/common-password \nNothing should be returned \nNote: \n\u2022 \nsettings should be configured in only one location for clarity \n\u2022 \nSettings observe an order of precedence: \no module arguments override the settings in the \n/etc/security/pwquality.conf configuration file \no settings in the /etc/security/pwquality.conf configuration file \noverride settings in a .conf file in the \n/etc/security/pwquality.conf.d/ directory \no settings in a .conf file in the /etc/security/pwquality.conf.d/ \ndirectory are read in canonical order, with last read file containing the \nsetting taking precedence \n\u2022 \nIt is recommended that settings be configured in a .conf file in the \n/etc/security/pwquality.conf.d/ directory for clarity, convenience, and \ndurability.",
        "Remediation": "Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ \ndirectory or the file /etc/security/pwquality.conf and add or modify the following \nline to set maxrepeat to 3 or less and not 0. Ensure setting conforms to local site policy: \nExample: \n#!/usr/bin/env bash \n \n{ \n   sed -ri 's/^\\s*maxrepeat\\s*=/# &/' /etc/security/pwquality.conf \n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir \n/etc/security/pwquality.conf.d/ \n   printf '\\n%s' \"maxrepeat = 3\" > /etc/security/pwquality.conf.d/50-\npwrepeat.conf \n} \nRun the following command: \n# grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?maxrepeat\\b' \n/usr/share/pam-configs/* \nEdit any returned files and remove the maxrepeat argument from the \npam_pwquality.so line(s): \nDefault Value: \nmaxrepeat = 0",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.3.2.5 Ensure password maximum sequential characters is \nconfigured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The pwquality maxsequence option sets the maximum length of monotonic character \nsequences in the new password. Examples of such sequence are 12345 or fedcb. The \ncheck is disabled if the value is 0. \nNote: Most such passwords will not pass the simplicity check unless the sequence is \nonly a minor part of the password.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute-force attacks. \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.",
        "Impact": "",
        "Audit": "Run the following command to verify that the maxsequence option is set to 3 or less, not \n0, and follows local site policy: \n# grep -Psi -- '^\\h*maxsequence\\h*=\\h*[1-3]\\b' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf \nExample output: \n/etc/security/pwquality.conf.d/50-pwmaxsequence.conf:maxsequence = 3 \nVerify returned value(s) are 3 or less, not 0, and meet local site policy \nRun the following command to verify that maxsequence is not set, is 3 or less, not 0, and \nconforms to local site policy: \n# grep -Psi -- \n'^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\\nr]+\\h+)?maxsequence\\h*=\\h*(0|[4-9]|[1-9][0-9]+)\\b' /etc/pam.d/common-password \nNothing should be returned \nNote: \n\u2022 \nsettings should be configured in only one location for clarity \n\u2022 \nSettings observe an order of precedence: \no module arguments override the settings in the \n/etc/security/pwquality.conf configuration file \no settings in the /etc/security/pwquality.conf configuration file \noverride settings in a .conf file in the \n/etc/security/pwquality.conf.d/ directory \no settings in a .conf file in the /etc/security/pwquality.conf.d/ \ndirectory are read in canonical order, with last read file containing the \nsetting taking precedence \n\u2022 \nIt is recommended that settings be configured in a .conf file in the \n/etc/security/pwquality.conf.d/ directory for clarity, convenience, and \ndurability.",
        "Remediation": "Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ \ndirectory or the file /etc/security/pwquality.conf and add or modify the following \nline to set maxsequence to 3 or less and not 0. Ensure setting conforms to local site \npolicy: \nExample: \n#!/usr/bin/env bash \n \n{ \n   sed -ri 's/^\\s*maxsequence\\s*=/# &/' /etc/security/pwquality.conf \n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir \n/etc/security/pwquality.conf.d/ \n   printf '\\n%s' \"maxsequence = 3\" > /etc/security/pwquality.conf.d/50-\npwmaxsequence.conf \n} \nRun the following command: \n# grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?maxsequence\\b' \n/usr/share/pam-configs/* \nEdit any returned files and remove the maxsequence argument from the \npam_pwquality.so line(s): \nDefault Value: \nmaxsequence = 0",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.3.2.6 Ensure password dictionary check is enabled \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The pwquality dictcheck option sets whether to check for the words from the \ncracklib dictionary.",
        "Rationale": "If the operating system allows the user to select passwords based on dictionary words, \nthis increases the chances of password compromise by increasing the opportunity for \nsuccessful guesses, and brute-force attacks.",
        "Impact": "",
        "Audit": "Run the following command to verify that the dictcheck option is not set to 0 (disabled) \nin a pwquality configuration file: \n# grep -Psi -- '^\\h*dictcheck\\h*=\\h*0\\b' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf \nNothing should be returned \nRun the following command to verify that the dictcheck option is not set to 0 (disabled) \nas a module argument in a PAM file: \n# grep -Psi -- \n'^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\\nr]+\\h+)?dictcheck\\h*=\\h*0\\b' /etc/pam.d/common-password \nNothing should be returned \nNote: \n\u2022 \nSettings observe an order of precedence: \no module arguments override the settings in the \n/etc/security/pwquality.conf configuration file \no settings in the /etc/security/pwquality.conf configuration file \noverride settings in a .conf file in the \n/etc/security/pwquality.conf.d/ directory \no settings in a .conf file in the /etc/security/pwquality.conf.d/ \ndirectory are read in canonical order, with last read file containing the \nsetting taking precedence \n\u2022 \nIt is recommended that settings be configured in a .conf file in the \n/etc/security/pwquality.conf.d/ directory for clarity, convenience, and \ndurability.",
        "Remediation": "Edit any file ending in .conf in the /etc/security/pwquality.conf.d/ directory \nand/or the file /etc/security/pwquality.conf and comment out or remove any \ninstance of dictcheck = 0: \nExample: \n# sed -ri 's/^\\s*dictcheck\\s*=/# &/' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf \nRun the following command: \n# grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?dictcheck\\b' \n/usr/share/pam-configs/* \nEdit any returned files and remove the dictcheck argument from the \npam_pwquality.so line(s) \n \nDefault Value: \ndictcheck = 1",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.3.2.7 Ensure password quality checking is enforced \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The pam_pwquality module can be configured to either reject a password if it fails the \nchecks, or only print a warning. \nThis is configured by setting the enforcing=<N> argument. If nonzero, a password will \nbe rejected if it fails the checks, otherwise only a warning message will be provided. \nThis setting applies only to the pam_pwquality module and possibly other applications \nthat explicitly change their behavior based on it. It does not affect pwmake(1) and \npwscore(1).",
        "Rationale": "Strong passwords help protect systems from password attacks. Types of password \nattacks include dictionary attacks, which attempt to use common words and phrases, \nand brute force attacks, which try every possible combination of characters. Also \nattackers may try to obtain the account database so they can use tools to discover the \naccounts and passwords.",
        "Impact": "",
        "Audit": "Run the following command to verify that enforcing=0 has not been set in a \npwquality configuration file: \n# grep -PHsi -- '^\\h*enforcing\\h*=\\h*0\\b' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf \nNothing should be returned \nRun the following command to verify that the enforcing=0 argument has not been set \non the pam_pwquality module: \n# grep -PHsi -- \n'^\\h*password\\h+[^#\\n\\r]+\\h+pam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?enforcing=0\\b' \n/etc/pam.d/common-password \nNothing should be returned",
        "Remediation": "Run the following command: \n# grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?enforcing=0\\b' \n/usr/share/pam-configs/* \nEdit any returned files and remove the enforcing=0 argument from the \npam_pwquality.so line(s) \nEdit /etc/security/pwquality.conf and all files ending in .conf in the \n/etc/security/pwquality.conf.d/ directory and remove or comment out any line \ncontaining the enforcing = 0 argument: \nExample: \n# sed -ri 's/^\\s*enforcing\\s*=\\s*0/# &/' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf \nDefault Value: \nenforcing=1",
        "References": "1. pam_pwquality(8) \n2. PWQUALITY.CONF(5) \n3. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.3.3.2.8 Ensure password quality is enforced for the root user \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "If the pwquality enforce_for_root option is enabled, the module will return error on \nfailed check even if the user changing the password is root. \nThis option is off by default which means that just the message about the failed check is \nprinted but root can change the password anyway. \nNote: The root is not asked for an old password so the checks that compare the old and \nnew password are not performed.",
        "Rationale": "Use of a complex password helps to increase the time and resources required to \ncompromise the password. Password complexity, or strength, is a measure of the \neffectiveness of a password in resisting attempts at guessing and brute-force attacks. \nPassword complexity is one factor of several that determines how long it takes to crack \na password. The more complex the password, the greater the number of possible \ncombinations that need to be tested before the password is compromised.",
        "Impact": "",
        "Audit": "Run the following command to verify that the enforce_for_root option is enabled in a \npwquality configuration file: \n# grep -Psi -- '^\\h*enforce_for_root\\b' /etc/security/pwquality.conf \n/etc/security/pwquality.conf.d/*.conf \nExample output: \n/etc/security/pwquality.conf.d/50-pwroot.conf:enforce_for_root \nNote: \n\u2022 \nSettings observe an order of precedence: \no module arguments override the settings in the \n/etc/security/pwquality.conf configuration file \no settings in the /etc/security/pwquality.conf configuration file \noverride settings in a .conf file in the \n/etc/security/pwquality.conf.d/ directory \no settings in a .conf file in the /etc/security/pwquality.conf.d/ \ndirectory are read in canonical order, with last read file containing the \nsetting taking precedence \n\u2022 \nIt is recommended that settings be configured in a .conf file in the \n/etc/security/pwquality.conf.d/ directory for clarity, convenience, and \ndurability.",
        "Remediation": "Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or \nin /etc/security/pwquality.conf: \nExample: \n#!/urs/bin/env bash \n \n{ \n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir \n/etc/security/pwquality.conf.d/ \n   printf '\\n%s\\n' \"enforce_for_root\" > /etc/security/pwquality.conf.d/50-\npwroot.conf \n} \nDefault Value: \ndisabled",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.3.3.3.1 Ensure password history remember is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/security/opasswd file stores the users' old passwords and can be checked \nto ensure that users are not recycling recent passwords. The number of passwords \nremembered is set via the remember argument value in set for the pam_pwhistory \nmodule. \n\u2022 \nremember=<N> - <N> is the number of old passwords to remember",
        "Rationale": "Requiring users not to reuse their passwords make it less likely that an attacker will be \nable to guess the password or use a compromised password. \nNote: These change only apply to accounts configured on the local system.",
        "Impact": "",
        "Audit": "Run the following command and verify: \n\u2022 \nThe pwhistory line in /etc/pam.d/common-password includes remember=<N> \n\u2022 \nThe value of <N> is 24 or more \n\u2022 \nThe value meets local site policy \n# grep -Psi -- \n'^\\h*password\\h+[^#\\n\\r]+\\h+pam_pwhistory\\.so\\h+([^#\\n\\r]+\\h+)?remember=\\d+\\b\n' /etc/pam.d/common-password \nOutput should be similar to: \npassword   requisite   pam_pwhistory.so remember=24 enforce_for_root \ntry_first_pass use_authtok",
        "Remediation": "Run the following command: \n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if \n(/pam_pwhistory\\.so/) print FILENAME}' /usr/share/pam-configs/* \nEdit any returned files and edit or add the remember= argument, with a value of 24 or \nmore, that meets local site policy to the pam_pwhistory line in the Password section: \nExample File: \nName: pwhistory password history checking \nDefault: yes \nPriority: 1024 \nPassword-Type: Primary \nPassword: \n   requisite   pam_pwhistory.so remember=24 enforce_for_root try_first_pass \nuse_authtok # <- **ensure line includes remember=<N>** \nRun the following command to update the files in the /etc/pam.d/ directory: \n# pam-auth-update --enable <MODIFIED_PROFILE_NAME> \nExample: \n# pam-auth-update --enable pwhistory",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5(1)",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.002, T1078.003, \nT1078.004, T1110, \nT1110.004"
    },
    {
        "Title": "5.3.3.3.2 Ensure password history is enforced for the root user \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "If the pwhistory enforce_for_root option is enabled, the module will enforce \npassword history for the root user as well",
        "Rationale": "Requiring users not to reuse their passwords make it less likely that an attacker will be \nable to guess the password or use a compromised password \nNote: These change only apply to accounts configured on the local system.",
        "Impact": "",
        "Audit": "Run the following command to verify that the enforce_for_root argument is exists on \nthe pwhistory line in /etc/pam.d/common-password: \n# grep -Psi -- \n'^\\h*password\\h+[^#\\n\\r]+\\h+pam_pwhistory\\.so\\h+([^#\\n\\r]+\\h+)?enforce_for_ro\not\\b' /etc/pam.d/common-password \nOutput should be similar to: \npassword   requisite   pam_pwhistory.so remember=24 enforce_for_root \ntry_first_pass use_authtok",
        "Remediation": "Run the following command: \n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if \n(/pam_pwhistory\\.so/) print FILENAME}' /usr/share/pam-configs/* \nEdit any returned files and add the enforce_for_root argument to the \npam_pwhistory line in the Password section: \nExample File: \nName: pwhistory password history checking \nDefault: yes \nPriority: 1024 \nPassword-Type: Primary \nPassword: \n   requisite   pam_pwhistory.so remember=24 enforce_for_root try_first_pass \nuse_authtok # <- **ensure line includes enforce_for_root** \nRun the following command to update the files in the /etc/pam.d/ directory: \n# pam-auth-update --enable <MODIFIED_PROFILE_NAME> \nExample: \n# pam-auth-update --enable pwhistory \nDefault Value: \ndisabled",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1110, T1110.001, \nT1110.002, T1110.003, \nT1178.001, T1178.002, \nT1178.003, T1178.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.3.3.3.3 Ensure pam_pwhistory includes use_authtok \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "use_authtok - When password changing enforce the module to set the new password \nto the one provided by a previously stacked password module",
        "Rationale": "use_authtok allows multiple pam modules to confirm a new password before it is \naccepted.",
        "Impact": "",
        "Audit": "Run the following command to verify that the use_authtok argument exists on the \npwhistory line in /etc/pam.d/common-password: \n# grep -Psi -- \n'^\\h*password\\h+[^#\\n\\r]+\\h+pam_pwhistory\\.so\\h+([^#\\n\\r]+\\h+)?use_authtok\\b' \n/etc/pam.d/common-password \nOutput should be similar to: \npassword   requisite   pam_pwhistory.so remember=24 enforce_for_root \ntry_first_pass use_authtok",
        "Remediation": "Run the following command: \n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if \n(/pam_pwhistory\\.so/) print FILENAME}' /usr/share/pam-configs/* \nEdit any returned files and add the use_authtok argument to the pam_pwhistory line \nin the Password section: \nExample File: \nName: pwhistory password history checking \nDefault: yes \nPriority: 1024 \nPassword-Type: Primary \nPassword: \n   requisite   pam_pwhistory.so remember=24 enforce_for_root try_first_pass \nuse_authtok # <- **ensure line includes use_authtok** \nRun the following command to update the files in the /etc/pam.d/ directory: \n# pam-auth-update --enable <MODIFIED_PROFILE_NAME> \nExample: \n# pam-auth-update --enable pwhistory",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv7 \n16.4 Encrypt or Hash all Authentication Credentials \n \nEncrypt or hash with a salt all authentication credentials when stored. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1110, \nT1110.002 \nTA0006 \nM1041"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.3.3.4.1 Ensure pam_unix does not include nullok (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The nullok argument overrides the default action of pam_unix.so to not permit the \nuser access to a service if their official password is blank.",
        "Rationale": "Using a strong password is essential to helping protect personal and sensitive \ninformation from unauthorized access",
        "Impact": "",
        "Audit": "Run the following command to verify that the nullok argument is not set on the \npam_unix.so module: \n# grep -PH -- '^\\h*^\\h*[^#\\n\\r]+\\h+pam_unix\\.so\\b' /etc/pam.d/common-\n{password,auth,account,session,session-noninteractive} | grep -Pv -- \n'\\bnullok\\b' \nOutput should be similar to: \n/etc/pam.d/common-password:password   [success=1 default=ignore]   \npam_unix.so obscure use_authtok try_first_pass yescrypt \n/etc/pam.d/common-auth:auth   [success=2 default=ignore]   pam_unix.so \ntry_first_pass \n/etc/pam.d/common-account:account   [success=1 new_authtok_reqd=done \ndefault=ignore]   pam_unix.so \n/etc/pam.d/common-session:session   required   pam_unix.so \n/etc/pam.d/common-session-noninteractive:session   required   pam_unix.so",
        "Remediation": "Run the following command: \n# grep -PH -- '^\\h*([^#\\n\\r]+\\h+)?pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?nullok\\b' \n/usr/share/pam-configs/* \nEdit any files returned and remove the nullok argument for the pam_unix lines \nExample File: \nName: Unix authentication \nDefault: yes \nPriority: 256 \nAuth-Type: Primary \nAuth: \n        [success=end default=ignore]    pam_unix.so try_first_pass # <- \n**ensure line does not include nullok nullok** \nAuth-Initial: \n        [success=end default=ignore]    pam_unix.so # <- **ensure line does \nnot include nullok nullok** \nAccount-Type: Primary \nAccount: \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so \nAccount-Initial: \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so \nSession-Type: Additional \nSession: \n        required        pam_unix.so \nSession-Initial: \n        required        pam_unix.so \nPassword-Type: Primary \nPassword: \n        [success=end default=ignore]    pam_unix.so obscure use_authtok \ntry_first_pass yescrypt \nPassword-Initial: \n        [success=end default=ignore]    pam_unix.so obscure yescrypt \nRun the following command to update the files in the /etc/pam.d/ directory: \n# pam-auth-update --enable <EDITED_PROFILE_NAME> \nExample: \n# pam-auth-update --enable unix \nNote: If custom files are being used, the corresponding files in /etc/pam.d/ would \nneed to be edited directly, and the pam-auth-update --enable \n<EDITED_PROFILE_NAME> command skipped",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1110, \nT1110.002 \nTA0006 \nM1041"
    },
    {
        "Title": "5.3.3.4.2 Ensure pam_unix does not include remember \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The remember=n argument saves the last n passwords for each user in \n/etc/security/opasswd in order to force password change history and keep the user \nfrom alternating between the same password too frequently. The MD5 password hash \nalgorithm is used for storing the old passwords. Instead of this option the \npam_pwhistory module should be used. The pam_pwhistory module saves the last n \npasswords for each user in /etc/security/opasswd using the password hash \nalgorithm set on the pam_unix module. This allows for the yescrypt or sha512 hash \nalgorithm to be used.",
        "Rationale": "The remember=n argument should be removed to ensure a strong password hashing \nalgorithm is being used. A stronger hash provides additional protection to the system by \nincreasing the level of effort needed for an attacker to successfully determine local \nuser's old passwords stored in /etc/security/opasswd.",
        "Impact": "",
        "Audit": "Run the following command to verify that the remember argument is not set on the \npam_unix.so module: \n# grep -PH -- '^\\h*^\\h*[^#\\n\\r]+\\h+pam_unix\\.so\\b' /etc/pam.d/common-\n{password,auth,account,session,session-noninteractive} | grep -Pv -- \n'\\bremember=\\d+\\b' \nOutput should be similar to: \n/etc/pam.d/common-password:password   [success=1 default=ignore]   \npam_unix.so obscure yescrypt \n/etc/pam.d/common-auth:auth   [success=1 default=ignore]   pam_unix.so \n/etc/pam.d/common-account:account   [success=1 new_authtok_reqd=done \ndefault=ignore]   pam_unix.so \n/etc/pam.d/common-session:session   required   pam_unix.so \n/etc/pam.d/common-session-noninteractive:session   required   pam_unix.so",
        "Remediation": "Run the following command: \n# grep -PH -- '^\\h*([^#\\n\\r]+\\h+)?pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?remember\\b' \n/usr/share/pam-configs/* \nEdit any files returned and remove the remember=_<N>_ argument for the pam_unix \nlines \nExample output: \n[success=end default=ignore]   pam_unix.so obscure use_authtok try_first_pass \nyescrypt remember=5 # **<- remove remember=<N>** \n[success=end default=ignore]   pam_unix.so obscure yescrypt remember=5 # **<- \nremove remember=<N>** \nRun the following command to update the files in the /etc/pam.d/ directory: \n# pam-auth-update --enable <EDITED_PROFILE_NAME> \nExample: \n# pam-auth-update --enable unix \nNote: If custom files are being used, the corresponding files in /etc/pam.d/ would \nneed to be edited directly, and the pam-auth-update --enable \n<EDITED_PROFILE_NAME> command skipped",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1110, \nT1110.002 \nTA0006 \nM1041"
    },
    {
        "Title": "5.3.3.4.3 Ensure pam_unix includes a strong password hashing \nalgorithm (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "A cryptographic hash function converts an arbitrary-length input into a fixed length \noutput. Password hashing performs a one-way transformation of a password, turning \nthe password into another string, called the hashed password. \nThe pam_unix module can be configured to use one of the following hashing algorithms \nfor user's passwords: \n\u2022 \nmd5 - When a user changes their password next, encrypt it with the MD5 \nalgorithm. \n\u2022 \nbigcrypt - When a user changes their password next, encrypt it with the DEC C2 \nalgorithm. \n\u2022 \nsha256 - When a user changes their password next, encrypt it with the SHA256 \nalgorithm. The SHA256 algorithm must be supported by the crypt(3) function. \n\u2022 \nsha512 - When a user changes their password next, encrypt it with the SHA512 \nalgorithm. The SHA512 algorithm must be supported by the crypt(3) function. \n\u2022 \nblowfish - When a user changes their password next, encrypt it with the \nblowfish algorithm. The blowfish algorithm must be supported by the crypt(3) \nfunction. \n\u2022 \ngost_yescrypt - When a user changes their password next, encrypt it with the \ngost-yescrypt algorithm. The gost-yescrypt algorithm must be supported by \nthe crypt(3) function. \n\u2022 \nyescrypt - When a user changes their password next, encrypt it with the \nyescrypt algorithm. The yescrypt algorithm must be supported by the crypt(3) \nfunction.",
        "Rationale": "The SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms \nused by Linux for password hash generation. A stronger hash provides additional \nprotection to the system by increasing the level of effort needed for an attacker to \nsuccessfully determine local user passwords. \nNote: These changes only apply to the local system.",
        "Impact": "",
        "Audit": "Run the following command to verify that a strong password hashing algorithm is set on \nthe pam_unix.so module: \n# grep -PH -- \n'^\\h*password\\h+([^#\\n\\r]+)\\h+pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?(sha512|yescrypt)\n\\b' /etc/pam.d/common-password \nOutput should be similar to: \n/etc/pam.d/common-password:password   [success=1 default=ignore]   \npam_unix.so obscure use_authtok try_first_pass yescrypt \nVerify that the line(s) include either sha512 - OR - yescrypt",
        "Remediation": "Run the following command: \n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if \n(/pam_unix\\.so/) print FILENAME}' /usr/share/pam-configs/* \nEdit any returned files and edit or add a strong hashing algorithm, either sha512 or \nyescrypt, that meets local site policy to the pam_unix lines in the Password section: \nExample File: \nName: Unix authentication \nDefault: yes \nPriority: 256 \nAuth-Type: Primary # <- Start of \"Auth\" section \nAuth: \n        [success=end default=ignore]    pam_unix.so try_first_pass \nAuth-Initial: \n        [success=end default=ignore]    pam_unix.so \nAccount-Type: Primary # <- Start of \"Account\" section \nAccount: \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so \nAccount-Initial: \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so \nSession-Type: Additional  # <- Start of \"Session\" section \nSession: \n        required        pam_unix.so \nSession-Initial: \n        required        pam_unix.so \nPassword-Type: Primary # <- Start of \"Password\" section \nPassword: \n        [success=end default=ignore]    pam_unix.so obscure use_authtok \ntry_first_pass yescrypt # <- **ensure hashing algorithm is either sha512 or \nyescrypt** \nPassword-Initial: \n        [success=end default=ignore]    pam_unix.so obscure yescrypt # <- \n**ensure hashing algorithm is either sha512 or yescrypt** \nRun the following command to update the files in the /etc/pam.d/ directory: \n \n# pam-auth-update --enable <MODIFIED_PROFILE_NAME> \nExample: \n# pam-auth-update --enable unix",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5 \nAdditional Information: \nThe following command may be used to expire all non-system user ID's immediately \nand force them to change their passwords on next login. Any system accounts that \nneed to be expired should be carefully done separately by the system administrator to \nprevent any potential problems. \n# awk -F: '( $3<'\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' && $1 != \n\"nfsnobody\" ) { print $1 }' /etc/passwd | xargs -n 1 chage -d 0",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv7 \n16.4 Encrypt or Hash all Authentication Credentials \n \nEncrypt or hash with a salt all authentication credentials when stored. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1110, \nT1110.002 \nTA0006 \nM1041"
    },
    {
        "Title": "5.3.3.4.4 Ensure pam_unix includes use_authtok (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "use_authtok - When password changing enforce the module to set the new password \nto the one provided by a previously stacked password module",
        "Rationale": "use_authtok allows multiple pam modules to confirm a new password before it is \naccepted.",
        "Impact": "",
        "Audit": "Run the following command to verify that use_authtok is set on the pam_unix.so \nmodule lines in the password stack: \n# grep -PH -- \n'^\\h*password\\h+([^#\\n\\r]+)\\h+pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?use_authtok\\b' \n/etc/pam.d/common-password \nOutput should be similar to: \n/etc/pam.d/common-password:password   [success=1 default=ignore]   \npam_unix.so obscure use_authtok try_first_pass yescrypt \nVerify that the line(s) include use_authtok",
        "Remediation": "Run the following command: \n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if \n(/pam_unix\\.so/) print FILENAME}' /usr/share/pam-configs/* \nEdit any returned files add use_authtok to the pam_unix line in the Password section \nunder Password: subsection: \nNote: The if the file's Password section includes a Password-Initial: subsection, \nuse_authtok should not be added to the pam_unix line in the Password-Initial: \nsubsection \nExample File: \nName: Unix authentication \nDefault: yes \nPriority: 256 \nAuth-Type: Primary # <- Start of \"Auth\" section \nAuth: \n        [success=end default=ignore]    pam_unix.so try_first_pass \nAuth-Initial: \n        [success=end default=ignore]    pam_unix.so \nAccount-Type: Primary # <- Start of \"Account\" section \nAccount: \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so \nAccount-Initial: \n        [success=end new_authtok_reqd=done default=ignore]      pam_unix.so \nSession-Type: Additional  # <- Start of \"Session\" section \nSession: \n        required        pam_unix.so \nSession-Initial: \n        required        pam_unix.so \nPassword-Type: Primary # <- Start of \"Password\" section \nPassword: \n        [success=end default=ignore]    pam_unix.so obscure use_authtok \ntry_first_pass yescrypt # <- **ensure line includes use_authtok** \nPassword-Initial: \n        [success=end default=ignore]    pam_unix.so obscure yescrypt # <- \n**Password-Initial: subsection does not include use_authtok \nRun the following command to update the files in the /etc/pam.d/ directory: \n# pam-auth-update --enable <MODIFIED_PROFILE_NAME> \nExample: \n# pam-auth-update --enable unix",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv7 \n16.4 Encrypt or Hash all Authentication Credentials \n \nEncrypt or hash with a salt all authentication credentials when stored. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1110, \nT1110.002 \nTA0006 \nM1041"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.4.1.1 Ensure password expiration is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force \npasswords to expire once they reach a defined age. \nPASS_MAX_DAYS <N> - The maximum number of days a password may be used. If the \npassword is older than this, a password change will be forced. If not specified, -1 will be \nassumed (which disables the restriction).",
        "Rationale": "The window of opportunity for an attacker to leverage compromised credentials or \nsuccessfully compromise credentials via an online brute force attack is limited by the \nage of the password. Therefore, reducing the maximum age of a password also reduces \nan attacker's window of opportunity. \nWe recommend a yearly password change. This is primarily because for all their good \nintentions users will share credentials across accounts. Therefore, even if a breach is \npublicly identified, the user may not see this notification, or forget they have an account \non that site. This could leave a shared credential vulnerable indefinitely. Having an \norganizational policy of a 1-year (annual) password expiration is a reasonable \ncompromise to mitigate this with minimal user burden. \n \n \n \nImpact: \nThe password expiration must be greater than the minimum days between password \nchanges or users will be unable to change their password. \nExcessive password expiration requirements do more harm than good, because these \nrequirements make users select predictable passwords, composed of sequential words \nand numbers that are closely related to each other. In these cases, the next password \ncan be predicted based on the previous one (incrementing a number used in the \npassword for example). Also, password expiration requirements offer no containment \nbenefits because attackers will often use credentials as soon as they compromise them. \nInstead, immediate password changes should be based on key events including, but not \nlimited to: \n\u2022 \nIndication of compromise \n\u2022 \nChange of user roles \n\u2022 \nWhen a user leaves the organization. \nNot only does changing passwords every few weeks or months frustrate the user, but \nit\u2019s also been suggested that it does more harm than good, because it could lead to bad \npractices by the user such as adding a character to the end of their existing password.",
        "Impact": "",
        "Audit": "Run the following command and verify PASS_MAX_DAYS is set to 365 days or less and \nconforms to local site policy: \n# grep -Pi -- '^\\h*PASS_MAX_DAYS\\h+\\d+\\b' /etc/login.defs \nExample output: \nPASS_MAX_DAYS 365 \nRun the following command to verify all /etc/shadow passwords PASS_MAX_DAYS: \n\u2022 \nis greater than 0 days \n\u2022 \nis less than or equal to 365 days \n\u2022 \nconforms to local site policy \n# awk -F: '($2~/^\\$.+\\$/) {if($5 > 365 || $5 < 1)print \"User: \" $1 \" \nPASS_MAX_DAYS: \" $5}' /etc/shadow \nNothing should be returned",
        "Remediation": "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs : \nPASS_MAX_DAYS 365 \nModify user parameters for all users with a password set to match: \n# chage --maxdays 365 <user> \nEdit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows \nlocal site policy: \nExample: \nPASS_MAX_DAYS 365 \nRun the following command to modify user parameters for all users with a password set \nto a maximum age no greater than 365 or less than 1 that follows local site policy: \n# chage --maxdays <N> <user> \nExample: \n# awk -F: '($2~/^\\$.+\\$/) {if($5 > 365 || $5 < 1)system (\"chage --maxdays 365 \n\" $1)}' /etc/shadow \nWarning: If a password has been set at system install or kickstart, the last change \ndate field is not set, In this case, setting PASS_MAX_DAYS will immediately expire the \npassword. One possible solution is to populate the last change date field through a \ncommand like: chage -d \"$(date +%Y-%m-%d)\" root \nDefault Value: \nPASS_MAX_DAYS 99999",
        "References": "1. CIS Password Policy Guide \n2. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nA value of -1 will disable password expiration.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.002, T1078.003, \nT1078.004, T1110, \nT1110.001, T1110.002, \nT1110.003, T1110.004"
    },
    {
        "Title": "5.4.1.2 Ensure minimum password days is configured (Manual)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "PASS_MIN_DAYS <N> - The minimum number of days allowed between password \nchanges. Any password changes attempted sooner than this will be rejected. If not \nspecified, 0 will be assumed (which disables the restriction).",
        "Rationale": "Users may have favorite passwords that they like to use because they are easy to \nremember, and they believe that their password choice is secure from compromise. \nUnfortunately, passwords are compromised and if an attacker is targeting a specific \nindividual user account, with foreknowledge of data about that user, reuse of old, \npotentially compromised passwords, may cause a security breach. \nBy restricting the frequency of password changes, an administrator can prevent users \nfrom repeatedly changing their password in an attempt to circumvent password reuse \ncontrols \nImpact: \nIf a user\u2019s password is set by other personnel as a procedure in dealing with a lost or \nexpired password, the user should be forced to update this \"set\" password with their \nown password. e.g. force \"change at next logon\". \nIf it is not possible to have a user set their own password immediately, and this \nrecommendation or local site procedure may cause a user to continue using a third \nparty generated password, PASS_MIN_DAYS for the effected user should be temporally \nchanged to 0, to allow a user to change their password immediately. \nFor applications where the user is not using the password at console, the ability to \n\"change at next logon\" may be limited. This may cause a user to continue to use a \npassword created by other personnel.",
        "Impact": "",
        "Audit": "Run the following command to verify that PASS_MIN_DAYS is set to a value greater than \n0and follows local site policy: \n# grep -Pi -- '^\\h*PASS_MIN_DAYS\\h+\\d+\\b' /etc/login.defs \nExample output: \nPASS_MIN_DAYS   1 \nRun the following command to verify all passwords have a PASS_MIN_DAYS greater than \n0: \n# awk -F: '($2~/^\\$.+\\$/) {if($4 < 1)print \"User: \" $1 \" PASS_MIN_DAYS: \" \n$4}' /etc/shadow \nNothing should be returned",
        "Remediation": "Edit /etc/login.defs and set PASS_MIN_DAYS to a value greater than 0 that follows \nlocal site policy: \nExample: \nPASS_MIN_DAYS 1 \nRun the following command to modify user parameters for all users with a password set \nto a minimum days greater than zero that follows local site policy: \n# chage --mindays <N> <user> \nExample: \n# awk -F: '($2~/^\\$.+\\$/) {if($4 < 1)system (\"chage --mindays 1 \" $1)}' \n/etc/shadow \nDefault Value: \nPASS_MIN_DAYS 0",
        "References": "1. CIS Password Policy Guide",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.002, T1078.003, \nT1078.004, T1110, \nT1110.004 \nTA0006 \nM1027"
    },
    {
        "Title": "5.4.1.3 Ensure password expiration warning days is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify \nusers that their password will expire in a defined number of days. \nPASS_WARN_AGE <N> - The number of days warning given before a password expires. A \nzero means warning is given only upon the day of expiration, a negative value means \nno warning is given. If not specified, no warning will be provided.",
        "Rationale": "Providing an advance warning that a password will be expiring gives users time to think \nof a secure password. Users caught unaware may choose a simple password or write it \ndown where it may be discovered.",
        "Impact": "",
        "Audit": "Run the following command and verify PASS_WARN_AGE is 7 or more and follows local \nsite policy: \n# grep -Pi -- '^\\h*PASS_WARN_AGE\\h+\\d+\\b' /etc/login.defs \nExample output: \nPASS_WARN_AGE 7 \nRun the following command to verify all passwords have a PASS_WARN_AGE of 7 or \nmore: \n# awk -F: '($2~/^\\$.+\\$/) {if($6 < 7)print \"User: \" $1 \" PASS_WARN_AGE: \" \n$6}' /etc/shadow \nNothing should be returned",
        "Remediation": "Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows \nlocal site policy: \nExample: \nPASS_WARN_AGE 7 \nRun the following command to modify user parameters for all users with a password set \nto a minimum warning to 7 or more days that follows local site policy: \n# chage --warndays <N> <user> \nExample: \n# awk -F: '($2~/^\\$.+\\$/) {if($6 < 7)system (\"chage --warndays 7 \" $1)}' \n/etc/shadow \nDefault Value: \nPASS_WARN_AGE 7",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078 \nTA0006 \nM1027"
    },
    {
        "Title": "5.4.1.4 Ensure strong password hashing algorithm is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "A cryptographic hash function converts an arbitrary-length input into a fixed length \noutput. Password hashing performs a one-way transformation of a password, turning \nthe password into another string, called the hashed password. \nENCRYPT_METHOD (string) - This defines the system default encryption algorithm for \nencrypting passwords (if no algorithm are specified on the command line). It can take \none of these values: \n\u2022 \nMD5 - MD5-based algorithm will be used for encrypting password \n\u2022 \nSHA256 - SHA256-based algorithm will be used for encrypting password \n\u2022 \nSHA512 - SHA512-based algorithm will be used for encrypting password \n\u2022 \nBCRYPT - BCRYPT-based algorithm will be used for encrypting password \n\u2022 \nYESCRYPT - YESCRYPT-based algorithm will be used for encrypting password \n\u2022 \nDES - DES-based algorithm will be used for encrypting password (default) \nNote: \n\u2022 \nThis parameter overrides the deprecated MD5_CRYPT_ENAB variable. \n\u2022 \nThis parameter will only affect the generation of group passwords. \n\u2022 \nThe generation of user passwords is done by PAM and subject to the PAM \nconfiguration. \n\u2022 \nIt is recommended to set this variable consistently with the PAM configuration.",
        "Rationale": "The SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms \nused by Linux for password hash generation. A stronger hash provides additional \nprotection to the system by increasing the level of effort needed for an attacker to \nsuccessfully determine local group passwords.",
        "Impact": "",
        "Audit": "Run the following command to verify the hashing algorithm is sha512 or yescrypt in \n/etc/login.defs: \n# grep -Pi -- '^\\h*ENCRYPT_METHOD\\h+(SHA512|yescrypt)\\b' /etc/login.defs \nExample output: \nENCRYPT_METHOD SHA512 \n - OR - \nENCRYPT_METHOD  YESCRYPT",
        "Remediation": "Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT: \nENCRYPT_METHOD <HASHING_ALGORITHM> \nExample: \nENCRYPT_METHOD YESCRYPT \nNote: \n\u2022 \nThis only effects local groups' passwords created after updating the file to use \nsha512 or yescrypt. \n\u2022 \nIf it is determined that the password algorithm being used is not sha512 or \nyescrypt, once it is changed, it is recommended that all group passwords be \nupdated to use the stronger hashing algorithm. \n\u2022 \nIt is recommended that the chosen hashing algorithm is consistent across \n/etc/login.defs and the PAM configuration \nDefault Value: \nENCRYPT_METHOD SHA512",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv7 \n16.4 Encrypt or Hash all Authentication Credentials \n \nEncrypt or hash with a salt all authentication credentials when stored. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1110, \nT1110.002 \nTA0006 \nM1041"
    },
    {
        "Title": "5.4.1.5 Ensure inactive password lock is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "User accounts that have been inactive for over a given period of time can be \nautomatically disabled. \nINACTIVE - Defines the number of days after the password exceeded its maximum age \nwhere the user is expected to replace this password. \nThe value is stored in the shadow password file. An input of 0 will disable an expired \npassword with no delay. An input of -1 will blank the respective field in the shadow \npassword file.",
        "Rationale": "Inactive accounts pose a threat to system security since the users are not logging in to \nnotice failed login attempts or other anomalies.",
        "Impact": "",
        "Audit": "Run the following command and verify INACTIVE conforms to site policy (no more than \n45 days): \n# useradd -D | grep INACTIVE \n \nINACTIVE=45 \nVerify all users with a password have Password inactive no more than 45 days after \npassword expires \nVerify all users with a password have Password inactive no more than 45 days after \npassword expires: Run the following command and Review list of users and INACTIVE \nto verify that all users INACTIVE conforms to site policy (no more than 45 days): \n# awk -F: '($2~/^\\$.+\\$/) {if($7 > 45 || $7 < 0)print \"User: \" $1 \" INACTIVE: \n\" $7}' /etc/shadow \nNothing should be returned",
        "Remediation": "Run the following command to set the default password inactivity period to 45 days or \nless that meets local site policy: \n# useradd -D -f <N> \nExample: \n# useradd -D -f 45 \nRun the following command to modify user parameters for all users with a password set \nto a inactive age of 45 days or less that follows local site policy: \n# chage --inactive <N> <user> \nExample: \n# awk -F: '($2~/^\\$.+\\$/) {if($7 > 45 || $7 < 0)system (\"chage --inactive 45 \n\" $1)}' /etc/shadow \nDefault Value: \nINACTIVE=-1",
        "References": "1. CIS Password Policy Guide \nAdditional Information: \nA value of -1 would disable this setting.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.002, \nT1078.003 \nTA0001 \nM1027"
    },
    {
        "Title": "5.4.1.6 Ensure all users last password change date is in the past \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "All users should have a password change date in the past.",
        "Rationale": "If a user's recorded password change date is in the future, then they could bypass any \nset password expiration.",
        "Impact": "",
        "Audit": "Run the following command and verify nothing is returned \n{ \n   while IFS= read -r l_user; do \n      l_change=$(date -d \"$(chage --list $l_user | grep '^Last password \nchange' | cut -d: -f2 | grep -v 'never$')\" +%s) \n      if [[ \"$l_change\" -gt \"$(date +%s)\" ]]; then \n         echo \"User: \\\"$l_user\\\" last password change was \\\"$(chage --list \n$l_user | grep '^Last password change' | cut -d: -f2)\\\"\" \n      fi \n   done < <(awk -F: '$2~/^\\$.+\\$/{print $1}' /etc/shadow) \n}",
        "Remediation": "Investigate any users with a password change date in the future and correct them. \nLocking the account, expiring the password, or resetting the password manually may be \nappropriate.",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.002, T1078.003, \nT1078.004, T1110, \nT1110.001, T1110.002, \nT1110.003, T1110.004"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.4.2.1 Ensure root is the only UID 0 account (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Any account with UID 0 has superuser privileges on the system.",
        "Rationale": "This access must be limited to only the default root account and only from the system \nconsole. Administrative access must be through an unprivileged account using an \napproved mechanism as noted in Item 5.6 Ensure access to the su command is \nrestricted.",
        "Impact": "",
        "Audit": "Run the following command and verify that only \"root\" is returned: \n# awk -F: '($3 == 0) { print $1 }' /etc/passwd \n \nroot",
        "Remediation": "Run the following command to change the root account UID to 0: \n# usermod -u 0 root \nModify any users other than root with UID 0 and assign them a new UID.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.000 \nTA0001 \nM1026",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.4.2.2 Ensure root is the only GID 0 account (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The usermod command can be used to specify which group the root account belongs \nto. This affects permissions of files that are created by the root account.",
        "Rationale": "Using GID 0 for the root account helps prevent root -owned files from accidentally \nbecoming accessible to non-privileged users.",
        "Impact": "",
        "Audit": "Run the following command to verify the root user's primary GID is 0, and no other \nuser's have GID 0 as their primary GID: \n# awk -F: '($1 !~ /^(sync|shutdown|halt|operator)/ && $4==\"0\") {print \n$1\":\"$4}' /etc/passwd \n \nroot:0 \nNote: User's: sync, shutdown, halt, and operator are excluded from the check for other \nuser's with GID 0",
        "Remediation": "Run the following command to set the root user's GID to 0: \n# usermod -g 0 root \nRun the following command to set the root group's GID to 0: \n# groupmod -g 0 root \nRemove any users other than the root user with GID 0 or assign them a new GID if \nappropriate.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.000 \nTA0005 \nM1026"
    },
    {
        "Title": "5.4.2.3 Ensure group root is the only GID 0 group (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The groupmod command can be used to specify which group the root group belongs \nto. This affects permissions of files that are group owned by the root group.",
        "Rationale": "Using GID 0 for the root group helps prevent root group owned files from accidentally \nbecoming accessible to non-privileged users.",
        "Impact": "",
        "Audit": "Run the following command to verify no group other than root is assigned GID 0: \n# awk -F: '$3==\"0\"{print $1\":\"$3}' /etc/group \n \nroot:0",
        "Remediation": "Run the following command to set the root group's GID to 0: \n# groupmod -g 0 root \nRemove any groups other than the root group with GID 0 or assign them a new GID if \nappropriate.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.000 \nTA0005 \nM1026"
    },
    {
        "Title": "5.4.2.4 Ensure root account access is controlled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "There are a number of methods to access the root account directly. Without a password \nset any user would be able to gain access and thus control over the entire system.",
        "Rationale": "Access to root should be secured at all times. \nImpact: \nIf there are any automated processes that relies on access to the root account without \nauthentication, they will fail after remediation.",
        "Impact": "",
        "Audit": "Run the following command to verify that either the root user's password is set or the \nroot user's account is locked: \n# passwd -S root | awk '$2 ~ /^(P|L)/ {print \"User: \\\"\" $1 \"\\\" Password is \nstatus: \" $2}' \nVerify the output is either: \nUser: \"root\" Password is status: P  \n- OR - \nUser: \"root\" Password is status: L \nNote: \n\u2022 \nP - Password is set \n\u2022 \nL - Password is locked",
        "Remediation": "Run the following command to set a password for the root user: \n# passwd root \n- OR - \nRun the following command to lock the root user account: \n# usermod -L root",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078 \nTA0005 \nM1026"
    },
    {
        "Title": "5.4.2.5 Ensure root path integrity (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The root user can execute any command on the system and could be fooled into \nexecuting programs unintentionally if the PATH is not set correctly.",
        "Rationale": "Including the current working directory (.) or other writable directory in root's \nexecutable path makes it likely that an attacker can gain superuser access by forcing an \nadministrator operating as root to execute a Trojan horse program.",
        "Impact": "",
        "Audit": "Run the following script to verify root's path does not include: \n\u2022 \nLocations that are not directories \n\u2022 \nAn empty directory (::) \n\u2022 \nA trailing (:) \n\u2022 \nCurrent working directory (.) \n\u2022 \nNon root owned directories \n\u2022 \nDirectories that less restrictive than mode 0755 \n#!/usr/bin/env bash \n \n{ \n   l_output2=\"\" \n   l_pmask=\"0022\" \n   l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\" \n   l_root_path=\"$(sudo -Hiu root env | grep '^PATH' | cut -d= -f2)\" \n   unset a_path_loc && IFS=\":\" read -ra a_path_loc <<< \"$l_root_path\" \n   grep -q \"::\" <<< \"$l_root_path\" && l_output2=\"$l_output2\\n - root's path \ncontains a empty directory (::)\" \n   grep -Pq \":\\h*$\" <<< \"$l_root_path\" && l_output2=\"$l_output2\\n - root's \npath contains a trailing (:)\" \n   grep -Pq '(\\h+|:)\\.(:|\\h*$)' <<< \"$l_root_path\" && l_output2=\"$l_output2\\n \n- root's path contains current working directory (.)\" \n   while read -r l_path; do \n      if [ -d \"$l_path\" ]; then \n         while read -r l_fmode l_fown; do \n            [ \"$l_fown\" != \"root\" ] && l_output2=\"$l_output2\\n - Directory: \n\\\"$l_path\\\" is owned by: \\\"$l_fown\\\" should be owned by \\\"root\\\"\" \n            [ $(( $l_fmode & $l_pmask )) -gt 0 ] && l_output2=\"$l_output2\\n - \nDirectory: \\\"$l_path\\\" is mode: \\\"$l_fmode\\\" and should be mode: \n\\\"$l_maxperm\\\" or more restrictive\" \n         done <<< \"$(stat -Lc '%#a %U' \"$l_path\")\" \n      else \n         l_output2=\"$l_output2\\n - \\\"$l_path\\\" is not a directory\" \n      fi \n   done <<< \"$(printf \"%s\\n\" \"${a_path_loc[@]}\")\" \n   if [ -z \"$l_output2\" ]; then \n      echo -e \"\\n- Audit Result:\\n  *** PASS ***\\n - Root's path is correctly \nconfigured\\n\" \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - * Reasons for audit \nfailure * :\\n$l_output2\\n\" \n   fi \n}",
        "Remediation": "Correct or justify any: \n\u2022 \nLocations that are not directories \n\u2022 \nEmpty directories (::) \n\u2022 \nTrailing (:) \n\u2022 \nCurrent working directory (.) \n\u2022 \nNon root owned directories \n\u2022 \nDirectories that less restrictive than mode 0755",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1204, T1204.002 \nTA0006 \nM1022",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.4.2.6 Ensure root user umask is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The user file-creation mode mask (umask) is used to determine the file permission for \nnewly created directories and files. In Linux, the default permissions for any newly \ncreated directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-\nrw-). The umask modifies the default Linux permissions by restricting (masking) these \npermissions. The umask is not simply subtracted, but is processed bitwise. Bits set in \nthe umask are cleared in the resulting file mode. \numask can be set with either Octal or Symbolic values: \n\u2022 \nOctal (Numeric) Value - Represented by either three or four digits. ie umask \n0027 or umask 027. If a four digit umask is used, the first digit is ignored. The \nremaining three digits effect the resulting permissions for user, group, and \nworld/other respectively. \n\u2022 \nSymbolic Value - Represented by a comma separated list for User u, group g, \nand world/other o. The permissions listed are not masked by umask. ie a umask \nset by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask \n027. This umask would set a newly created directory with file mode drwxr-x--- \nand a newly created file with file mode rw-r-----. \nroot user Shell Configuration Files: \n\u2022 \n/root/.bash_profile - Is executed to configure the root users' shell before the \ninitial command prompt. Is only read by login shells.  \n\u2022 \n/root/.bashrc - Is executed for interactive shells. only read by a shell that's \nboth interactive and non-login  \numask is set by order of precedence. If umask is set in multiple locations, this order of \nprecedence will determine the system's default umask. \nOrder of precedence: \n1. /root/.bash_profile  \n2. /root/.bashrc  \n3. The system default umask",
        "Rationale": "Setting a secure value for umask ensures that users make a conscious choice about \ntheir file permissions. A permissive umask value could result in directories or files with \nexcessive permissions that can be read and/or written to by unauthorized users.",
        "Impact": "",
        "Audit": "Run the following to verify the root user umask is set to enforce a newly created \ndirectories' permissions to be 750 (drwxr-x---), and a newly created file's \npermissions be 640 (rw-r-----), or more restrictive: \n# grep -Psi -- '^\\h*umask\\h+(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-\n6]\\b)|([0-7][01][0-7]\\b|[0-7][0-7][0-\n6]\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\b)(,o=[rwx]{1,3})?)|((g=[wrx\n]{1,3},)?o=[wrx]{1,3}\\b)))' /root/.bash_profile /root/.bashrc \nNothing should be returned.",
        "Remediation": "Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update \nany line with umask to be 0027 or more restrictive. \nDefault Value: \nSystem default umask",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1083 \nTA0007"
    },
    {
        "Title": "5.4.2.7 Ensure system accounts do not have a valid login shell \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "There are a number of accounts provided with most distributions that are used to \nmanage applications and are not intended to provide an interactive shell. Furthermore, \na user may add special accounts that are not intended to provide an interactive shell.",
        "Rationale": "It is important to make sure that accounts that are not being used by regular users are \nprevented from being used to provide an interactive shell. By default, most distributions \nset the password field for these accounts to an invalid string, but it is also recommended \nthat the shell field in the password file be set to the nologin shell. This prevents the \naccount from potentially being used to run any commands.",
        "Impact": "",
        "Audit": "Run the following command to verify system accounts, except for root, halt, sync, \nshutdown or nfsnobody, do not have a valid login shell: \n#!/usr/bin/env bash \n \n{ \n   l_valid_shells=\"^($(awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed \n-rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\" \n   awk -v pat=\"$l_valid_shells\" -F: \n'($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ && ($3<'\"$(awk \n'/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' || $3 == 65534) && $(NF) ~ pat) \n{print \"Service account: \\\"\" $1 \"\\\" has a valid shell: \" $7}' /etc/passwd \n} \nNothing should be returned",
        "Remediation": "Run the following command to set the shell for any service accounts returned by the \naudit to nologin: \n# usermod -s $(command -v nologin) <user> \nExample script: \n#!/usr/bin/env bash \n \n{ \n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed \n-rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\" \n   awk -v pat=\"$l_valid_shells\" -F: \n'($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ && ($3<'\"$(awk \n'/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' || $3 == 65534) && $(NF) ~ pat) \n{system (\"usermod -s '\"$(command -v nologin)\"' \" $1)}' /etc/passwd \n}",
        "References": "1. NIST SP 800-53 Rev. 5: AC-2(5), AC-3, AC-11, MP-2 \nAdditional Information: \nThe root, sync, shutdown, and halt users are exempted from requiring a non-login \nshell.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0005 \nM1026"
    },
    {
        "Title": "5.4.2.8 Ensure accounts without a valid login shell are locked \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "There are a number of accounts provided with most distributions that are used to \nmanage applications and are not intended to provide an interactive shell. Furthermore, \na user may add special accounts that are not intended to provide an interactive shell.",
        "Rationale": "It is important to make sure that accounts that are not being used by regular users are \nprevented from being used to provide an interactive shell. By default, most distributions \nset the password field for these accounts to an invalid string, but it is also recommended \nthat the shell field in the password file be set to the nologin shell. This prevents the \naccount from potentially being used to run any commands.",
        "Impact": "",
        "Audit": "Run the following script to verify all non-root accounts without a valid login shell are \nlocked. \n#!/usr/bin/env bash \n \n{ \n   l_valid_shells=\"^($(awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed \n-rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\" \n   while IFS= read -r l_user; do \n      passwd -S \"$l_user\" | awk '$2 !~ /^L/ {print \"Account: \\\"\" $1 \"\\\" does \nnot have a valid login shell and is not locked\"}' \n   done < <(awk -v pat=\"$l_valid_shells\" -F: '($1 != \"root\" && $(NF) !~ pat) \n{print $1}' /etc/passwd) \n} \nNothing should be returned",
        "Remediation": "Run the following command to lock any non-root accounts without a valid login shell \nreturned by the audit: \n# usermod -L <user> \nExample script:: \n#!/usr/bin/env bash \n \n{ \n   l_valid_shells=\"^($(awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed \n-rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\" \n   while IFS= read -r l_user; do \n      passwd -S \"$l_user\" | awk '$2 !~ /^L/ {system (\"usermod -L \" $1)}' \n   done < <(awk -v pat=\"$l_valid_shells\" -F: '($1 != \"root\" && $(NF) !~ pat) \n{print $1}' /etc/passwd) \n}",
        "References": "1. NIST SP 800-53 Rev. 5: AC-2(5), AC-3, AC-11, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0005 \nM1026"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.4.3.1 Ensure nologin is not listed in /etc/shells (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "/etc/shells is a text file which contains the full pathnames of valid login shells. This \nfile is consulted by chsh and available to be queried by other programs. \nBe aware that there are programs which consult this file to find out if a user is a normal \nuser; for example, FTP daemons traditionally disallow access to users with shells not \nincluded in this file.",
        "Rationale": "A user can use chsh to change their configured shell. \nIf a user has a shell configured that isn't in in /etc/shells, then the system assumes \nthat they're somehow restricted. In the case of chsh it means that the user cannot \nchange that value. \nOther programs might query that list and apply similar restrictions. \nBy putting nologin in /etc/shells, any user that has nologin as its shell is \nconsidered a full, unrestricted user. This is not the expected behavior for nologin.",
        "Impact": "",
        "Audit": "Run the following command to verify that nologin is not listed in the /etc/shells file: \n# grep -Ps '^\\h*([^#\\n\\r]+)?\\/nologin\\b' /etc/shells \nNothing should be returned",
        "Remediation": "Edit /etc/shells and remove any lines that include nologin",
        "References": "1. shells(5) \n2. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "5.4.3.2 Ensure default user shell timeout is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "TMOUT is an environmental setting that determines the timeout of a shell in seconds. \n\u2022 \nTMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0 disables \ntimeout. \n\u2022 \nreadonly TMOUT- Sets the TMOUT environmental variable as readonly, \npreventing unwanted modification during run-time. \n\u2022 \nexport TMOUT - exports the TMOUT variable \nSystem Wide Shell Configuration Files: \n\u2022 \n/etc/profile - used to set system wide environmental variables on users \nshells. The variables are sometimes the same ones that are in the \n.bash_profile, however this file is used to set an initial PATH or PS1 for all \nshell users of the system. is only executed for interactive login shells, or \nshells executed with the --login parameter.  \n\u2022 \n/etc/profile.d - /etc/profile will execute the scripts within \n/etc/profile.d/*.sh. It is recommended to place your configuration in a shell \nscript within /etc/profile.d to set your own system wide environmental \nvariables. \n\u2022 \n/etc/bashrc - System wide version of .bashrc. In Fedora derived distributions, \n/etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects \noutput to /dev/null if non-interactive. Is only executed for interactive shells \nor if BASH_ENV is set to /etc/bashrc.",
        "Rationale": "Setting a timeout value reduces the window of opportunity for unauthorized user access \nto another user's shell session that has been left unattended. It also ends the inactive \nsession and releases the resources associated with that session.",
        "Impact": "",
        "Audit": "Run the following script to verify that TMOUT is configured to: include a timeout of no \nmore than 900 seconds, to be readonly, to be exported, and is not being changed to \na longer timeout. \n#!/usr/bin/env bash \n \n{ \n   output1=\"\" output2=\"\" \n   [ -f /etc/bashrc ] && BRC=\"/etc/bashrc\" \n   for f in \"$BRC\" /etc/profile /etc/profile.d/*.sh ; do \n      grep -Pq '^\\s*([^#]+\\s+)?TMOUT=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-\n9])\\b' \"$f\" && grep -Pq \n'^\\s*([^#]+;\\s*)?readonly\\s+TMOUT(\\s+|\\s*;|\\s*$|=(900|[1-8][0-9][0-9]|[1-\n9][0-9]|[1-9]))\\b' \"$f\" && grep -Pq \n'^\\s*([^#]+;\\s*)?export\\s+TMOUT(\\s+|\\s*;|\\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-\n9]|[1-9]))\\b' \"$f\" &&  \n   output1=\"$f\" \n   done \n   grep -Pq '^\\s*([^#]+\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\d{3,})\\b' \n/etc/profile /etc/profile.d/*.sh \"$BRC\" && output2=$(grep -Ps \n'^\\s*([^#]+\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\d{3,})\\b' \n/etc/profile /etc/profile.d/*.sh $BRC) \n   if [ -n \"$output1\" ] && [ -z \"$output2\" ]; then \n      echo -e \"\\nPASSED\\n\\nTMOUT is configured in: \\\"$output1\\\"\\n\" \n   else \n      [ -z \"$output1\" ] && echo -e \"\\nFAILED\\n\\nTMOUT is not configured\\n\" \n      [ -n \"$output2\" ] && echo -e \"\\nFAILED\\n\\nTMOUT is incorrectly \nconfigured in: \\\"$output2\\\"\\n\" \n   fi \n}",
        "Remediation": "Review /etc/bashrc, /etc/profile, and all files ending in *.sh in the \n/etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site \npolicy. TMOUT should not exceed 900 or be equal to 0. \nConfigure TMOUT in one of the following files: \n\u2022 \nA file in the /etc/profile.d/ directory ending in .sh \n\u2022 \n/etc/profile \n\u2022 \n/etc/bashrc \nTMOUT configuration examples: \n\u2022 \nAs multiple lines: \nTMOUT=900 \nreadonly TMOUT \nexport TMOUT \n\u2022 \nAs a single line: \nreadonly TMOUT=900 ; export TMOUT \nAdditional Information: \nThe audit and remediation in this recommendation apply to bash and shell. If other \nshells are supported on the system, it is recommended that their configuration files also \nare checked. Other methods of setting a timeout exist for other shells not covered here. \nEnsure that the timeout conforms to your local policy.",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.3 Configure Automatic Session Locking on Enterprise \nAssets \n \nConfigure automatic session locking on enterprise assets after a defined period \nof inactivity. For general purpose operating systems, the period must not exceed \n15 minutes. For mobile end-user devices, the period must not exceed 2 minutes. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078 \nTA0005 \nM1026"
    },
    {
        "Title": "5.4.3.3 Ensure default user umask is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The user file-creation mode mask (umask) is used to determine the file permission for \nnewly created directories and files. In Linux, the default permissions for any newly \ncreated directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-\nrw-). The umask modifies the default Linux permissions by restricting (masking) these \npermissions. The umask is not simply subtracted, but is processed bitwise. Bits set in \nthe umask are cleared in the resulting file mode. \numask can be set with either Octal or Symbolic values: \n\u2022 \nOctal (Numeric) Value - Represented by either three or four digits. ie umask \n0027 or umask 027. If a four digit umask is used, the first digit is ignored. The \nremaining three digits effect the resulting permissions for user, group, and \nworld/other respectively. \n\u2022 \nSymbolic Value - Represented by a comma separated list for User u, group g, \nand world/other o. The permissions listed are not masked by umask. ie a umask \nset by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask \n027. This umask would set a newly created directory with file mode drwxr-x--- \nand a newly created file with file mode rw-r-----. \nThe default umask can be set to use the pam_umask module or in a System Wide \nShell Configuration File. The user creating the directories or files has the \ndiscretion of changing the permissions via the chmod command, or choosing a different \ndefault umask by adding the umask command into a User Shell Configuration \nFile, ( .bash_profile or .bashrc), in their home directory. \n \n \n \nSetting the default umask: \n\u2022 \npam_umask module:  \no will set the umask according to the system default in /etc/login.defs \nand user settings, solving the problem of different umask settings with \ndifferent shells, display managers, remote sessions etc. \no umask=<mask> value in the /etc/login.defs file is interpreted as Octal \no Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):  \n\u25aa \nwill enable setting of the umask group bits to be the same as owner \nbits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the \nuid is the same as gid, and username is the same as the \n<primary group name>  \n\u25aa \nuserdel will remove the user's group if it contains no more \nmembers, and useradd will create by default a group with the name \nof the user \n\u2022 \nSystem Wide Shell Configuration File:  \no /etc/profile - used to set system wide environmental variables on \nusers shells. The variables are sometimes the same ones that are in the \n.bash_profile, however this file is used to set an initial PATH or PS1 for \nall shell users of the system. is only executed for interactive login \nshells, or shells executed with the --login parameter.  \no /etc/profile.d - /etc/profile will execute the scripts within \n/etc/profile.d/*.sh. It is recommended to place your configuration in \na shell script within /etc/profile.d to set your own system wide \nenvironmental variables. \no /etc/bashrc - System wide version of .bashrc. In Fedora derived \ndistributions, etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, \nbut redirects output to /dev/null if non-interactive. Is only executed for \ninteractive shells or if BASH_ENV is set to /etc/bashrc.  \nUser Shell Configuration Files: \n\u2022 \n~/.bash_profile - Is executed to configure your shell before the initial \ncommand prompt. Is only read by login shells.  \n\u2022 \n~/.bashrc - Is executed for interactive shells. only read by a shell that's both \ninteractive and non-login  \numask is set by order of precedence. If umask is set in multiple locations, this order of \nprecedence will determine the system's default umask. \n \n \n \nOrder of precedence: \n1. A file in /etc/profile.d/ ending in .sh - This will override any other system-\nwide umask setting \n2. In the file /etc/profile  \n3. On the pam_umask.so module in /etc/pam.d/postlogin  \n4. In the file /etc/login.defs  \n5. In the file /etc/default/login",
        "Rationale": "Setting a secure default value for umask ensures that users make a conscious choice \nabout their file permissions. A permissive umask value could result in directories or files \nwith excessive permissions that can be read and/or written to by unauthorized users.",
        "Impact": "",
        "Audit": "Run the following to verify the default user umask is set to 027(octal) or u=rwx,g=rx,o= \n(Symbolic) to enforce newly created directories' permissions to be 750 (drwxr-x---), \nand newly created file's permissions be 640 (rw-r-----), or more restrictive: \n#!/usr/bin/env bash \n \n{    \n    l_output=\"\" l_output2=\"\" \n    file_umask_chk() \n    { \n       if grep -Psiq -- '^\\h*umask\\h+(0?[0-7][2-\n7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\h*#.*)?$' \"$l_file\"; then \n          l_output=\"$l_output\\n - umask is set correctly in \\\"$l_file\\\"\" \n       elif grep -Psiq -- '^\\h*umask\\h+(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-\n7][0-6]\\b)|([0-7][01][0-7]\\b|[0-7][0-7][0-\n6]\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\b)(,o=[rwx]{1,3})?)|((g=[wrx\n]{1,3},)?o=[wrx]{1,3}\\b)))' \"$l_file\"; then \n          l_output2=\"$l_output2\\n - umask is incorrectly set in \\\"$l_file\\\"\" \n       fi \n    } \n    while IFS= read -r -d $'\\0' l_file; do \n       file_umask_chk \n    done < <(find /etc/profile.d/ -type f -name '*.sh' -print0) \n    [ -z \"$l_output\" ] && l_file=\"/etc/profile\" && file_umask_chk \n    [ -z \"$l_output\" ] && l_file=\"/etc/bashrc\" && file_umask_chk \n    [ -z \"$l_output\" ] && l_file=\"/etc/bash.bashrc\" && file_umask_chk \n    [ -z \"$l_output\" ] && l_file=\"/etc/pam.d/postlogin\" \n    if [ -z \"$l_output\" ]; then \n       if grep -Psiq -- \n'^\\h*session\\h+[^#\\n\\r]+\\h+pam_umask\\.so\\h+([^#\\n\\r]+\\h+)?umask=(0?[0-7][2-\n7]7)\\b' \"$l_file\"; then \n          l_output1=\"$l_output1\\n - umask is set correctly in \\\"$l_file\\\"\" \n       elif grep -Psiq \n'^\\h*session\\h+[^#\\n\\r]+\\h+pam_umask\\.so\\h+([^#\\n\\r]+\\h+)?umask=(([0-7][0-\n7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b))' \"$l_file\"; then \n          l_output2=\"$l_output2\\n - umask is incorrectly set in \\\"$l_file\\\"\" \n       fi \n    fi \n    [ -z \"$l_output\" ] && l_file=\"/etc/login.defs\" && file_umask_chk \n    [ -z \"$l_output\" ] && l_file=\"/etc/default/login\" && file_umask_chk \n    [[ -z \"$l_output\" && -z \"$l_output2\" ]] && l_output2=\"$l_output2\\n - \numask is not set\" \n    if [ -z \"$l_output2\" ]; then \n       echo -e \"\\n- Audit Result:\\n  ** PASS **\\n - * Correctly configured * \n:\\n$l_output\\n\" \n    else \n       echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - * Reasons for audit \nfailure * :\\n$l_output2\" \n       [ -n \"$l_output\" ] && echo -e \"\\n- * Correctly configured * \n:\\n$l_output\\n\" \n    fi \n}",
        "Remediation": "Run the following script and perform the instructions in the output to set the default \numask to 027 or more restrictive: \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" l_output2=\"\" l_out=\"\" \n   file_umask_chk() \n   { \n      if grep -Psiq -- '^\\h*umask\\h+(0?[0-7][2-\n7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\h*#.*)?$' \"$l_file\"; then \n         l_out=\"$l_out\\n - umask is set correctly in \\\"$l_file\\\"\" \n      elif grep -Psiq -- '^\\h*umask\\h+(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-\n7][0-6]\\b)|([0-7][01][0-7]\\b|[0-7][0-7][0-\n6]\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\b)(,o=[rwx]{1,3})?)|((g=[wrx\n]{1,3},)?o=[wrx]{1,3}\\b)))' \"$l_file\"; then \n         l_output2=\"$l_output2\\n   - \\\"$l_file\\\"\" \n      fi \n   } \n   while IFS= read -r -d $'\\0' l_file; do \n      file_umask_chk \n   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0) \n   [ -n \"$l_out\" ] && l_output=\"$l_out\" \n   l_file=\"/etc/profile\" && file_umask_chk \n   l_file=\"/etc/bashrc\" && file_umask_chk \n   l_file=\"/etc/bash.bashrc\" && file_umask_chk \n   l_file=\"/etc/pam.d/postlogin\" \n   if grep -Psiq \n'^\\h*session\\h+[^#\\n\\r]+\\h+pam_umask\\.so\\h+([^#\\n\\r]+\\h+)?umask=(([0-7][0-\n7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b))' \"$l_file\"; then \n      l_output2=\"$l_output2\\n   - \\\"$l_file\\\"\" \n   fi \n   l_file=\"/etc/login.defs\" && file_umask_chk \n   l_file=\"/etc/default/login\" && file_umask_chk \n   if [ -z \"$l_output2\" ]; then \n      echo -e \" - No files contain a UMASK that is not restrictive enough\\n   \nNo UMASK updates required to existing files\" \n   else \n      echo -e \"\\n - UMASK is not restrictive enough in the following \nfile(s):$l_output2\\n\\n- Remediation Procedure:\\n - Update these files and \ncomment out the UMASK line\\n   or update umask to be \\\"0027\\\" or more \nrestrictive\" \n   fi \n   if [ -n \"$l_output\" ]; then \n      echo -e \"$l_output\" \n   else \n      echo -e \" - Configure UMASK in a file in the \\\"/etc/profile.d/\\\" \ndirectory ending in \\\".sh\\\"\\n\\n   Example Command (Hash to represent being \nrun at a root prompt):\\n\\n# printf '%s\\\\\\n' \\\"umask 027\\\" > \n/etc/profile.d/50-systemwide_umask.sh\\n\" \n   fi \n} \n \n \n \nNotes: \n\u2022 \nThis method only applies to bash and shell. If other shells are supported on the \nsystem, it is recommended that their configuration files also are checked \n\u2022 \nIf the pam_umask.so module is going to be used to set umask, ensure that it's not \nbeing overridden by another setting. Refer to the PAM_UMASK(8) man page for \nmore information \nDefault Value: \nUMASK 022",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2 \nAdditional Information: \n\u2022 \nOther methods of setting a default user umask exist \n\u2022 \nIf other methods are in use in your environment they should be audited \n\u2022 \nThe default user umask can be overridden with a user specific umask \n\u2022 \nThe user creating the directories or files has the discretion of changing the \npermissions:  \no Using the chmod command \no Setting a different default umask by adding the umask command into a \nUser Shell Configuration File, (.bashrc), in their home directory \no Manually changing the umask for the duration of a login session by \nrunning the umask command",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1083 \nTA0007"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "6.1.1 Configure systemd-journald service \nsystemd-journald is a system service that collects and stores logging data. It creates \nand maintains structured, indexed journals based on logging information that is received \nfrom a variety of sources: \n\u2022 \nKernel log messages, via kmsg \n\u2022 \nSimple system log messages, via the libc syslog call \n\u2022 \nStructured system log messages via the native Journal API \n\u2022 \nStandard output and standard error of service units \n\u2022",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "6.1.1.1 Ensure journald service is enabled and active (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Ensure that the systemd-journald service is enabled to allow capturing of logging \nevents.",
        "Rationale": "If the systemd-journald service is not enabled to start on boot, the system will not \ncapture logging events.",
        "Impact": "",
        "Audit": "Run the following command to verify systemd-journald is enabled: \n# systemctl is-enabled systemd-journald.service \n \nstatic \nNote: By default the systemd-journald service does not have an [Install] section \nand thus cannot be enabled / disabled. It is meant to be referenced as Requires or \nWants by other unit files. As such, if the status of systemd-journald is not static, \ninvestigate why \nRun the following command to verify systemd-journald is active: \n# systemctl is-active systemd-journald.service \n \nactive",
        "Remediation": "Run the following commands to unmask and start systemd-journald.service \n# systemctl unmask systemd-journald.service \n# systemctl start systemd-journald.service",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-7 AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.001 \nTA0005 \nM1029"
    },
    {
        "Title": "6.1.1.2 Ensure journald log file access is configured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Journald will create logfiles that do not already exist on the system. This setting controls \nwhat permissions will be applied to these newly created files.",
        "Rationale": "It is important to ensure that log files have the correct permissions to ensure that \nsensitive data is archived and protected.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n\u2022 \nsystemd-journald logfiles are mode 0640 or more restrictive \n\u2022 \nDirectories /run/ and /var/lib/systemd/ are mode 0755 or more restrictive \n\u2022 \nAll other configured directories are mode 2755, 0750, or more restrictive \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() \n   l_systemd_config_file=\"/etc/tmpfiles.d/systemd.conf\" \nl_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \n   f_file_chk() \n   { \n      l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_perm_mask )) )\" \n      if [ $(( $l_mode & $l_perm_mask )) -le 0 ] || [[ \"$l_type\" = \n\"Directory\" && \"$l_mode\" =~ 275(0|5) ]]; then \n         a_out+=(\"  - $l_type \\\"$l_logfile\\\" access is:\" \\ \n         \"    mode: \\\"$l_mode\\\", owned by: \\\"$l_user\\\", and group owned by: \n\\\"$l_group\\\"\") \n      else \n         a_out2+=(\"  - $l_type \\\"$l_logfile\\\" access is:\" \\ \n         \"    mode: \\\"$l_mode\\\", owned by: \\\"$l_user\\\", and group owned by: \n\\\"$l_group\\\"\" \\ \n         \"    should be mode: \\\"$l_maxperm\\\" or more restrictive\") \n      fi \n   } \n   while IFS= read -r l_file; do \n      l_file=\"$(tr -d '# ' <<< \"$l_file\")\" a_out=() a_out2=() \n      l_logfile_perms_line=\"$(awk '($1~/^(f|d)$/ && $2~/\\/\\S+/ && $3~/[0-\n9]{3,}/){print $2 \":\" $3 \":\" $4 \":\" $5}' \"$l_file\")\" \n      while IFS=: read -r l_logfile l_mode l_user l_group; do \n         if [ -d \"$l_logfile\" ]; then \n            l_perm_mask=\"0027\" l_type=\"Directory\" \n            grep -Psq '^(\\/run|\\/var\\/lib\\/systemd)\\b' <<< \"$l_logfile\" && \nl_perm_mask=\"0022\" \n         else \n            l_perm_mask=\"0137\" l_type=\"File\" \n         fi \n         grep -Psq '^(\\/run|\\/var\\/lib\\/systemd)\\b' <<< \"$l_logfile\" && \nl_perm_mask=\"0022\" \n         f_file_chk \n      done <<< \"$l_logfile_perms_line\" \n      [ \"${#a_out[@]}\" -gt \"0\" ] && a_output+=(\" - File: \\\"$l_file\\\" sets:\" \n\"${a_out[@]}\") \n      [ \"${#a_out2[@]}\" -gt \"0\" ] && a_output2+=(\" - File: \\\"$l_file\\\" sets:\" \n\"${a_out2[@]}\") \n   done < <($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -\nPio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** REVIEW **\" \\ \n      \" -  Review file access to ensure they are set IAW site policy:\" \n\"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi    \n} \nReview the output",
        "Remediation": "If the default configuration is not appropriate for the site specific requirements, copy \n/usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and \nmodify as required. Recommended mode for logfiles is 0640 or more restrictive.",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, AU-2, AU-12, MP-2, SI-5 \nAdditional Information: \nSee man 5 tmpfiles.d for detailed information on the permission sets for the relevant \nlog files. Further information with examples can be found at \nhttps://www.freedesktop.org/software/systemd/man/tmpfiles.d.html",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.1.1.3 Ensure journald log file rotation is configured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Journald includes the capability of rotating log files regularly to avoid filling up the \nsystem with logs or making the logs unmanageably large. The file \n/etc/systemd/journald.conf is the configuration file used to specify how logs \ngenerated by Journald should be rotated.",
        "Rationale": "By keeping the log files smaller and more manageable, a system administrator can \neasily archive these files to another system and spend less time looking through \ninordinately large log files.",
        "Impact": "",
        "Audit": "Review the systemd-journald configuration. Verify logs are rotated according to site \npolicy. The specific parameters for log rotation are: \nRun the following script and review the output to ensure logs are rotated according to \nsite policy: \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_systemd_config_file=\"systemd/journald.conf\" \n   a_parameters=(\"SystemMaxUse=^.+$\" \"SystemKeepFree=^.+$\" \"RuntimeMaxUse=^.+$\" \n\"RuntimeKeepFree=^.+$\" \"MaxFileSec=^.+$\") \n   f_config_file_parameter_chk() \n   { \n      l_used_parameter_setting=\"\" \n      while IFS= read -r l_file; do \n         l_file=\"$(tr -d '# ' <<< \"$l_file\")\" \n         l_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \n\"$l_file\" | tail -n 1)\" \n         [ -n \"$l_used_parameter_setting\" ] && break \n      done < <($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio \n'^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n      if [ -n \"$l_used_parameter_setting\" ]; then \n         while IFS=: read -r l_file_name l_file_parameter; do \n            while IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do \n               if grep -Pq -- \"$l_parameter_value\" <<< \"$l_file_parameter_value\"; then \n                  a_output+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\") \n               fi \n            done <<< \"$l_file_parameter\" \n         done <<< \"$l_used_parameter_setting\" \n      else \n         a_output2+=(\"  - Parameter: \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"   *** Note: ***\" \"   \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure\") \n      fi \n   } \n   for l_input_parameter in \"${a_parameters[@]}\"; do \n      while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check \nparameters \n         l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n         l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n         l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n         f_config_file_parameter_chk \n      done <<< \"$l_input_parameter\" \n   done \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit \nfailure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Edit /etc/systemd/journald.conf or a file ending in .conf the \n/etc/systemd/journald.conf.d/ directory. Set the following parameters in the \n[Journal] section to ensure logs are rotated according to site policy. The settings \nshould be carefully understood as there are specific edge cases and prioritization of \nparameters. \nExample Configuration: \n[Journal] \nSystemMaxUse=1G \nSystemKeepFree=500M \nRuntimeMaxUse=200M \nRuntimeKeepFree=50M \nMaxFileSec=1month \nExample script to create systemd drop-in configuration file: \n{ \n   a_settings=(\"SystemMaxUse=1G\" \"SystemKeepFree=500M\" \"RuntimeMaxUse=200M\" \n\"RuntimeKeepFree=50M\" \"MaxFileSec=1month\") \n   [ ! -d /etc/systemd/journald.conf.d/ ] && mkdir \n/etc/systemd/journald.conf.d/ \n   if grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-\njournald.conf; then \n      printf '%s\\n' \"\" \"${a_settings[@]}\" >> /etc/systemd/journald.conf.d/60-\njournald.conf \n   else \n      printf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" >> \n/etc/systemd/journald.conf.d/60-journald.conf \n   fi \n} \nNote: \n\u2022 \nIf these settings appear in a canonically later file, or later in the same file, the \nsetting will be overwritten \n\u2022 \nLogfile size and configuration to move logfiles to a remote log server should be \naccounted for when configuring these settings \nRun to following command to update the parameters in the service: \n# systemctl reload-or-restart systemd-journald",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-7, AU-12 \nAdditional Information: \nSee man 5 journald.conf for detailed information regarding the parameters in use.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002 \nTA0040 \nM1022"
    },
    {
        "Title": "6.1.1.4 Ensure only one logging system is in use (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Best practices recommend that a single centralized logging system be used for log \nmanagement, choose a single service either rsyslog - OR - journald to be used as a \nsingle centralized logging system.",
        "Rationale": "Configuring only one logging service either rsyslog - OR - journald avoids \nredundancy, optimizes resources, simplifies configuration and management, and \nensures consistency. \nImpact: \nTransitioning from one logging service to another can be complex and time consuming, \nit involves reconfiguration and may result in data loss if not managed and reconfigured \ncorrectly.",
        "Impact": "",
        "Audit": "Run the following script to ensure only one logging system is in use: \n#!/usr/bin/env bash \n \n{ \n    l_output=\"\" l_output2=\"\" # Check the status of rsyslog and journald \n    if systemctl is-active --quiet rsyslog; then \n        l_output=\"$l_output\\n - rsyslog is in use\\n- follow the \nrecommendations in Configure rsyslog subsection only\" \n    elif systemctl is-active --quiet systemd-journald; then \n        l_output=\"$l_output\\n - journald is in use\\n- follow the \nrecommendations in Configure journald subsection only\" \n    else \n        echo -e \u201cunable to determine system logging\u201d \n        l_output2=\"$l_output2\\n - unable to determine system logging\\n- \nConfigure only ONE system logging: rsyslog OR journald\" \n    fi \n    if [ -z \"$l_output2\" ]; then  # Provide audit results \n        echo -e \"\\n- Audit Result:\\n  ** PASS **\\n$l_output\\n\" \n    else \n        echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - Reason(s) for audit \nfailure:\\n$l_output2\" \n    fi \n}",
        "Remediation": "1. Determine whether to use journald - OR - rsyslog depending on site needs \n2. Configure systemd-jounald.service \n3. Configure only ONE either journald - OR - rsyslog and complete the \nrecommendations in that subsection \n4. Return to this recommendation to ensure only one logging system is in use",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "6.1.2.1.1 Ensure systemd-journal-remote is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Journald systemd-journal-remote supports the ability to send log events it gathers to \na remote log host or to receive messages from remote hosts, thus enabling centralized \nlog management.",
        "Rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system. \nNote: This recommendation only applies if journald is the chosen method for \nclient side logging. Do not apply this recommendation if rsyslog is used.",
        "Impact": "",
        "Audit": "- IF - journald will be used for logging on the system: \nRun the following command to verify systemd-journal-remote is installed. \n# dpkg-query -s systemd-journal-remote &>/dev/null && echo \"systemd-journal-\nremote is installed\"  \nVerify the output matches: \nsystemd-journal-remote is installed",
        "Remediation": "Run the following command to install systemd-journal-remote: \n# apt install systemd-journal-remote",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-7 AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.006 \nTA0040 \nM1029 \n \n6.1.2.1.2 Ensure systemd-journal-upload authentication is \nconfigured (Manual) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nJournald systemd-journal-upload supports the ability to send log events it gathers to \na remote log host. \nRationale: \nStoring log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system. \nNote: This recommendation only applies if journald is the chosen method for \nclient side logging. Do not apply this recommendation if rsyslog is used. \nAudit: \nRun the following script to verify systemd-journal-upload authentication is \nconfigured: \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_systemd_config_file=\"systemd/journal-upload.conf\" \n   a_parameters=(\"URL=^.+$\" \"ServerKeyFile=^.+$\" \"ServerCertificateFile=^.+$\" \n\"TrustedCertificateFile=^.+$\") \n   f_config_file_parameter_chk() \n   { \n      l_used_parameter_setting=\"\" \n      while IFS= read -r l_file; do \n         l_file=\"$(tr -d '# ' <<< \"$l_file\")\" \n         l_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \n\"$l_file\" | tail -n 1)\" \n         [ -n \"$l_used_parameter_setting\" ] && break \n      done < <($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio \n'^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n      if [ -n \"$l_used_parameter_setting\" ]; then \n         while IFS=: read -r l_file_name l_file_parameter; do \n            while IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do \n               if grep -Pq -- \"$l_parameter_value\" <<< \"$l_file_parameter_value\"; then \n                  a_output+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\") \n               fi \n            done <<< \"$l_file_parameter\" \n         done <<< \"$l_used_parameter_setting\" \n      else \n         a_output2+=(\"  - Parameter: \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"   *** Note: ***\" \"   \\\"$l_parameter_name\\\" May be set in a file that's \nignored by load procedure\") \n      fi \n   } \n   for l_input_parameter in \"${a_parameters[@]}\"; do \n      while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check \nparameters \n         l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n         l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n         l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n         f_config_file_parameter_chk \n      done <<< \"$l_input_parameter\" \n   done \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit \nfailure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n} \nReview the output to ensure it matches your environments' certificate locations and the \nURL of the log server: \nExample output: \n \n- Audit Result: \n  ** PASS ** \n  - Parameter: \"URL\" \n    set to: \"192.168.50.42\" \n    in the file: \"/etc/systemd/journal-upload.conf.d/60-journald_upload.conf\" \n  - Parameter: \"ServerKeyFile\" \n    set to: \"/etc/ssl/private/journal-upload.pem\" \n    in the file: \"/etc/systemd/journal-upload.conf.d/60-journald_upload.conf\" \n  - Parameter: \"ServerCertificateFile\" \n    set to: \"/etc/ssl/certs/journal-upload.pem\" \n    in the file: \"/etc/systemd/journal-upload.conf.d/60-journald_upload.conf\" \n  - Parameter: \"TrustedCertificateFile\" \n    set to: \"/etc/ssl/ca/trusted.pem\" \n    in the file: \"/etc/systemd/journal-upload.conf.d/60-journald_upload.conf\" \nRemediation: \nEdit the /etc/systemd/journal-upload.conf file or a file in \n/etc/systemd/journal-upload.conf.d ending in .conf and ensure the following \nlines are set in the [Upload] section per your environment: \nExample settings: \n[Upload] \nURL=192.168.50.42 \nServerKeyFile=/etc/ssl/private/journal-upload.pem \nServerCertificateFile=/etc/ssl/certs/journal-upload.pem \nTrustedCertificateFile=/etc/ssl/ca/trusted.pem \nExample script to create systemd drop-in configuration file: \n#!/usr/bin/env bash \n \n{ \n   a_settings=(\"URL=192.168.50.42\" \"ServerKeyFile=/etc/ssl/private/journal-\nupload.pem\" \\ \n   \"ServerCertificateFile=/etc/ssl/certs/journal-upload.pem\" \n\"TrustedCertificateFile=/etc/ssl/ca/trusted.pem\") \n   [ ! -d /etc/systemd/journal-upload.conf.d/ ] && mkdir \n/etc/systemd/journal-upload.conf.d/ \n   if grep -Psq -- '^\\h*\\[Upload\\]' /etc/systemd/journal-upload.conf.d/60-\njournald_upload.conf; then \n      printf '%s\\n' \"\" \"${a_settings[@]}\" >> /etc/systemd/journal-\nupload.conf.d/60-journald_upload.conf \n   else \n      printf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" >> \n/etc/systemd/journal-upload.conf.d/60-journald_upload.conf \n   fi \n} \nRun the following command to update the parameters in the service: \n# systemctl reload-or-restart systemd-journal-upload \nReferences: \n1. NIST SP 800-53 Rev. 5: AU-2, AU-12 \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.006 \nTA0040 \nM1029"
    },
    {
        "Title": "6.1.2.1.3 Ensure systemd-journal-upload is enabled and active \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Journald systemd-journal-upload supports the ability to send log events it gathers to \na remote log host.",
        "Rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system. \nNote: This recommendation only applies if journald is the chosen method for \nclient side logging. Do not apply this recommendation if rsyslog is used.",
        "Impact": "",
        "Audit": "Run the following command to verify systemd-journal-upload is enabled. \n# systemctl is-enabled systemd-journal-upload.service \n \nenabled \nRun the following command to verify systemd-journal-upload is active: \n# systemctl is-active systemd-journal-upload.service \n \nactive",
        "Remediation": "Run the following commands to unmask, enable and start systemd-journal-upload: \n# systemctl unmask systemd-journal-upload.service \n# systemctl --now enable systemd-journal-upload.service",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.006 \nTA0040 \nM1029"
    },
    {
        "Title": "6.1.2.1.4 Ensure systemd-journal-remote service is not in use \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Journald systemd-journal-remote supports the ability to receive messages from \nremote hosts, thus acting as a log server. Clients should not receive data from other \nhosts. \nNote: \n\u2022 \nThe same package, systemd-journal-remote, is used for both sending logs to \nremote hosts and receiving incoming logs. \n\u2022 \nWith regards to receiving logs, there are two services; systemd-journal-\nremote.socket and systemd-journal-remote.service.",
        "Rationale": "If a client is configured to also receive data, thus turning it into a server, the client \nsystem is acting outside it's operational boundary. \nNote: This recommendation only applies if journald is the chosen method for \nclient side logging. Do not apply this recommendation if rsyslog is used.",
        "Impact": "",
        "Audit": "Run the following command to verify systemd-journal-remote.socket and systemd-\njournal-remote.service are not enabled: \n# systemctl is-enabled systemd-journal-remote.socket systemd-journal-\nremote.service | grep -P -- '^enabled' \nNothing should be returned \nRun the following command to verify systemd-journal-remote.socket and systemd-\njournal-remote.service are not active: \n# systemctl is-active systemd-journal-remote.socket systemd-journal-\nremote.service | grep -P -- '^active' \nNothing should be returned",
        "Remediation": "Run the following commands to stop and mask systemd-journal-remote.socket and \nsystemd-journal-remote.service: \n# systemctl stop systemd-journal-remote.socket systemd-journal-remote.service \n# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-7 AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.006 \nTA0040 \nM1029"
    },
    {
        "Title": "6.1.2.2 Ensure journald ForwardToSyslog is disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Data from journald should be kept in the confines of the service and not forwarded to \nother services.",
        "Rationale": "- IF - journald is the method for capturing logs, all logs of the system should be \nhandled by journald and not forwarded to other logging mechanisms. \nNote: This recommendation only applies if journald is the chosen method for \nclient side logging. Do not apply this recommendation if rsyslog is used.",
        "Impact": "",
        "Audit": "- IF - journald is the method for capturing logs \nRun the following script to verify ForwardToSyslog is set to no: \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_systemd_config_file=\"systemd/journald.conf\" \n   a_parameters=(\"ForwardToSyslog=no\") \n   f_config_file_parameter_chk() \n   { \n      l_used_parameter_setting=\"\" \n      while IFS= read -r l_file; do \n         l_file=\"$(tr -d '# ' <<< \"$l_file\")\" \n         l_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \n\"$l_file\" | tail -n 1)\" \n         [ -n \"$l_used_parameter_setting\" ] && break \n      done < <($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio \n'^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n      if [ -n \"$l_used_parameter_setting\" ]; then \n         while IFS=: read -r l_file_name l_file_parameter; do \n            while IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do \n               if grep -Pq -- \"$l_parameter_value\" <<< \"$l_file_parameter_value\"; then \n                  a_output+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    correctly set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\") \n               else \n                  a_output2+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    incorrectly set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\" \\ \n                  \"    Should be set to: \\\"$l_value_out\\\"\") \n               fi \n            done <<< \"$l_file_parameter\" \n         done <<< \"$l_used_parameter_setting\" \n      else \n         a_output2+=(\"  - Parameter: \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"   *** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by \nload procedure ***\") \n      fi \n   } \n   for l_input_parameter in \"${a_parameters[@]}\"; do \n      while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check \nparameters \n         l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n         l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n         l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n         f_config_file_parameter_chk \n      done <<< \"$l_input_parameter\" \n   done \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit \nfailure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "- IF - rsyslog is the preferred method for capturing logs, this section and \nRecommendation should be skipped and the \"Configure rsyslog\" section followed. \n- IF - journald is the preferred method for capturing logs: \nSet the following parameter in the [Journal] section in \n/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending in \n.conf: \nForwardToSyslog=no \nExample script to create systemd drop-in configuration file: \n#!/usr/bin/env bash \n \n{ \n   a_settings=(\"ForwardToSyslog=no\") \n   [ ! -d /etc/systemd/journald.conf.d/ ] && mkdir \n/etc/systemd/journald.conf.d/ \n   if grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-\njournald.conf; then \n      printf '%s\\n' \"\" \"${a_settings[@]}\" >> /etc/systemd/journald.conf.d/60-\njournald.conf \n   else \n      printf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" >> \n/etc/systemd/journald.conf.d/60-journald.conf \n   fi \n} \nNote: If this setting appears in a canonically later file, or later in the same file, the \nsetting will be overwritten \nRun to following command to update the parameters in the service: \n# systemctl reload-or-restart systemd-journald \nDefault Value: \nForwardToSyslog=no",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-6, AU-7, AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.006 \nTA0040 \nM1029"
    },
    {
        "Title": "6.1.2.3 Ensure journald Compress is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The journald system includes the capability of compressing overly large files to avoid \nfilling up the system with logs or making the logs unmanageably large.",
        "Rationale": "Uncompressed large files may unexpectedly fill a filesystem leading to resource \nunavailability. Compressing logs prior to write can prevent sudden, unexpected \nfilesystem impacts. \nNote: This recommendation only applies if journald is the chosen method for \nclient side logging. Do not apply this recommendation if rsyslog is used.",
        "Impact": "",
        "Audit": "- IF - journald is the method for capturing logs \nRun the following script to verify Compress is set to yes: \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_systemd_config_file=\"systemd/journald.conf\" \n   a_parameters=(\"Compress=yes\") \n   f_config_file_parameter_chk() \n   { \n      l_used_parameter_setting=\"\" \n      while IFS= read -r l_file; do \n         l_file=\"$(tr -d '# ' <<< \"$l_file\")\" \n         l_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \n\"$l_file\" | tail -n 1)\" \n         [ -n \"$l_used_parameter_setting\" ] && break \n      done < <($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio \n'^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n      if [ -n \"$l_used_parameter_setting\" ]; then \n         while IFS=: read -r l_file_name l_file_parameter; do \n            while IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do \n               if grep -Pq -- \"$l_parameter_value\" <<< \"$l_file_parameter_value\"; then \n                  a_output+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    correctly set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\") \n               else \n                  a_output2+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    incorrectly set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\" \\ \n                  \"    Should be set to: \\\"$l_value_out\\\"\") \n               fi \n            done <<< \"$l_file_parameter\" \n         done <<< \"$l_used_parameter_setting\" \n      else \n         a_output2+=(\"  - Parameter: \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"   *** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by \nload procedure ***\") \n      fi \n   } \n   for l_input_parameter in \"${a_parameters[@]}\"; do \n      while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check \nparameters \n         l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n         l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n         l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n         f_config_file_parameter_chk \n      done <<< \"$l_input_parameter\" \n   done \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit \nfailure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "- IF - rsyslog is the preferred method for capturing logs, this section and \nRecommendation should be skipped and the \"Configure rsyslog\" section followed. \n- IF - journald is the preferred method for capturing logs: \nSet the following parameter in the [Journal] section in \n/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending \nin .conf: \nCompress=yes \nExample script to create systemd drop-in configuration file: \n#!/usr/bin/env bash \n \n{ \n   a_settings=(\"Compress=yes\") \n   [ ! -d /etc/systemd/journald.conf.d/ ] && mkdir \n/etc/systemd/journald.conf.d/ \n   if grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-\njournald.conf; then \n      printf '%s\\n' \"\" \"${a_settings[@]}\" >> /etc/systemd/journald.conf.d/60-\njournald.conf \n   else \n      printf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" >> \n/etc/systemd/journald.conf.d/60-journald.conf \n   fi \n} \nNote: If this setting appears in a canonically later file, or later in the same file, the \nsetting will be overwritten \nRun to following command to update the parameters in the service: \n# systemctl reload-or-restart systemd-journald \nDefault Value: \nCompress=yes",
        "References": "1. NIST SP 800-53 Rev. 5: AU-4",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with \nthe enterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \nv7 \n6.4 Ensure adequate storage for logs \n \nEnsure that all systems that store logs have adequate storage space for the \nlogs generated. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.001 \nTA0040 \nM1053"
    },
    {
        "Title": "6.1.2.4 Ensure journald Storage is configured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Data from journald may be stored in volatile memory or persisted locally on the server. \nLogs in memory will be lost upon a system reboot. By persisting logs to local disk on the \nserver they are protected from loss due to a reboot.",
        "Rationale": "Writing log data to disk will provide the ability to forensically reconstruct events which \nmay have impacted the operations or security of a system even after a system crash or \nreboot. \nNote: This recommendation only applies if journald is the chosen method for \nclient side logging. Do not apply this recommendation if rsyslog is used.",
        "Impact": "",
        "Audit": "- IF - journald is the method for capturing logs \nRun the following script to verify Storage is set to persistent: \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_systemd_config_file=\"systemd/journald.conf\" \n   a_parameters=(\"Storage=persistent\") \n   f_config_file_parameter_chk() \n   { \n      l_used_parameter_setting=\"\" \n      while IFS= read -r l_file; do \n         l_file=\"$(tr -d '# ' <<< \"$l_file\")\" \n         l_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \n\"$l_file\" | tail -n 1)\" \n         [ -n \"$l_used_parameter_setting\" ] && break \n      done < <($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio \n'^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n      if [ -n \"$l_used_parameter_setting\" ]; then \n         while IFS=: read -r l_file_name l_file_parameter; do \n            while IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do \n               if grep -Pq -- \"$l_parameter_value\" <<< \"$l_file_parameter_value\"; then \n                  a_output+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    correctly set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\") \n               else \n                  a_output2+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    incorrectly set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\" \\ \n                  \"    Should be set to: \\\"$l_value_out\\\"\") \n               fi \n            done <<< \"$l_file_parameter\" \n         done <<< \"$l_used_parameter_setting\" \n      else \n         a_output2+=(\"  - Parameter: \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"   *** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by \nload procedure ***\") \n      fi \n   } \n   for l_input_parameter in \"${a_parameters[@]}\"; do \n      while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check \nparameters \n         l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n         l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n         l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n         f_config_file_parameter_chk \n      done <<< \"$l_input_parameter\" \n   done \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit \nfailure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "- IF - rsyslog is the preferred method for capturing logs, this section and \nRecommendation should be skipped and the \"Configure rsyslog\" section followed. \n- IF - journald is the preferred method for capturing logs: \nSet the following parameter in the [Journal] section in \n/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending in \n.conf: \nStorage=persistent \nExample script to create systemd drop-in configuration file: \n#!/usr/bin/env bash \n \n{ \n   a_settings=(\"Storage=persistent\") \n   [ ! -d /etc/systemd/journald.conf.d/ ] && mkdir \n/etc/systemd/journald.conf.d/ \n   if grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-\njournald.conf; then \n      printf '%s\\n' \"\" \"${a_settings[@]}\" >> /etc/systemd/journald.conf.d/60-\njournald.conf \n   else \n      printf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" >> \n/etc/systemd/journald.conf.d/60-journald.conf \n   fi \n} \nNote: If this setting appears in a canonically later file, or later in the same file, the \nsetting will be overwritten \nRun to following command to update the parameters in the service: \n# systemctl reload-or-restart systemd-journald \nDefault Value: \nStorage=persistent",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3, AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.006 \nTA0005 \nM1022 \n \n6.1.3 Configure rsyslog \nThe rsyslog software package may be used instead of the default journald logging \nmechanism. \nRsyslog has evolved over several decades. For this reason it supports three different \nconfiguration formats (\u201clanguages\u201d): \n\u2022 \nbasic - previously known as the sysklogd format, this is the format best used to \nexpress basic things, such as where the statement fits on a single line.  \no It stems back to the original syslog.conf format, in use now for several \ndecades. \no The most common use case is matching on facility/severity and writing \nmatching messages to a log file. \n\u2022 \nadvanced - previously known as the RainerScript format, this format was first \navailable in rsyslog v6 and is the current, best and most precise format for non-\ntrivial use cases where more than one line is needed.  \no Prior to v7, there was a performance impact when using this format that \nencouraged use of the basic format for best results. Current versions of \nrsyslog do not suffer from this (historical) performance impact. \no This new style format is specifically targeted towards more advanced use \ncases like forwarding to remote hosts that might be partially offline. \n\u2022 \nobsolete legacy - previously known simply as the legacy format, this format is \nexactly what its name implies: it is obsolete and should not be used when writing \nnew configurations. It was created in the early days (up to rsyslog version 5) \nwhere we expected that rsyslog would extend sysklogd just mildly. Consequently, \nit was primarily aimed at small additions to the original sysklogd format.  \no Practice has shown that it was notoriously hard to use for more advanced \nuse cases, and thus we replaced it with the advanced format. \no In essence, everything that needs to be written on a single line that starts \nwith a dollar sign is legacy format. Users of this format are encouraged to \nmigrate to the basic or advanced formats. \nNote: This section only applies if rsyslog is the chosen method for client side logging. \nDo not apply this section if journald is used."
    },
    {
        "Title": "6.1.3.1 Ensure rsyslog is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The rsyslog software is recommended in environments where journald does not \nmeet operation requirements.",
        "Rationale": "The security enhancements of rsyslog such as connection-oriented (i.e. TCP) \ntransmission of logs, the option to log to database formats, and the encryption of log \ndata en route to a central logging server) justify installing and configuring the package.",
        "Impact": "",
        "Audit": "- IF - rsyslog is being used for logging on the system: \nRun the following command to verify rsyslog is installed: \n# dpkg-query -s rsyslog &>/dev/null && echo \"rsyslog is installed\" \nVerify the output matches: \nrsyslog is installed",
        "Remediation": "Run the following command to install rsyslog: \n# apt install rsyslog \nDefault Value: \nInstalled",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-3, AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1005, T1005.000, T1070, \nT1070.002 \nTA0005 \nM1029, M1057"
    },
    {
        "Title": "6.1.3.2 Ensure rsyslog service is enabled and active (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Once the rsyslog package is installed, ensure that the service is enabled.",
        "Rationale": "If the rsyslog service is not enabled to start on boot, the system will not capture \nlogging events.",
        "Impact": "",
        "Audit": "- IF - rsyslog is being used for logging on the system: \nRun the following command to verify rsyslog.service is enabled: \n# systemctl is-enabled rsyslog \n \nenabled \nRun the following command to verify rsyslog.service is active: \n# systemctl is-active rsyslog.service \n \nactive",
        "Remediation": "- IF - rsyslog is being used for logging on the system: \nRun the following commands to unmask, enable, and start rsyslog.service: \n# systemctl unmask rsyslog.service \n# systemctl enable rsyslog.service \n# systemctl start rsyslog.service",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-3, AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1211, \nT1562, T1562.001 \nTA0005 \nM1029"
    },
    {
        "Title": "6.1.3.3 Ensure journald is configured to send logs to rsyslog \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Data from systemd-journald may be stored in volatile memory or persisted locally on \nthe server. Utilities exist to accept remote export of systemd-journald logs, however, \nuse of the rsyslog service provides a consistent means of log collection and export.",
        "Rationale": "- IF - rsyslog is the preferred method for capturing logs, all logs of the system should \nbe sent to it for further processing. \nNote: This recommendation only applies if rsyslog is the chosen method for client \nside logging. Do not apply this recommendation if systemd-journald is used.",
        "Impact": "",
        "Audit": "- IF - rsyslog is the preferred method for capturing logs \nRun the following script to verify that logs are forwarded to rsyslog by setting \nForwardToSyslog to yes in the systemd-journald configuration: \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_systemd_config_file=\"systemd/journald.conf\" \n   a_parameters=(\"ForwardToSyslog=yes\") \n   f_config_file_parameter_chk() \n   { \n      l_used_parameter_setting=\"\" \n      while IFS= read -r l_file; do \n         l_file=\"$(tr -d '# ' <<< \"$l_file\")\" \n         l_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \n\"$l_file\" | tail -n 1)\" \n         [ -n \"$l_used_parameter_setting\" ] && break \n      done < <($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio \n'^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n      if [ -n \"$l_used_parameter_setting\" ]; then \n         while IFS=: read -r l_file_name l_file_parameter; do \n            while IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do \n               if grep -Pq -- \"$l_parameter_value\" <<< \"$l_file_parameter_value\"; then \n                  a_output+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    correctly set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\") \n               else \n                  a_output2+=(\"  - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\ \n                  \"    incorrectly set to: \\\"${l_file_parameter_value// /}\\\"\" \\ \n                  \"    in the file: \\\"$l_file_name\\\"\" \\ \n                  \"    Should be set to: \\\"$l_value_out\\\"\") \n               fi \n            done <<< \"$l_file_parameter\" \n         done <<< \"$l_used_parameter_setting\" \n      else \n         a_output2+=(\"  - Parameter: \\\"$l_parameter_name\\\" is not set in an included \nfile\" \\ \n         \"   *** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by \nload procedure ***\") \n      fi \n   } \n   for l_input_parameter in \"${a_parameters[@]}\"; do \n      while IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check \nparameters \n         l_parameter_name=\"${l_parameter_name// /}\"; \nl_parameter_value=\"${l_parameter_value// /}\" \n         l_value_out=\"${l_parameter_value//-/ through }\"; \nl_value_out=\"${l_value_out//|/ or }\" \n         l_value_out=\"$(tr -d '(){}' <<< \"$l_value_out\")\" \n         f_config_file_parameter_chk \n      done <<< \"$l_input_parameter\" \n   done \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit \nfailure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n} \nRun the following command to verify systemd-journald.service and \nrsyslog.service are loaded and active: \n \n# systemctl list-units --type service | grep -P -- '(journald|rsyslog)' \nOutput should be similar to: \nrsyslog.service                                       loaded active running \nSystem Logging Service \nsystemd-journald.service                              loaded active running \nJournal Service",
        "Remediation": "- IF - Journald is the preferred method for capturing logs, this section and \nRecommendation should be skipped and the \"Configure Journald\" section followed. \n- IF - rsyslog is the preferred method for capturing logs: \nSet the following parameter in the [Journal] section in \n/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending \nin .conf: \nForwardToSyslog=yes \nExample script to create systemd drop-in configuration file: \n#!/usr/bin/env bash \n \n{ \n   a_settings=(\"ForwardToSyslog=yes\") \n   [ ! -d /etc/systemd/journald.conf.d/ ] && mkdir \n/etc/systemd/journald.conf.d/ \n   if grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-\njournald.conf; then \n      printf '%s\\n' \"\" \"${a_settings[@]}\" >> /etc/systemd/journald.conf.d/60-\njournald.conf \n   else \n      printf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" >> \n/etc/systemd/journald.conf.d/60-journald.conf \n   fi \n} \nNote: If this setting appears in a canonically later file, or later in the same file, the \nsetting will be overwritten \nRun to following command to update the parameters in the service: \nRestart systemd-journald.service: \n# systemctl reload-or-restart systemd-journald.service",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, AU-2, AU-4, AU-12, MP-2 \n2. SYSTEMD-JOURNALD.SERVICE(8) \n3. JOURNALD.CONF(5) \n \nAdditional Information: \nAs noted in the systemd-journald man pages, systemd-journald logs may be \nexported to rsyslog either through the process mentioned here, or through a facility \nlike systemd-journald.service. There are trade-offs involved in each \nimplementation, where ForwardToSyslog will immediately capture all events (and \nforward to an external log server, if properly configured), but may not capture all boot-up \nactivities. Mechanisms such as systemd-journald.service, on the other hand, will \nrecord bootup events, but may delay sending the information to rsyslog, leading to the \npotential for log manipulation prior to export. Be aware of the limitations of all tools \nemployed to secure a system.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.9 Centralize Audit Logs \n \nCentralize, to the extent possible, audit log collection and retention across \nenterprise assets. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \nv7 \n6.5 Central Log Management \n \nEnsure that appropriate logs are being aggregated to a central log \nmanagement system for analysis and review. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.006, T1565 \nTA0040 \nM1029"
    },
    {
        "Title": "6.1.3.4 Ensure rsyslog log file creation mode is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "rsyslog will create logfiles that do not already exist on the system. \nThe global() configuration object umask, available in rsyslog 8.26.0+, sets the \nrsyslogd process\u2019 umask. If not specified, the system-provided default is used. The \nvalue given must always be a 4-digit octal number, with the initial digit being zero. \nThe legacy $umask parameter sets the rsyslogd process' umask. If not specified, the \nsystem-provided default is used. The value given must always be a 4-digit octal \nnumber, with the initial digit being zero. \nThe legacy $FileCreateMode parameter allows the setting of the mode with which \nrsyslogd creates new files. If not specified, the value 0644 is used. The value given \nmust always be a 4-digit octal number, with the initial digit being zero. Please note that \nthe actual permission depend on rsyslogd process umask. If in doubt, use $umask \n0000 right at the beginning of the configuration file to remove any restrictions. \nThe legacy $FileCreateMode may be specified multiple times. If so, it specifies the \ncreation mode for all selector lines that follow until the next $FileCreateMode \nparameter. Order of lines is vitally important.",
        "Rationale": "It is important to ensure that log files have the correct permissions to ensure that \nsensitive data is archived and protected.",
        "Impact": "",
        "Audit": "Run the following command \nRun the following script to verify $FileCreateMode to set to mode 0640 or more \nrestrictive: \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \n   l_include='\\$IncludeConfig' a_config_files=(\"rsyslog.conf\") \nl_parameter_name='\\$FileCreateMode' \n   f_parameter_chk() \n   { \n      l_perm_mask=\"0137\"; l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_perm_mask )) )\" \n      l_mode=\"$(awk '{print $2}' <<< \"$l_used_parameter_setting\" | xargs)\" \n      if [ $(( $l_mode & $l_perm_mask )) -gt 0 ]; then \n         a_output2+=(\"  - Parameter: \\\"${l_parameter_name//\\\\/}\\\" is incorrectly set \nto mode: \\\"$l_file_mode\\\"\" \\ \n         \"    in the file: \\\"$l_file\\\"\" \"    Should be mode: \\\"$l_maxperm\\\" or more \nrestrictive\") \n      else \n         a_output+=(\"  - Parameter: \\\"${l_parameter_name//\\\\/}\\\" is correctly set to \nmode: \\\"$l_file_mode\\\"\" \\ \n         \"    in the file: \\\"$l_file\\\"\" \"    Should be mode: \\\"$l_maxperm\\\" or more \nrestrictive\") \n      fi \n   } \n   while IFS= read -r l_file; do \n      l_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' <<< \n\"$l_file\")\" | tail -n 1)\" \n      [ -n \"$l_conf_loc\" ] && break \n   done < <($l_analyze_cmd cat-config \"${a_config_files[*]}\" | tac | grep -Pio \n'^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n   if [ -d \"$l_conf_loc\" ]; then \n      l_dir=\"$l_conf_loc\" l_ext=\"*\" \n   elif  grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' <<< \"$l_conf_loc\" || [ -f \"$(readlink -f \n\"$l_conf_loc\")\" ]; then \n      l_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\" \n   fi \n   while read -r -d $'\\0' l_file_name; do \n      [ -f \"$(readlink -f \"$l_file_name\")\" ] && a_config_files+=(\"$(readlink -f \n\"$l_file_name\")\") \n   done < <(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2>/dev/null) \n   while IFS= read -r l_file; do \n      l_file=\"$(tr -d '# ' <<< \"$l_file\")\" \n      l_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \"$l_file\" \n| tail -n 1)\" \n      [ -n \"$l_used_parameter_setting\" ] && break \n   done < <($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -Pio \n'^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n \n   if [ -n \"$l_used_parameter_setting\" ]; then \n      f_parameter_chk \n   else \n      a_output2+=(\"  - Parameter: \\\"${l_parameter_name//\\\\/}\\\" is not set in a \nconfiguration file\" \\ \n      \"   *** Note: \\\"${l_parameter_name//\\\\/}\\\" May be set in a file that's ignored \nby load procedure ***\") \n   fi \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit \nfailure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n}",
        "Remediation": "Edit either /etc/rsyslog.conf or a dedicated .conf file in /etc/rsyslog.d/ and set \n$FileCreateMode to 0640 or more restrictive: \n$FileCreateMode 0640 \nExample script to create a drop-in configuration file in the default include location: \n#!/usr/bin/env bash \n \n{ \n   [ ! -d \"/etc/rsyslog.d/\" ] && mkdir /etc/rsyslog.d/ \n   printf '%s\\n' \"\" \"\\$FileCreateMode 0640\" >> /etc/rsyslog.d/60-rsyslog.conf \n} \nReload the service: \n# systemctl reload-or-restart rsyslog",
        "References": "1. RSYSLOG.CONF(5) \n2. NIST SP 800-53 Rev. 5: AC-3, AC-6, MP-2 \n3. https://www.rsyslog.com/doc/",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply \ndata access control lists, also known as access permissions, to local and remote \nfile systems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.1.3.5 Ensure rsyslog logging is configured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The rsyslog and configuration files specifies rules for logging and which files are to be \nused to log certain classes of messages.",
        "Rationale": "A great deal of important security-related information is sent via rsyslog (e.g., \nsuccessful and failed su attempts, failed login attempts, root login attempts, etc.).",
        "Impact": "",
        "Audit": "Review the contents of /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files to \nensure appropriate logging is set. In addition, run the following command and verify that \nthe log files are logging information as expected: \nRun the following script and review the output from the rsyslog configuration to ensure \nappropriate logging is set an in accordance with local site policy. \n#!/usr/bin/env bash \n \n{ \n   l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_include='\\$IncludeConfig' a_config_files=(\"rsyslog.conf\") \n   while IFS= read -r l_file; do \n      l_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' \n<<< \"$l_file\")\" | tail -n 1)\" \n      [ -n \"$l_conf_loc\" ] && break \n   done < <($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -\nPio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n   if [ -d \"$l_conf_loc\" ]; then \n      l_dir=\"$l_conf_loc\" l_ext=\"*\" \n   elif  grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' <<< \"$l_conf_loc\" || [ -f \n\"$(readlink -f \"$l_conf_loc\")\" ]; then \n      l_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\" \n   fi \n   while read -r -d $'\\0' l_file_name; do \n      [ -f \"$(readlink -f \"$l_file_name\")\" ] && a_config_files+=(\"$(readlink \n-f \"$l_file_name\")\") \n   done < <(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2>/dev/null) \n   for l_logfile in \"${a_config_files[@]}\"; do \n      grep -PHs -- '^\\h*[^#\\n\\r\\/:]+\\/var\\/log\\/.*$' \"$l_logfile\" \n   done \n} \nExample output: \n \n/etc/rsyslog.d/60-rsyslog.conf:auth,authpriv.*           /var/log/secure \n/etc/rsyslog.d/60-rsyslog.conf:mail.*                    -/var/log/mail \n/etc/rsyslog.d/60-rsyslog.conf:mail.info                 -/var/log/mail.info \n/etc/rsyslog.d/60-rsyslog.conf:mail.warning              -/var/log/mail.warn \n/etc/rsyslog.d/60-rsyslog.conf:mail.err                  /var/log/mail.err \n/etc/rsyslog.d/60-rsyslog.conf:cron.*                    /var/log/cron \n/etc/rsyslog.d/60-rsyslog.conf:*.=warning;*.=err         -/var/log/warn \n/etc/rsyslog.d/60-rsyslog.conf:*.crit                    /var/log/warn \n/etc/rsyslog.d/60-rsyslog.conf:*.*;mail.none;news.none   -/var/log/messages \n/etc/rsyslog.d/60-rsyslog.conf:local0,local1.*           -\n/var/log/localmessages \n/etc/rsyslog.d/60-rsyslog.conf:local2,local3.*           -\n/var/log/localmessages \n/etc/rsyslog.d/60-rsyslog.conf:local4,local5.*           -\n/var/log/localmessages \n/etc/rsyslog.d/60-rsyslog.conf:local6,local7.*           -\n/var/log/localmessages \n/etc/rsyslog.d/50-default.conf:auth,authpriv.*           /var/log/auth.log \n#<- Will be ignored \n/etc/rsyslog.d/50-default.conf:*.*;auth,authpriv.none    -/var/log/syslog \n/etc/rsyslog.d/50-default.conf:kern.*                    -/var/log/kern.log \n/etc/rsyslog.d/50-default.conf:mail.*                    -/var/log/mail.log \n#<- Will be ignored \n/etc/rsyslog.d/50-default.conf:mail.err                  /var/log/mail.err \n#<- Will be ignored \nNote: \n\u2022 \nOutput is generated as <CONFIGURATION_FILE>:<PARAMETER> \n\u2022 \nFiles are listed in order of precedence. If the same parameter is listed multiple \ntimes, only the first occurrence will be used be the rsyslog daemon",
        "Remediation": "Edit the following lines in the configuration file(s) returned by the audit as appropriate for \nyour environment. \nNote: The below configuration is shown for example purposes only. Due care should be \ngiven to how the organization wishes to store log data. \n*.emerg                                  :omusrmsg:* \nauth,authpriv.*                          /var/log/secure \nmail.*                                  -/var/log/mail \nmail.info                               -/var/log/mail.info \nmail.warning                            -/var/log/mail.warn \nmail.err                                 /var/log/mail.err \ncron.*                                   /var/log/cron \n*.=warning;*.=err                       -/var/log/warn \n*.crit                                   /var/log/warn \n*.*;mail.none;news.none                 -/var/log/messages \nlocal0,local1.*                         -/var/log/localmessages \nlocal2,local3.*                         -/var/log/localmessages \nlocal4,local5.*                         -/var/log/localmessages \nlocal6,local7.*                         -/var/log/localmessages \nRun the following command to reload the rsyslogd configuration: \n \n# systemctl reload-or-restart rsyslog",
        "References": "1. See the rsyslog.conf(5) man page for more information. \n2. NIST SP 800-53 Rev. 5: AU-2, AU-7, AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002 \nTA0005 \nM1047"
    },
    {
        "Title": "6.1.3.6 Ensure rsyslog is configured to send logs to a remote log \nhost (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "rsyslog supports the ability to send log events it gathers to a remote log host or to \nreceive messages from remote hosts, thus enabling centralized log management.",
        "Rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker \ngains root access on the local system, they could tamper with or remove log data that is \nstored on the local system.",
        "Impact": "",
        "Audit": "Run the following script and review the output of rsyslog configuration. Verify that logs \nare sent to a central host used by your organization: \nbasic format \n#!/usr/bin/env bash \n \n{ \n   l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_include='\\$IncludeConfig' a_config_files=(\"rsyslog.conf\") \n   while IFS= read -r l_file; do \n      l_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' \n<<< \"$l_file\")\" | tail -n 1)\" \n      [ -n \"$l_conf_loc\" ] && break \n   done < <($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -\nPio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n   if [ -d \"$l_conf_loc\" ]; then \n      l_dir=\"$l_conf_loc\" l_ext=\"*\" \n   elif  grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' <<< \"$l_conf_loc\" || [ -f \n\"$(readlink -f \"$l_conf_loc\")\" ]; then \n      l_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\" \n   fi \n   while read -r -d $'\\0' l_file_name; do \n      [ -f \"$(readlink -f \"$l_file_name\")\" ] && a_config_files+=(\"$(readlink \n-f \"$l_file_name\")\") \n   done < <(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2>/dev/null) \n   for l_logfile in \"${a_config_files[@]}\"; do \n      grep -Hs -- \"^*.*[^I][^I]*@\" \"$l_logfile\" \n   done \n} \nOutput should include @@<FQDN or IP of remote loghost>: \nExample output: \n/etc/rsyslog.d/60-rsyslog.conf:*.* @@loghost.example.com \n- OR - \nRun the following script and review the output of rsyslog configuration. Verify that logs \nare sent to a central host used by your organization: \nadvanced format \n \n#!/usr/bin/env bash \n \n{ \n   l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_include='\\$IncludeConfig' a_config_files=(\"rsyslog.conf\") \n   while IFS= read -r l_file; do \n      l_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' \n<<< \"$l_file\")\" | tail -n 1)\" \n      [ -n \"$l_conf_loc\" ] && break \n   done < <($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -\nPio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n   if [ -d \"$l_conf_loc\" ]; then \n      l_dir=\"$l_conf_loc\" l_ext=\"*\" \n   elif  grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' <<< \"$l_conf_loc\" || [ -f \n\"$(readlink -f \"$l_conf_loc\")\" ]; then \n      l_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\" \n   fi \n   while read -r -d $'\\0' l_file_name; do \n      [ -f \"$(readlink -f \"$l_file_name\")\" ] && a_config_files+=(\"$(readlink \n-f \"$l_file_name\")\") \n   done < <(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2>/dev/null) \n   for l_logfile in \"${a_config_files[@]}\"; do \n      grep -PHsi -- \n'^\\s*([^#]+\\s+)?action\\(([^#]+\\s+)?\\btarget=\\\"?[^#\"]+\\\"?\\b' \"$l_logfile\" \n   done \n} \nOutput should include target=<FQDN or IP of remote loghost>: \nExample output: \n/etc/rsyslog.d/60-rsyslog.conf:*.* action(type=\"omfwd\" \ntarget=\"loghost.example.com\" port=\"514\" protocol=\"tcp\"",
        "Remediation": "Edit the rsyslog configuration and add the following line (where \nloghost.example.com is the name of your central log host). The target directive may \neither be a fully qualified domain name or an IP address. \nExample script to create a drop-in configuration file: \n#!/usr/bin/env bash \n \n{ \n   a_parameters=('*.* action(type=\"omfwd\" target=\"loghost.example.com\" \nport=\"514\" protocol=\"tcp\"' \\ \n   '           action.resumeRetryCount=\"100\"' '           \nqueue.type=\"LinkedList\" queue.size=\"1000\")') \n   [ ! -d \"/etc/rsyslog.d/\" ] && mkdir /etc/rsyslod.d/ \n   printf '%s\\n' \"\" \"${a_parameters[@]}\" >> /etc/rsyslog.d/60-rsyslog.conf \n} \nRun the following command to reload rsyslog.service: \n \n# systemctl reload-or-restart rsyslog.service",
        "References": "1. See the rsyslog.conf(5) man page for more information. \n2. NIST SP 800-53 Rev. 5: AU-6 \n3. https://www.rsyslog.com/doc/ \nAdditional Information: \nIn addition, see the rsyslog documentation for implementation details of TLS.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.006 \nTA0040 \nM1029"
    },
    {
        "Title": "6.1.3.7 Ensure rsyslog is not configured to receive logs from a \nremote client (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "rsyslog supports the ability to receive messages from remote hosts, thus acting as a \nlog server. Clients should not receive data from other hosts.",
        "Rationale": "If a client is configured to also receive data, thus turning it into a server, the client \nsystem is acting outside its operational boundary.",
        "Impact": "",
        "Audit": "Unless the system's primary function is to serve as a logfile server, run the following \nscript to review the rsyslog configuration and verify that the system is not configured to \naccept incoming logs. \nadvanced format \n#!/usr/bin/env bash \n \n{ \n   a_output2=() \n   l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_include='\\$IncludeConfig' a_config_files=(\"rsyslog.conf\") \n   while IFS= read -r l_file; do \n      l_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' \n<<< \"$l_file\")\" | tail -n 1)\" \n      [ -n \"$l_conf_loc\" ] && break \n   done < <($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -\nPio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b') \n   if [ -d \"$l_conf_loc\" ]; then \n      l_dir=\"$l_conf_loc\" l_ext=\"*\" \n   elif  grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' <<< \"$l_conf_loc\" || [ -f \n\"$(readlink -f \"$l_conf_loc\")\" ]; then \n      l_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\" \n   fi \n   while read -r -d $'\\0' l_file_name; do \n      [ -f \"$(readlink -f \"$l_file_name\")\" ] && a_config_files+=(\"$(readlink \n-f \"$l_file_name\")\") \n   done < <(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2>/dev/null) \n   for l_logfile in \"${a_config_files[@]}\"; do \n      l_fail=\"$(grep -Psi -- '^\\h*module\\(load=\\\"?imtcp\\\"?\\)' \"$l_logfile\")\" \n      [ -n \"$l_fail\" ] && a_output2+=(\"- Advanced format entry to accept \nincoming logs: \\\"$l_fail\\\"\" \"found in: \\\"$l_logfile\\\"\") \n      l_fail=\"$(grep -Psi -- '^\\h*input\\(type=\\\"?imtcp\\\"?\\b' \"$l_logfile\")\" \n      [ -n \"$l_fail\" ] && a_output2+=(\"- Advanced format entry to accept \nincoming logs: \\\"$l_fail\\\"\" \"found in: \\\"$l_logfile\\\"\") \n      l_fail=\"$(grep -Psi -- '^\\h*module\\(load=\\\"?imtcp\\\"?\\)' \"$l_logfile\")\" \n      [ -n \"$l_fail\" ] && a_output2+=(\"- Obsolete format entry to accept \nincoming logs: \\\"$l_fail\\\"\" \"found in: \\\"$l_logfile\\\"\") \n      l_fail=\"$(grep -Psi -- '^\\h*input\\(type=\\\"?imtcp\\\"?\\b' \"$l_logfile\")\" \n      [ -n \"$l_fail\" ] && a_output2+=(\"- Obsolete format entry to accept \nincoming logs: \\\"$l_fail\\\"\" \"found in: \\\"$l_logfile\\\"\") \n   done \n   if [ \"${#a_output2[@]}\" -le \"0\" ]; then \n      printf '%s\\n'  \"\" \"- Audit Result:\" \"  ** PASS **\" \" - No entries to \naccept incoming logs found\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n   fi \n}",
        "Remediation": "Unless the system's primary function is to serve as a logfile server , modify the files \nreturned by the Audit Procedure and remove the specific lines highlighted by the audit. \nVerify none of the following entries are present in the rsyslog configuration. \nadvanced format \nmodule(load=\"imtcp\") \ninput(type=\"imtcp\" port=\"514\") \ndeprecated legacy format \n$ModLoad imtcp \n$InputTCPServerRun \nReload the service: \n# systemctl reload-or-restart rsyslog",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-7, AU-12, CM-6 \n2. https://www.rsyslog.com/doc/index.html",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1562, \nT1562.006 \nTA0005, TA0040 \nM1029"
    },
    {
        "Title": "6.1.3.8 Ensure logrotate is configured (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The system includes the capability of rotating log files regularly to avoid filling up the \nsystem with logs or making the logs unmanageably large. The file \n/etc/logrotate.d/rsyslog is the configuration file used to rotate log files created by \nrsyslog.",
        "Rationale": "By keeping the log files smaller and more manageable, a system administrator can \neasily archive these files to another system and spend less time looking through \ninordinately large log files.",
        "Impact": "",
        "Audit": "Run the following script to analyze the logrotate configuration: \n#!/usr/bin/env bash \n \n{ \n   l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\" \nl_config_file=\"/etc/logrotate.conf\" \n   l_include=\"$(awk '$1~/^\\s*include$/{print$2}' \"$l_config_file\" \n2>/dev/null)\" \n   [ -d \"$l_include\" ] && l_include=\"$l_include/*\" \n   $l_analyze_cmd cat-config \"$l_config_file\" $l_include \n} \nNote: The last occurrence of a argument is the one used for the logrotate \nconfiguration",
        "Remediation": "Edit /etc/logrotate.conf, or the appropriate configuration file provided by the script \nin the Audit Procedure, as necessary to ensure logs are rotated according to site policy.",
        "References": "1. NIST SP 800-53 Rev. 5: AU-8 \n \nAdditional Information: \nIf no maxage setting is set for logrotate a situation can occur where logrotate is \ninterrupted and fails to delete rotated log files. It is recommended to set this to a value \ngreater than the longest any log file should exist on your system to ensure that any such \nlog file is removed but standard rotation settings are not overridden.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with \nthe enterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.4 Ensure adequate storage for logs \n \nEnsure that all systems that store logs have adequate storage space for the \nlogs generated. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002 \nTA0040 \nM1022 \n \n6.1.4 Configure Logfiles"
    },
    {
        "Title": "6.1.4.1 Ensure access to all logfiles has been configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Log files contain information from many services on the the local system, or in the event \nof a centralized log server, others systems logs as well. \nIn general log files are found in /var/log/, although application can be configured to \nstore logs elsewhere. Should your application store logs in another, ensure to run the \nsame test on that location.",
        "Rationale": "It is important that log files have the correct permissions to ensure that sensitive data is \nprotected and that only the appropriate users / groups have access to them.",
        "Impact": "",
        "Audit": "Run the following script to verify that files in /var/log/ have appropriate permissions \nand ownership: \n#!/usr/bin/env bash \n \n{ \n   a_output=(); a_output2=() \n   f_file_test_chk() \n   { \n      a_out2=()  \n      maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\" \n      [ $(( $l_mode & $perm_mask )) -gt 0 ] && \\ \n         a_out2+=(\"   o Mode: \\\"$l_mode\\\" should be \\\"$maxperm\\\" or more restrictive\") \n      [[ ! \"$l_user\" =~ $l_auser ]] && \\ \n         a_out2+=(\"   o Owned by: \\\"$l_user\\\" and should be owned by \\\"${l_auser//|/ or }\\\"\") \n      [[ ! \"$l_group\" =~ $l_agroup ]] && \\ \n         a_out2+=(\"   o Group owned by: \\\"$l_group\\\" and should be group owned by \n\\\"${l_agroup//|/ or }\\\"\") \n      [ \"${#a_out2[@]}\" -gt 0 ] && a_output2+=(\" - File: \\\"$l_fname\\\" is:\" \"${a_out2[@]}\") \n   } \n   while IFS= read -r -d $'\\0' l_file; do \n      while IFS=: read -r l_fname l_mode l_user l_group; do \n         if grep -Pq -- '\\/(apt)\\h*$' <<< \"$(dirname \"$l_fname\")\"; then \n            perm_mask='0133' l_auser=\"root\" l_agroup=\"(root|adm)\"; f_file_test_chk \n         else \n            case \"$(basename \"$l_fname\")\" in \n               lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README) \n                  perm_mask='0113' l_auser=\"root\" l_agroup=\"(root|utmp)\" \n                  f_file_test_chk ;; \n               cloud-init.log* | localmessages* | waagent.log*) \n                  perm_mask='0133' l_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\" \n                  file_test_chk ;; \n               secure{,*.*,.*,-*} | auth.log | syslog | messages) \n                  perm_mask='0137' l_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\" \n                  f_file_test_chk ;; \n               SSSD | sssd) \n                  perm_mask='0117' l_auser=\"(root|SSSD)\" l_agroup=\"(root|SSSD)\" \n                  f_file_test_chk ;; \n               gdm | gdm3) \n                  perm_mask='0117' l_auser=\"root\" l_agroup=\"(root|gdm|gdm3)\" \n                  f_file_test_chk ;; \n               *.journal | *.journal~) \n                  perm_mask='0137' l_auser=\"root\" l_agroup=\"(root|systemd-journal)\" \n                  f_file_test_chk ;; \n               *) \n                  perm_mask='0137' l_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\" \n                  if [ \"$l_user\" = \"root\" ] || ! grep -Pq -- \"^\\h*$(awk -F: '$1==\"'\"$l_user\"'\" \n{print $7}' /etc/passwd)\\b\" /etc/shells; then \n                     ! grep -Pq -- \"$l_auser\" <<< \"$l_user\" && l_auser=\"(root|syslog|$l_user)\" \n                     ! grep -Pq -- \"$l_agroup\" <<< \"$l_group\" && l_agroup=\"(root|adm|$l_group)\" \n                  fi \n                  f_file_test_chk ;; \n            esac \n         fi \n      done < <(stat -Lc '%n:%#a:%U:%G' \"$l_file\") \n   done < <(find -L /var/log -type f \\( -perm /0137 -o ! -user root -o ! -group root \\) -print0) \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      a_output+=(\"  - All files in \\\"/var/log/\\\" have appropriate permissions and ownership\") \n      printf '\\n%s' \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '\\n%s' \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for audit failure:\" \n\"${a_output2[@]}\" \"\" \n   fi \n}",
        "Remediation": "Run the following script to update permissions and ownership on files in /var/log. \nAlthough the script is not destructive, ensure that the output of the audit procedure is \ncaptured in the event that the remediation causes issues. \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=() \n   f_file_test_fix() \n   { \n      a_out2=() \n      maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\" \n      if [ $(( $l_mode & $perm_mask )) -gt 0 ]; then \n         a_out2+=(\"   o Mode: \\\"$l_mode\\\" should be \\\"$maxperm\\\" or more \nrestrictive\" \"     x Removing excess permissions\") \n         chmod \"$l_rperms\" \"$l_fname\" \n      fi \n      if [[ ! \"$l_user\" =~ $l_auser ]]; then \n         a_out2+=(\"   o Owned by: \\\"$l_user\\\" and should be owned by \n\\\"${l_auser//|/ or }\\\"\" \"     x Changing ownership to: \\\"$l_fix_account\\\"\") \n         chown \"$l_fix_account\" \"$l_fname\" \n      fi \n      if [[ ! \"$l_group\" =~ $l_agroup ]]; then \n         a_out2+=(\"   o Group owned by: \\\"$l_group\\\" and should be group \nowned by \\\"${l_agroup//|/ or }\\\"\" \"     x Changing group ownership to: \n\\\"$l_fix_account\\\"\") \n         chgrp \"$l_fix_account\" \"$l_fname\" \n      fi \n      [ \"${#a_out2[@]}\" -gt 0 ] && a_output2+=(\" - File: \\\"$l_fname\\\" is:\" \n\"${a_out2[@]}\") \n   } \n   l_fix_account='root' \n   while IFS= read -r -d $'\\0' l_file; do \n      while IFS=: read -r l_fname l_mode l_user l_group; do \n         if grep -Pq -- '\\/(apt)\\h*$' <<< \"$(dirname \"$l_fname\")\"; then \n            perm_mask='0133' l_rperms=\"u-x,go-wx\" l_auser=\"root\" \nl_agroup=\"(root|adm)\"; f_file_test_fix \n         else \n            case \"$(basename \"$l_fname\")\" in \n               lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | \nbtmp-* | README) \n                  perm_mask='0113' l_rperms=\"ug-x,o-wx\" l_auser=\"root\" \nl_agroup=\"(root|utmp)\" \n                  f_file_test_fix ;; \n               cloud-init.log* | localmessages* | waagent.log*) \n                  perm_mask='0133' l_rperms=\"u-x,go-wx\" \nl_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\" \n                  file_test_fix ;; \n               secure | auth.log | syslog | messages) \n                  perm_mask='0137' l_rperms=\"u-x,g-wx,o-rwx\" \nl_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\" \n                  f_file_test_fix ;; \n               SSSD | sssd) \n                  perm_mask='0117' l_rperms=\"ug-x,o-rwx\" \nl_auser=\"(root|SSSD)\" l_agroup=\"(root|SSSD)\" \n                  f_file_test_fix ;; \n               gdm | gdm3) \n                  perm_mask='0117' l_rperms=\"ug-x,o-rwx\" l_auser=\"root\" \nl_agroup=\"(root|gdm|gdm3)\" \n                  f_file_test_fix ;; \n               *.journal | *.journal~) \n \n                  perm_mask='0137' l_rperms=\"u-x,g-wx,o-rwx\" l_auser=\"root\" \nl_agroup=\"(root|systemd-journal)\"        \n                  f_file_test_fix ;; \n               *) \n                  perm_mask='0137' l_rperms=\"u-x,g-wx,o-rwx\" \nl_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\" \n                  if [ \"$l_user\" = \"root\" ] || ! grep -Pq -- \"^\\h*$(awk -F: \n'$1==\"'\"$l_user\"'\" {print $7}' /etc/passwd)\\b\" /etc/shells; then \n                     ! grep -Pq -- \"$l_auser\" <<< \"$l_user\" && \nl_auser=\"(root|syslog|$l_user)\" \n                     ! grep -Pq -- \"$l_agroup\" <<< \"$l_group\" && \nl_agroup=\"(root|adm|$l_group)\" \n                  fi \n                  f_file_test_fix ;; \n            esac \n         fi \n      done < <(stat -Lc '%n:%#a:%U:%G' \"$l_file\") \n   done < <(find -L /var/log -type f \\( -perm /0137 -o ! -user root -o ! -\ngroup root \\) -print0) \n   if [ \"${#a_output2[@]}\" -le 0 ]; then # If all files passed, then we \nreport no changes \n      a_output+=(\"  - All files in \\\"/var/log/\\\" have appropriate permissions \nand ownership\") \n      printf '\\n%s' \"- All files in \\\"/var/log/\\\" have appropriate \npermissions and ownership\" \"  o No changes required\" \"\" \n   else \n      printf '\\n%s' \"${a_output2[@]}\" \"\" \n   fi \n} \nNote: You may also need to change the configuration for your logging software or \nservices for any logs that had incorrect permissions. \nIf there are services that log to other locations, ensure that those log files have the \nappropriate permissions.",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1028"
    },
    {
        "Title": "6.2 System Auditing \nThe Linux Auditing System operates on a set of rules that collects certain types of \nsystem activity to facilitate incident investigation, detect unauthorized access or \nmodification of data. By default events will be logged to /var/log/audit/audit.log, \nwhich can be configured in /etc/audit/auditd.conf. \nThe following types of audit rules can be specified: \n\u2022 \nControl rules: Configuration of the auditing system. \n\u2022 \nFile system rules: Allow the auditing of access to a particular file or a directory. \nAlso known as file watches. \n\u2022 \nSystem call rules: Allow logging of system calls that any specified program \nmakes.",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "6.2.1.1 Ensure auditd packages are installed (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "auditd is the userspace component to the Linux Auditing System. It's responsible for \nwriting audit records to the disk",
        "Rationale": "The capturing of system events provides system administrators with information to allow \nthem to determine if unauthorized access to their system is occurring.",
        "Impact": "",
        "Audit": "Run the following command and verify auditd is installed: \n# dpkg-query -s auditd &>/dev/null && echo auditd is installed \n \nauditd is installed \nRun the following command to verify audispd-plugins is installed: \n# dpkg-query -s audispd-plugins &>/dev/null && echo audispd-plugins is \ninstalled \n \naudispd-plugins is installed",
        "Remediation": "Run the following command to Install auditd and audispd-plugins \n# apt install auditd audispd-plugins",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-3, AU-12, SI-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.001 \nTA0005 \nM1018"
    },
    {
        "Title": "6.2.1.2 Ensure auditd service is enabled and active (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Turn on the auditd daemon to record system events.",
        "Rationale": "The capturing of system events provides system administrators with information to allow \nthem to determine if unauthorized access to their system is occurring.",
        "Impact": "",
        "Audit": "Run the following command to verify auditd is enabled: \n# systemctl is-enabled auditd | grep '^enabled' \n \nenabled \nVerify result is \"enabled\". \nRun the following command to verify auditd is active: \n# systemctl is-active auditd | grep '^active' \n \nactive \nVerify result is active",
        "Remediation": "Run the following commands to unmask, enable and start auditd: \n# systemctl unmask auditd \n# systemctl enable auditd \n# systemctl start auditd",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-12, SI-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.001 \nTA0005 \nM1028"
    },
    {
        "Title": "6.2.1.3 Ensure auditing for processes that start prior to auditd is \nenabled (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Configure grub2 so that processes that are capable of being audited can be audited \neven if they start up prior to auditd startup.",
        "Rationale": "Audit events need to be captured on processes that start up prior to auditd , so that \npotential malicious activity cannot go undetected.",
        "Impact": "",
        "Audit": "Run the following command: \n# find /boot -type f -name 'grub.cfg' -exec grep -Ph -- '^\\h*linux' {} + | \ngrep -v 'audit=1' \nNothing should be returned.",
        "Remediation": "Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX: \nExample: \nGRUB_CMDLINE_LINUX=\"audit=1\" \nRun the following command to update the grub2 configuration: \n# update-grub",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-3, AU-12 \nAdditional Information: \nThis recommendation is designed around the grub2 bootloader, if another bootloader is \nin use in your environment enact equivalent settings.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.001 \nTA0005 \nM1047"
    },
    {
        "Title": "6.2.1.4 Ensure audit_backlog_limit is sufficient (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "In the kernel-level audit subsystem, a socket buffer queue is used to hold audit events. \nWhenever a new audit event is received, it is logged and prepared to be added to this \nqueue. \nThe kernel boot parameter audit_backlog_limit=N, with N representing the amount of \nmessages, will ensure that a queue cannot grow beyond a certain size. If an audit event \nis logged which would grow the queue beyond this limit, then a failure occurs and is \nhandled according to the system configuration",
        "Rationale": "If an audit event is logged which would grow the queue beyond the \naudit_backlog_limit, then a failure occurs, auditd records will be lost, and potential \nmalicious activity could go undetected.",
        "Impact": "",
        "Audit": "Run the following command and verify the audit_backlog_limit= parameter is set: \n# find /boot -type f -name 'grub.cfg' -exec grep -Ph -- '^\\h*linux' {} + | \ngrep -Pv 'audit_backlog_limit=\\d+\\b' \nNothing should be returned.",
        "Remediation": "Edit /etc/default/grub and add audit_backlog_limit=N to \nGRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger. \nExample: \nGRUB_CMDLINE_LINUX=\"audit_backlog_limit=8192\" \nRun the following command to update the grub2 configuration: \n# update-grub \nDefault Value: \nif audit_backlog_limit is not set, the system defaults to audit_backlog_limit=64",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-3, AU-12",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event \nsource, date, user, timestamp, source addresses, destination addresses, and \nother useful elements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.001 \nTA0005 \nM1028"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "6.2.2.1 Ensure audit log storage size is configured (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Configure the maximum size of the audit log file. Once the log reaches the maximum \nsize, it will be rotated and a new log file will be started.",
        "Rationale": "It is important that an appropriate size is determined for log files so that they do not \nimpact the system and audit data is not lost.",
        "Impact": "",
        "Audit": "Run the following command and ensure output is in compliance with site policy: \n# grep -Po -- '^\\h*max_log_file\\h*=\\h*\\d+\\b' /etc/audit/auditd.conf \n \nmax_log_file = <MB>",
        "Remediation": "Set the following parameter in /etc/audit/auditd.conf in accordance with site \npolicy: \nmax_log_file = <MB> \nDefault Value: \nmax_log_file = 8",
        "References": "1. NIST SP 800-53 Rev. 5: AU-8 \nAdditional Information: \nThe max_log_file parameter is measured in megabytes. \nOther methods of log rotation may be appropriate based on site policy. One example is \ntime-based rotation strategies which don't have native support in auditd configurations. \nManual audit of custom configurations should be evaluated for effectiveness and \ncompleteness.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with \nthe enterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.4 Ensure adequate storage for logs \n \nEnsure that all systems that store logs have adequate storage space for the \nlogs generated. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0040 \nM1053"
    },
    {
        "Title": "6.2.2.2 Ensure audit logs are not automatically deleted \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The max_log_file_action setting determines how to handle the audit log file reaching \nthe max file size. A value of keep_logs will rotate the logs but never delete old logs.",
        "Rationale": "In high security contexts, the benefits of maintaining a long audit history exceed the cost \nof storing the audit history.",
        "Impact": "",
        "Audit": "Run the following command and verify output matches: \n# grep max_log_file_action /etc/audit/auditd.conf \n \nmax_log_file_action = keep_logs",
        "Remediation": "Set the following parameter in /etc/audit/auditd.conf: \nmax_log_file_action = keep_logs",
        "References": "1. NIST SP 800-53 Rev. 5: AU-8",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with \nthe enterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.4 Ensure adequate storage for logs \n \nEnsure that all systems that store logs have adequate storage space for the \nlogs generated. \n \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005 \nM1053"
    },
    {
        "Title": "6.2.2.3 Ensure system is disabled when audit logs are full \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The auditd daemon can be configured to halt the system or put the system in single \nuser mode, if no free space is available or an error is detected on the partition that holds \nthe audit log files. \nThe disk_full_action parameter tells the system what action to take when no free \nspace is available on the partition that holds the audit log files. Valid values are ignore, \nsyslog, rotate, exec, suspend, single, and halt. \n\u2022 \nignore, the audit daemon will issue a syslog message but no other action is \ntaken \n\u2022 \nsyslog, the audit daemon will issue a warning to syslog \n\u2022 \nrotate, the audit daemon will rotate logs, losing the oldest to free up space \n\u2022 \nexec, /path-to-script will execute the script. You cannot pass parameters to the \nscript. The script is also responsible for telling the auditd daemon to resume \nlogging once its completed its action \n\u2022 \nsuspend, the audit daemon will stop writing records to the disk \n\u2022 \nsingle, the audit daemon will put the computer system in single user mode \n\u2022 \nhalt, the audit daemon will shut down the system \nThe disk_error_action parameter tells the system what action to take when an error \nis detected on the partition that holds the audit log files. Valid values are ignore, \nsyslog, exec, suspend, single, and halt. \n\u2022 \nignore, the audit daemon will not take any action \n\u2022 \nsyslog, the audit daemon will issue no more than 5 consecutive warnings to \nsyslog \n\u2022 \nexec, /path-to-script will execute the script. You cannot pass parameters to the \nscript \n\u2022 \nsuspend, the audit daemon will stop writing records to the disk \n\u2022 \nsingle, the audit daemon will put the computer system in single user mode \n\u2022 \nhalt, the audit daemon will shut down the system",
        "Rationale": "In high security contexts, the risk of detecting unauthorized access or nonrepudiation \nexceeds the benefit of the system's availability. \n \nImpact: \ndisk_full_action parameter: \n\u2022 \nSet to halt - the auditd daemon will shutdown the system when the disk \npartition containing the audit logs becomes full. \n\u2022 \nSet to single - the auditd daemon will put the computer system in single user \nmode when the disk partition containing the audit logs becomes full. \ndisk_error_action parameter: \n\u2022 \nSet to halt - the auditd daemon will shutdown the system when an error is \ndetected on the partition that holds the audit log files. \n\u2022 \nSet to single - the auditd daemon will put the computer system in single user \nmode when an error is detected on the partition that holds the audit log files. \n\u2022 \nSet to syslog - the auditd daemon will issue no more than 5 consecutive \nwarnings to syslog when an error is detected on the partition that holds the audit \nlog files.",
        "Impact": "",
        "Audit": "Run the following command and verify the disk_full_action is set to either halt or \nsingle: \n# grep -Pi -- '^\\h*disk_full_action\\h*=\\h*(halt|single)\\b' \n/etc/audit/auditd.conf \n \ndisk_full_action = <halt|single> \nRun the following command and verify the disk_error_action is set to syslog, \nsingle, or halt: \n# grep -Pi -- '^\\h*disk_error_action\\h*=\\h*(syslog|single|halt)\\b' \n/etc/audit/auditd.conf \n \ndisk_error_action = <syslog|single|halt>",
        "Remediation": "Set one of the following parameters in /etc/audit/auditd.conf depending on your \nlocal security policies. \ndisk_full_action = <halt|single> \ndisk_error_action = <syslog|single|halt> \nExample: \ndisk_full_action = halt \ndisk_error_action = halt",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-8, AU-12, SI-5 \n2. AUDITD.CONF(5)",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with \nthe enterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005 \nM1028"
    },
    {
        "Title": "6.2.2.4 Ensure system warns when audit logs are low on space \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The auditd daemon can be configured to halt the system, put the system in single user \nmode or send a warning message, if the partition that holds the audit log files is low on \nspace. \nThe space_left_action parameter tells the system what action to take when the \nsystem has detected that it is starting to get low on disk space. Valid values are ignore, \nsyslog, rotate, email, exec, suspend, single, and halt. \n\u2022 \nignore, the audit daemon does nothing \n\u2022 \nsyslog, the audit daemon will issue a warning to syslog \n\u2022 \nrotate, the audit daemon will rotate logs, losing the oldest to free up space \n\u2022 \nemail, the audit daemon will send a warning to the email account specified in \naction_mail_acct as well as sending the message to syslog \n\u2022 \nexec, /path-to-script will execute the script. You cannot pass parameters to the \nscript. The script is also responsible for telling the auditd daemon to resume \nlogging once its completed its action \n\u2022 \nsuspend, the audit daemon will stop writing records to the disk \n\u2022 \nsingle, the audit daemon will put the computer system in single user mode \n\u2022 \nhalt, the audit daemon will shut down the system \nThe admin_space_left_action parameter tells the system what action to take when \nthe system has detected that it is low on disk space. Valid values are ignore, syslog, \nrotate, email, exec, suspend, single, and halt. \n\u2022 \nignore, the audit daemon does nothing \n\u2022 \nsyslog, the audit daemon will issue a warning to syslog \n\u2022 \nrotate, the audit daemon will rotate logs, losing the oldest to free up space \n\u2022 \nemail, the audit daemon will send a warning to the email account specified in \naction_mail_acct as well as sending the message to syslog \n\u2022 \nexec, /path-to-script will execute the script. You cannot pass parameters to the \nscript. The script is also responsible for telling the auditd daemon to resume \nlogging once its completed its action \n\u2022 \nsuspend, the audit daemon will stop writing records to the disk \n\u2022 \nsingle, the audit daemon will put the computer system in single user mode \n\u2022 \nhalt, the audit daemon will shut down the system",
        "Rationale": "In high security contexts, the risk of detecting unauthorized access or nonrepudiation \nexceeds the benefit of the system's availability. \nImpact: \nIf the admin_space_left_action is set to single the audit daemon will put the \ncomputer system in single user mode.",
        "Impact": "",
        "Audit": "Run the following command and verify the space_left_action is set to email, exec, \nsingle, or halt: \n# grep -P -- '^\\h*space_left_action\\h*=\\h*(email|exec|single|halt)\\b' \n/etc/audit/auditd.conf \nVerify the output is email, exec, single, or halt \nExample output \nspace_left_action = email \nRun the following command and verify the admin_space_left_action is set to single \n- OR - halt: \n# grep -P -- '^\\h*admin_space_left_action\\h*=\\h*(single|halt)\\b' \n/etc/audit/auditd.conf \nVerify the output is single or halt \nExample output: \nadmin_space_left_action = single \nNote: A Mail Transfer Agent (MTA) must be installed and configured properly to set \nspace_left_action = email",
        "Remediation": "Set the space_left_action parameter in /etc/audit/auditd.conf to email, exec, \nsingle, or halt: \nExample: \nspace_left_action = email \nSet the admin_space_left_action parameter in /etc/audit/auditd.conf to \nsingle or halt: \nExample: \nadmin_space_left_action = single \nNote: A Mail Transfer Agent (MTA) must be installed and configured properly to set \nspace_left_action = email",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-8, AU-12, SI-5 \n2. AUDITD.CONF(5)",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with \nthe enterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005"
    },
    {
        "Title": "6.2.3 Configure auditd Rules \nThe Audit system operates on a set of rules that define what is to be captured in the log \nfiles. \nThe following types of Audit rules can be specified: \n\u2022 \nControl rules: Allow the Audit system's behavior and some of its configuration to \nbe modified. \n\u2022 \nFile system rules: Allow the auditing of access to a particular file or a directory. \n(Also known as file watches) \n\u2022 \nSystem call rules: Allow logging of system calls that any specified program \nmakes.",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor scope changes for system administrators. If the system has been properly \nconfigured to force system administrators to log in as themselves first and then use the \nsudo command to execute privileged commands, it is possible to monitor changes in \nscope. The file /etc/sudoers, or files in /etc/sudoers.d, will be written to when the \nfile(s) or related attributes have changed. The audit records will be tagged with the \nidentifier \"scope\".",
        "Rationale": "Changes in the /etc/sudoers and /etc/sudoers.d files can indicate that an \nunauthorized change has been made to the scope of system administrator activity.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# awk '/^ *-w/ \\ \n&&/\\/etc\\/sudoers/ \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \nVerify the output matches: \n-w /etc/sudoers -p wa -k scope \n-w /etc/sudoers.d -p wa -k scope \nRunning configuration \nRun the following command to check loaded rules: \n# auditctl -l | awk '/^ *-w/ \\ \n&&/\\/etc\\/sudoers/ \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \nVerify the output matches: \n-w /etc/sudoers -p wa -k scope \n-w /etc/sudoers.d -p wa -k scope",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor scope changes for system administrators. \nExample: \n# printf \" \n-w /etc/sudoers -p wa -k scope \n-w /etc/sudoers.d -p wa -k scope \n\" >> /etc/audit/rules.d/50-scope.rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3 \n \n \n \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n4.8 Log and Alert on Changes to Administrative Group \nMembership \n \nConfigure systems to issue a log entry and alert when an account is added to \nor removed from any group assigned administrative privileges. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0004 \nM1047"
    },
    {
        "Title": "6.2.3.2 Ensure actions as another user are always logged \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "sudo provides users with temporary elevated privileges to perform operations, either as \nthe superuser or another user.",
        "Rationale": "Creating an audit log of users with temporary elevated privileges and the operation(s) \nthey performed is essential to reporting. Administrators will want to correlate the events \nwritten to the audit trail with the records written to sudo's logfile to verify if unauthorized \ncommands have been executed.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# awk '/^ *-a *always,exit/ \\ \n&&/ -F *arch=b(32|64)/ \\ \n&&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n&&(/ -C *euid!=uid/||/ -C *uid!=euid/) \\ \n&&/ -S *execve/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \nVerify the output matches: \n-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k \nuser_emulation  \n-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k \nuser_emulation \nRunning configuration \nRun the following command to check loaded rules: \n# auditctl -l | awk '/^ *-a *always,exit/ \\ \n&&/ -F *arch=b(32|64)/ \\ \n&&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n&&(/ -C *euid!=uid/||/ -C *uid!=euid/) \\ \n&&/ -S *execve/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \nVerify the output matches: \n-a always,exit -F arch=b64 -S execve -C uid!=euid -F auid!=-1 -F \nkey=user_emulation \n-a always,exit -F arch=b32 -S execve -C uid!=euid -F auid!=-1 -F \nkey=user_emulation",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor elevated privileges. \nExample: \n# printf \" \n-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k \nuser_emulation  \n-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k \nuser_emulation \n\" >> /etc/audit/rules.d/50-user_emulation.rules \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n4.9 Log and Alert on Unsuccessful Administrative Account \nLogin \n \nConfigure systems to issue a log entry and alert on unsuccessful logins to an \nadministrative account. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0004 \nM1047"
    },
    {
        "Title": "6.2.3.3 Ensure events that modify the sudo log file are collected \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor the sudo log file. If the system has been properly configured to disable the use \nof the su command and force all administrators to have to log in first and then use sudo \nto execute privileged commands, then all administrator commands will be logged to \n/var/log/sudo.log . Any time a command is executed, an audit event will be \ntriggered as the /var/log/sudo.log file will be opened for write and the executed \nadministration command will be written to the log.",
        "Rationale": "Changes in /var/log/sudo.log indicate that an administrator has executed a \ncommand or the log file itself has been tampered with. Administrators will want to \ncorrelate the events written to the audit trail with the records written to \n/var/log/sudo.log to verify if unauthorized commands have been executed.",
        "Impact": "",
        "Audit": "Note: This recommendation requires that the sudo logfile is configured. See guidance \nprovided in the recommendation \"Ensure sudo log file exists\" \nOn disk configuration \nRun the following command to check the on disk rules: \n# { \n SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? \n.*//' -e 's/\"//g' -e 's|/|\\\\/|g') \n [ -n \"${SUDO_LOG_FILE}\" ] && awk \"/^ *-w/ \\ \n &&/\"${SUDO_LOG_FILE}\"/ \\ \n &&/ +-p *wa/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\ \n || printf \"ERROR: Variable 'SUDO_LOG_FILE' is unset.\\n\" \n} \nVerify output of matches: \n-w /var/log/sudo.log -p wa -k sudo_log_file \nRunning configuration \nRun the following command to check loaded rules: \n# { \n SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? \n.*//' -e 's/\"//g' -e 's|/|\\\\/|g') \n [ -n \"${SUDO_LOG_FILE}\" ] && auditctl -l | awk \"/^ *-w/ \\ \n &&/\"${SUDO_LOG_FILE}\"/ \\ \n &&/ +-p *wa/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n || printf \"ERROR: Variable 'SUDO_LOG_FILE' is unset.\\n\" \n} \nVerify output matches: \n-w /var/log/sudo.log -p wa -k sudo_log_file",
        "Remediation": "Note: This recommendation requires that the sudo logfile is configured. See guidance \nprovided in the recommendation \"Ensure sudo log file exists\" \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor events that modify the sudo log file. \nExample: \n# { \nSUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? \n.*//' -e 's/\"//g') \n[ -n \"${SUDO_LOG_FILE}\" ] && printf \" \n-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file \n\" >> /etc/audit/rules.d/50-sudo.rules || printf \"ERROR: Variable \n'SUDO_LOG_FILE' is unset.\\n\" \n} \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n4.9 Log and Alert on Unsuccessful Administrative Account \nLogin \n \nConfigure systems to issue a log entry and alert on unsuccessful logins to an \nadministrative account. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0004"
    },
    {
        "Title": "6.2.3.4 Ensure events that modify date and time information are \ncollected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Capture events where the system date and/or time has been modified. The parameters \nin this section are set to determine if the; \n\u2022 \nadjtimex - tune kernel clock \n\u2022 \nsettimeofday - set time using timeval and timezone structures \n\u2022 \nstime - using seconds since 1/1/1970 \n\u2022 \nclock_settime - allows for the setting of several internal clocks and timers \nsystem calls have been executed. Further, ensure to write an audit record to the \nconfigured audit log file upon exit, tagging the records with a unique identifier such as \n\"time-change\".",
        "Rationale": "Unexpected changes in system date and/or time could be a sign of malicious activity on \nthe system.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# { \n awk '/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&/ -S/ \\ \n &&(/adjtimex/ \\ \n   ||/settimeofday/ \\ \n   ||/clock_settime/ ) \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \n \n awk '/^ *-w/ \\ \n &&/\\/etc\\/localtime/ \\ \n &&/ +-p *wa/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \n} \nVerify output of matches: \n-a always,exit -F arch=b64 -S adjtimex,settimeofday -k time-change \n-a always,exit -F arch=b32 -S adjtimex,settimeofday -k time-change \n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -k time-change \n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -k time-change \n-w /etc/localtime -p wa -k time-change \nRunning configuration \nRun the following command to check loaded rules: \n# { \n auditctl -l | awk '/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&/ -S/ \\ \n &&(/adjtimex/ \\ \n   ||/settimeofday/ \\ \n   ||/clock_settime/ ) \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \n \n auditctl -l | awk '/^ *-w/ \\ \n &&/\\/etc\\/localtime/ \\ \n &&/ +-p *wa/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \n} \nVerify the output includes: \n \n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=time-change \n-a always,exit -F arch=b32 -S settimeofday,adjtimex -F key=time-change \n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change \n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change \n-w /etc/localtime -p wa -k time-change",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor events that modify date and time information. \nExample: \n# printf \" \n-a always,exit -F arch=b64 -S adjtimex,settimeofday -k time-change \n-a always,exit -F arch=b32 -S adjtimex,settimeofday -k time-change \n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -k time-change \n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -k time-change \n-w /etc/localtime -p wa -k time-change \n\" >> /etc/audit/rules.d/50-time-change.rules \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3, CM-6 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n5.5 Implement Automated Configuration Monitoring \nSystems \n \nUtilize a Security Content Automation Protocol (SCAP) compliant configuration \nmonitoring system to verify all security configuration elements, catalog approved \nexceptions, and alert when unauthorized changes occur. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005 \nM1047"
    },
    {
        "Title": "6.2.3.5 Ensure events that modify the system's network \nenvironment are collected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Record changes to network environment files or system calls. The below parameters \nmonitors the following system calls, and write an audit event on system call exit: \n\u2022 \nsethostname - set the systems host name \n\u2022 \nsetdomainname - set the systems domain name \nThe files being monitored are: \n\u2022 \n/etc/issue and /etc/issue.net - messages displayed pre-login \n\u2022 \n/etc/hosts - file containing host names and associated IP addresses \n\u2022 \n/etc/networks - symbolic names for networks \n\u2022 \n/etc/network/ - directory containing network interface scripts and \nconfigurations files \n\u2022 \n/etc/netplan/ - central location for YAML networking configurations files",
        "Rationale": "Monitoring system events that change network environments, such as sethostname \nand setdomainname, helps identify unauthorized alterations to host and domain names, \nwhich could compromise security settings reliant on these names. Changes to \n/etc/hosts can signal unauthorized attempts to alter machine associations with IP \naddresses, potentially redirecting users and processes to unintended destinations. \nSurveillance of /etc/issue and /etc/issue.net is crucial to detect intruders inserting \nfalse information to deceive users. Monitoring /etc/network/ reveals modifications to \nnetwork interfaces or scripts that may jeopardize system availability or security. \nAdditionally, tracking changes in the /etc/netplan/ directory ensures swift detection \nof unauthorized adjustments to network configurations. All audit records should be \nappropriately tagged for relevance",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following commands to check the on disk rules: \n# awk '/^ *-a *always,exit/ \\ \n&&/ -F *arch=b(32|64)/ \\ \n&&/ -S/ \\ \n&&(/sethostname/ \\ \n  ||/setdomainname/) \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \n \n# awk '/^ *-w/ \\ \n&&(/\\/etc\\/issue/ \\ \n  ||/\\/etc\\/issue.net/ \\ \n  ||/\\/etc\\/hosts/ \\ \n  ||/\\/etc\\/network/ \\ \n  ||/\\/etc\\/netplan/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \nVerify the output matches: \n-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale \n-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale \n-w /etc/issue -p wa -k system-locale \n-w /etc/issue.net -p wa -k system-locale \n-w /etc/hosts -p wa -k system-locale \n-w /etc/networks -p wa -k system-locale \n-w /etc/network -p wa -k system-locale \n-w /etc/netplan -p wa -k system-locale \nRunning configuration \nRun the following command to check loaded rules: \n# auditctl -l | awk '/^ *-a *always,exit/ \\ \n&&/ -F *arch=b(32|64)/ \\ \n&&/ -S/ \\ \n&&(/sethostname/ \\ \n  ||/setdomainname/) \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \n \n# auditctl -l | awk '/^ *-w/ \\ \n&&(/\\/etc\\/issue/ \\ \n  ||/\\/etc\\/issue.net/ \\ \n  ||/\\/etc\\/hosts/ \\ \n  ||/\\/etc\\/network/ \\ \n  ||/\\/etc\\/netplan/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \nVerify the output includes: \n \n-a always,exit -F arch=b64 -S sethostname,setdomainname -F key=system-locale \n-a always,exit -F arch=b32 -S sethostname,setdomainname -F key=system-locale \n-w /etc/issue -p wa -k system-locale \n-w /etc/issue.net -p wa -k system-locale \n-w /etc/hosts -p wa -k system-locale \n-w /etc/networks -p wa -k system-locale \n-w /etc/network -p wa -k system-locale \n-w /etc/netplan -p wa -k system-locale",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor events that modify the system's network environment. \nExample: \n# printf \" \n-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale \n-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale \n-w /etc/issue -p wa -k system-locale \n-w /etc/issue.net -p wa -k system-locale \n-w /etc/hosts -p wa -k system-locale \n-w /etc/networks -p wa -k system-locale \n-w /etc/network/ -p wa -k system-locale \n-w /etc/netplan/ -p wa -k system-locale \n\" >> /etc/audit/rules.d/50-system_locale.rules \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3, CM-6 \n2. https://netplan.io/faq \n \n \n \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n5.5 Implement Automated Configuration Monitoring \nSystems \n \nUtilize a Security Content Automation Protocol (SCAP) compliant configuration \nmonitoring system to verify all security configuration elements, catalog approved \nexceptions, and alert when unauthorized changes occur. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0003 \nM1047"
    },
    {
        "Title": "6.2.3.6 Ensure use of privileged commands are collected \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor privileged programs, those that have the setuid and/or setgid bit set on \nexecution, to determine if unprivileged users are running these commands.",
        "Rationale": "Execution of privileged commands by non-privileged users could be an indication of \nsomeone trying to gain unauthorized access to the system. \nImpact: \nBoth the audit and remediation section of this recommendation will traverse all mounted \nfile systems that is not mounted with either noexec or nosuid mount options. If there \nare large file systems without these mount options, such traversal will be significantly \ndetrimental to the performance of the system. \nBefore running either the audit or remediation section, inspect the output of the following \ncommand to determine exactly which file systems will be traversed: \n# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste \n-sd,) | grep -Pv \"noexec|nosuid\" \nTo exclude a particular file system due to adverse performance impacts, update the \naudit and remediation sections by adding a sufficiently unique string to the grep \nstatement. The above command can be used to test the modified exclusions.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following script to check on disk rules: \n#!/usr/bin/env bash \n \n{ \n   for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' \n/proc/filesystems | paste -sd,) | grep -Pv \"noexec|nosuid\" | awk '{print \n$1}'); do \n      for PRIVILEGED in $(find \"${PARTITION}\" -xdev -perm /6000 -type f); do \n         grep -qr \"${PRIVILEGED}\" /etc/audit/rules.d && printf \"OK: \n'${PRIVILEGED}' found in auditing rules.\\n\" || printf \"Warning: \n'${PRIVILEGED}' not found in on disk configuration.\\n\" \n      done \n   done \n} \nVerify that all output is OK. \nRunning configuration \nRun the following script to check loaded rules: \n#!/usr/bin/env bash \n \n{ \n   RUNNING=$(auditctl -l) \n   [ -n \"${RUNNING}\" ] && for PARTITION in $(findmnt -n -l -k -it $(awk \n'/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv \n\"noexec|nosuid\" | awk '{print $1}'); do \n      for PRIVILEGED in $(find \"${PARTITION}\" -xdev -perm /6000 -type f); do \n         printf -- \"${RUNNING}\" | grep -q \"${PRIVILEGED}\" && printf \"OK: \n'${PRIVILEGED}' found in auditing rules.\\n\" || printf \"Warning: \n'${PRIVILEGED}' not found in running configuration.\\n\" \n      done \n   done \\ \n   || printf \"ERROR: Variable 'RUNNING' is unset.\\n\" \n} \nVerify that all output is OK. \nSpecial mount points \nIf there are any special mount points that are not visible by default from findmnt as per \nthe above audit, said file systems would have to be manually audited.",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor the use of privileged commands. \nExample script: \n#!/usr/bin/env bash \n \n{ \n  UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n  AUDIT_RULE_FILE=\"/etc/audit/rules.d/50-privileged.rules\" \n  NEW_DATA=() \n  for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' \n/proc/filesystems | paste -sd,) | grep -Pv \"noexec|nosuid\" | awk '{print \n$1}'); do \n    readarray -t DATA < <(find \"${PARTITION}\" -xdev -perm /6000 -type f | awk \n-v UID_MIN=${UID_MIN} '{print \"-a always,exit -F path=\" $1 \" -F perm=x -F \nauid>=\"UID_MIN\" -F auid!=unset -k privileged\" }') \n      for ENTRY in \"${DATA[@]}\"; do \n        NEW_DATA+=(\"${ENTRY}\") \n      done \n  done \n  readarray &> /dev/null -t OLD_DATA < \"${AUDIT_RULE_FILE}\" \n  COMBINED_DATA=( \"${OLD_DATA[@]}\" \"${NEW_DATA[@]}\" ) \n  printf '%s\\n' \"${COMBINED_DATA[@]}\" | sort -u > \"${AUDIT_RULE_FILE}\" \n} \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi \nSpecial mount points \nIf there are any special mount points that are not visible by default from just scanning /, \nchange the PARTITION variable to the appropriate partition and re-run the remediation.",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3, AU-3(1) \n \n \n \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0002 \nM1026"
    },
    {
        "Title": "6.2.3.7 Ensure unsuccessful file access attempts are collected \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor for unsuccessful attempts to access files. The following parameters are \nassociated with system calls that control files: \n\u2022 \ncreation - creat  \n\u2022 \nopening - open , openat  \n\u2022 \ntruncation - truncate , ftruncate  \nAn audit log record will only be written if all of the following criteria is met for the user \nwhen trying to access a file: \n\u2022 \na non-privileged user (auid>=UID_MIN) \n\u2022 \nis not a Daemon event (auid=4294967295/unset/-1) \n\u2022 \nif the system call returned EACCES (permission denied) or EPERM (some other \npermanent error associated with the specific system call)",
        "Rationale": "Failed attempts to open, create or truncate files could be an indication that an individual \nor process is trying to gain unauthorized access to the system.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && awk \"/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&(/ -F *exit=-EACCES/||/ -F *exit=-EPERM/) \\ \n &&/ -S/ \\ \n &&/creat/ \\ \n &&/open/ \\ \n &&/truncate/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output includes: \n-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-\nEACCES -F auid>=1000 -F auid!=unset -k access \n-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-\nEPERM -F auid>=1000 -F auid!=unset -k access \n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-\nEACCES -F auid>=1000 -F auid!=unset -k access \n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-\nEPERM -F auid>=1000 -F auid!=unset -k access \nRunning configuration \nRun the following command to check loaded rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && auditctl -l | awk \"/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&(/ -F *exit=-EACCES/||/ -F *exit=-EPERM/) \\ \n &&/ -S/ \\ \n &&/creat/ \\ \n &&/open/ \\ \n &&/truncate/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output includes: \n \n-a always,exit -F arch=b64 -S open,truncate,ftruncate,creat,openat -F exit=-\nEACCES -F auid>=1000 -F auid!=-1 -F key=access \n-a always,exit -F arch=b64 -S open,truncate,ftruncate,creat,openat -F exit=-\nEPERM -F auid>=1000 -F auid!=-1 -F key=access \n-a always,exit -F arch=b32 -S open,truncate,ftruncate,creat,openat -F exit=-\nEACCES -F auid>=1000 -F auid!=-1 -F key=access \n-a always,exit -F arch=b32 -S open,truncate,ftruncate,creat,openat -F exit=-\nEPERM -F auid>=1000 -F auid!=-1 -F key=access",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor unsuccessful file access attempts. \nExample: \n# { \nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n[ -n \"${UID_MIN}\" ] && printf \" \n-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-\nEACCES -F auid>=${UID_MIN} -F auid!=unset -k access \n-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-\nEPERM -F auid>=${UID_MIN} -F auid!=unset -k access \n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-\nEACCES -F auid>=${UID_MIN} -F auid!=unset -k access \n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-\nEPERM -F auid>=${UID_MIN} -F auid!=unset -k access \n\" >> /etc/audit/rules.d/50-access.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset.\\n\" \n} \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3 \n \n \n \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n14.9 Enforce Detail Logging for Access or Changes to \nSensitive Data \n \nEnforce detailed audit logging for access to sensitive data or changes to \nsensitive data (utilizing tools such as File Integrity Monitoring or Security \nInformation and Event Monitoring). \n \n \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0007 \nM1047"
    },
    {
        "Title": "6.2.3.8 Ensure events that modify user/group information are \ncollected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Record events affecting the modification of user or group information, including that of \npasswords and old passwords if in use. \n\u2022 \n/etc/group - system groups \n\u2022 \n/etc/passwd - system users \n\u2022 \n/etc/gshadow - encrypted password for each group \n\u2022 \n/etc/shadow - system user passwords \n\u2022 \n/etc/security/opasswd - storage of old passwords if the relevant PAM module \nis in use \n\u2022 \n/etc/nsswitch.conf - file configures how the system uses various databases \nand name resolution mechanisms \n\u2022 \n/etc/pam.conf - file determines the authentication services to be used, and the \norder in which the services are used. \n\u2022 \n/etc/pam.d - directory contains the PAM configuration files for each PAM-aware \napplication. \nThe parameters in this section will watch the files to see if they have been opened for \nwrite or have had attribute changes (e.g. permissions) and tag them with the identifier \n\"identity\" in the audit log file.",
        "Rationale": "Unexpected changes to these files could be an indication that the system has been \ncompromised and that an unauthorized user is attempting to hide their activities or \ncompromise additional accounts.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# awk '/^ *-w/ \\ \n&&(/\\/etc\\/group/ \\ \n  ||/\\/etc\\/passwd/ \\ \n  ||/\\/etc\\/gshadow/ \\ \n  ||/\\/etc\\/shadow/ \\ \n  ||/\\/etc\\/security\\/opasswd/ \\ \n  ||/\\/etc\\/nsswitch.conf/ \\ \n  ||/\\/etc\\/pam.conf/ \\ \n  ||/\\/etc\\/pam.d/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \nVerify the output matches: \n-w /etc/group -p wa -k identity \n-w /etc/passwd -p wa -k identity \n-w /etc/gshadow -p wa -k identity \n-w /etc/shadow -p wa -k identity \n-w /etc/security/opasswd -p wa -k identity \n-w /etc/nsswitch.conf -p wa -k identity \n-w /etc/pam.conf -p wa -k identity \n-w /etc/pam.d -p wa -k identity \nRunning configuration \nRun the following command to check loaded rules: \n# auditctl -l | awk '/^ *-w/ \\ \n&&(/\\/etc\\/group/ \\ \n  ||/\\/etc\\/passwd/ \\ \n  ||/\\/etc\\/gshadow/ \\ \n  ||/\\/etc\\/shadow/ \\ \n  ||/\\/etc\\/security\\/opasswd/ \\ \n  ||/\\/etc\\/nsswitch.conf/ \\ \n  ||/\\/etc\\/pam.conf/ \\ \n  ||/\\/etc\\/pam.d/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \nVerify the output matches: \n \n-w /etc/group -p wa -k identity \n-w /etc/passwd -p wa -k identity \n-w /etc/gshadow -p wa -k identity \n-w /etc/shadow -p wa -k identity \n-w /etc/security/opasswd -p wa -k identity \n-w /etc/nsswitch.conf -p wa -k identity \n-w /etc/pam.conf -p wa -k identity \n-w /etc/pam.d -p wa -k identity",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor events that modify user/group information. \nExample: \n# printf \" \n-w /etc/group -p wa -k identity \n-w /etc/passwd -p wa -k identity \n-w /etc/gshadow -p wa -k identity \n-w /etc/shadow -p wa -k identity \n-w /etc/security/opasswd -p wa -k identity \n-w /etc/nsswitch.conf -p wa -k identity \n-w /etc/pam.conf -p wa -k identity \n-w /etc/pam.d -p wa -k identity \n\" >> /etc/audit/rules.d/50-identity.rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3 \n2. https://manpages.debian.org/bookworm/manpages/nsswitch.conf.5.en.html \n3. https://access.redhat.com/documentation/en-\nus/red_hat_enterprise_linux/6/html/managing_smart_cards/pam_configuration_fil\nes \n \n \n \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n4.8 Log and Alert on Changes to Administrative Group \nMembership \n \nConfigure systems to issue a log entry and alert when an account is added to \nor removed from any group assigned administrative privileges. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0004 \nM1047"
    },
    {
        "Title": "6.2.3.9 Ensure discretionary access control permission \nmodification events are collected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor changes to file permissions, attributes, ownership and group. The parameters in \nthis section track changes for system calls that affect file permissions and attributes. \nThe following commands and system calls effect the permissions, ownership and \nvarious attributes of files. \n\u2022 \nchmod  \n\u2022 \nfchmod  \n\u2022 \nfchmodat  \n\u2022 \nchown  \n\u2022 \nfchown  \n\u2022 \nfchownat  \n\u2022 \nlchown  \n\u2022 \nsetxattr  \n\u2022 \nlsetxattr  \n\u2022 \nfsetxattr  \n\u2022 \nremovexattr  \n\u2022 \nlremovexattr  \n\u2022 \nfremovexattr  \nIn all cases, an audit record will only be written for non-system user ids and will ignore \nDaemon events. All audit records will be tagged with the identifier \"perm_mod.\"",
        "Rationale": "Monitoring for changes in file attributes could alert a system administrator to activity that \ncould indicate intruder activity or policy violation.",
        "Impact": "",
        "Audit": "Note: Output showing all audited syscalls, e.g. (-a always,exit -F arch=b64 -S \nchmod,fchmod,fchmodat,chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr,removexattr\n,lremovexattr,fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod) is also \nacceptable. These have been separated by function on the displayed output for clarity. \nOn disk configuration \nRun the following command to check the on disk rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && awk \"/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -S/ \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&(/chmod/||/fchmod/||/fchmodat/ \\ \n   ||/chown/||/fchown/||/fchownat/||/lchown/ \\ \n   ||/setxattr/||/lsetxattr/||/fsetxattr/ \\ \n   ||/removexattr/||/lremovexattr/||/fremovexattr/) \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F \nauid!=unset -F key=perm_mod \n-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=1000 -F \nauid!=unset -F key=perm_mod \n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F \nauid!=unset -F key=perm_mod \n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=1000 -F \nauid!=unset -F key=perm_mod \n-a always,exit -F arch=b64 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=1000 -F auid!=unset -F key=perm_mod \n-a always,exit -F arch=b32 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=1000 -F auid!=unset -F key=perm_mod \nRunning configuration \nRun the following command to check loaded rules: \n \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && auditctl -l | awk \"/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -S/ \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&(/chmod/||/fchmod/||/fchmodat/ \\ \n   ||/chown/||/fchown/||/fchownat/||/lchown/ \\ \n   ||/setxattr/||/lsetxattr/||/fsetxattr/ \\ \n   ||/removexattr/||/lremovexattr/||/fremovexattr/) \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 \n-F key=perm_mod \n-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=1000 -F \nauid!=-1 -F key=perm_mod \n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 \n-F key=perm_mod \n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=1000 -F \nauid!=-1 -F key=perm_mod \n-a always,exit -F arch=b64 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=1000 -F auid!=-1 -F key=perm_mod \n-a always,exit -F arch=b32 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=1000 -F auid!=-1 -F key=perm_mod",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor discretionary access control permission modification \nevents. \nExample: \n# { \nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n[ -n \"${UID_MIN}\" ] && printf \" \n-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F \nauid!=unset -F key=perm_mod \n-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod \n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F \nauid!=unset -F key=perm_mod \n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod \n-a always,exit -F arch=b64 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod \n-a always,exit -F arch=b32 -S \nsetxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F \nauid>=${UID_MIN} -F auid!=unset -F key=perm_mod \n\" >> /etc/audit/rules.d/50-perm_mod.rules || printf \"ERROR: Variable \n'UID_MIN' is unset.\\n\" \n} \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3, CM-6 \n \n \n \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n5.5 Implement Automated Configuration Monitoring \nSystems \n \nUtilize a Security Content Automation Protocol (SCAP) compliant configuration \nmonitoring system to verify all security configuration elements, catalog approved \nexceptions, and alert when unauthorized changes occur. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005 \nM1022"
    },
    {
        "Title": "6.2.3.10 Ensure successful file system mounts are collected \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor the use of the mount system call. The mount (and umount ) system call controls \nthe mounting and unmounting of file systems. The parameters below configure the \nsystem to create an audit record when the mount system call is used by a non-\nprivileged user",
        "Rationale": "It is highly unusual for a non privileged user to mount file systems to the system. While \ntracking mount commands gives the system administrator evidence that external media \nmay have been mounted (based on a review of the source of the mount and confirming \nit's an external media type), it does not conclusively indicate that data was exported to \nthe media. System administrators who wish to determine if data were exported, would \nalso have to track successful open, creat and truncate system calls requiring write \naccess to a file under the mount point of the external media file system. This could give \na fair indication that a write occurred. The only way to truly prove it, would be to track \nsuccessful writes to the external media. Tracking write system calls could quickly fill up \nthe audit log and is not recommended. Recommendations on configuration options to \ntrack data export to media is beyond the scope of this document.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && awk \"/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -S/ \\ \n &&/mount/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -k mounts \n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -k mounts \nRunning configuration \nRun the following command to check loaded rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && auditctl -l | awk \"/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -S/ \\ \n &&/mount/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=-1 -F key=mounts \n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=-1 -F key=mounts",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor successful file system mounts. \nExample: \n# { \nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n[ -n \"${UID_MIN}\" ] && printf \" \n-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k \nmounts \n-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k \nmounts \n\" >> /etc/audit/rules.d/50-mounts.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset.\\n\" \n} \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: CM-6 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event source, \ndate, user, timestamp, source addresses, destination addresses, and other useful \nelements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0010 \nM1034"
    },
    {
        "Title": "6.2.3.11 Ensure session initiation information is collected \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor session initiation events. The parameters in this section track changes to the \nfiles associated with session events. \n\u2022 \n/var/run/utmp - tracks all currently logged in users. \n\u2022 \n/var/log/wtmp - file tracks logins, logouts, shutdown, and reboot events. \n\u2022 \n/var/log/btmp - keeps track of failed login attempts and can be read by \nentering the command /usr/bin/last -f /var/log/btmp. \nAll audit records will be tagged with the identifier \"session.\"",
        "Rationale": "Monitoring these files for changes could alert a system administrator to logins occurring \nat unusual hours, which could indicate intruder activity (i.e. a user logging in at a time \nwhen they do not normally log in).",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# awk '/^ *-w/ \\ \n&&(/\\/var\\/run\\/utmp/ \\ \n  ||/\\/var\\/log\\/wtmp/ \\ \n  ||/\\/var\\/log\\/btmp/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \nVerify the output matches: \n-w /var/run/utmp -p wa -k session \n-w /var/log/wtmp -p wa -k session \n-w /var/log/btmp -p wa -k session \nRunning configuration \nRun the following command to check loaded rules: \n# auditctl -l | awk '/^ *-w/ \\ \n&&(/\\/var\\/run\\/utmp/ \\ \n  ||/\\/var\\/log\\/wtmp/ \\ \n  ||/\\/var\\/log\\/btmp/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \nVerify the output matches: \n-w /var/run/utmp -p wa -k session \n-w /var/log/wtmp -p wa -k session \n-w /var/log/btmp -p wa -k session",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor session initiation information. \nExample: \n# printf \" \n-w /var/run/utmp -p wa -k session \n-w /var/log/wtmp -p wa -k session \n-w /var/log/btmp -p wa -k session \n\" >> /etc/audit/rules.d/50-session.rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n4.9 Log and Alert on Unsuccessful Administrative Account \nLogin \n \nConfigure systems to issue a log entry and alert on unsuccessful logins to an \nadministrative account. \n \n\u25cf \n\u25cf \nv7 \n16.13 Alert on Account Login Behavior Deviation \n \nAlert when users deviate from normal login behavior, such as time-of-day, \nworkstation location and duration. \n \n \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0001 \nM1047"
    },
    {
        "Title": "6.2.3.12 Ensure login and logout events are collected \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor login and logout events. The parameters below track changes to files \nassociated with login/logout events. \n\u2022 \n/var/log/lastlog - maintain records of the last time a user successfully logged \nin. \n\u2022 \n/var/run/faillock - directory maintains records of login failures via the \npam_faillock module.",
        "Rationale": "Monitoring login/logout events could provide a system administrator with information \nassociated with brute force attacks against user logins.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# awk '/^ *-w/ \\ \n&&(/\\/var\\/log\\/lastlog/ \\ \n  ||/\\/var\\/run\\/faillock/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \nVerify the output matches: \n-w /var/log/lastlog -p wa -k logins \n-w /var/run/faillock -p wa -k logins \nRunning configuration \nRun the following command to check loaded rules: \n# auditctl -l | awk '/^ *-w/ \\ \n&&(/\\/var\\/log\\/lastlog/ \\ \n  ||/\\/var\\/run\\/faillock/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \nVerify the output matches: \n \n-w /var/log/lastlog -p wa -k logins \n-w /var/run/faillock -p wa -k logins",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor login and logout events. \nExample: \n# printf \" \n-w /var/log/lastlog -p wa -k logins \n-w /var/run/faillock -p wa -k logins \n\" >> /etc/audit/rules.d/50-login.rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n4.9 Log and Alert on Unsuccessful Administrative Account \nLogin \n \nConfigure systems to issue a log entry and alert on unsuccessful logins to an \nadministrative account. \n \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.13 Alert on Account Login Behavior Deviation \n \nAlert when users deviate from normal login behavior, such as time-of-day, \nworkstation location and duration. \n \n \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0001 \nM1047"
    },
    {
        "Title": "6.2.3.13 Ensure file deletion events by users are collected \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor the use of system calls associated with the deletion or renaming of files and file \nattributes. This configuration statement sets up monitoring for: \n\u2022 \nunlink - remove a file \n\u2022 \nunlinkat - remove a file attribute \n\u2022 \nrename - rename a file \n\u2022 \nrenameat rename a file attribute system calls and tags them with the identifier \n\"delete\".",
        "Rationale": "Monitoring these calls from non-privileged users could provide a system administrator \nwith evidence that inappropriate removal of files and file attributes associated with \nprotected files is occurring. While this audit option will look at all events, system \nadministrators will want to look for specific privileged files that are being deleted or \naltered.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && awk \"/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -S/ \\ \n &&(/unlink/||/rename/||/unlinkat/||/renameat/) \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F arch=b64 -S unlink,unlinkat,rename,renameat -F auid>=1000 -\nF auid!=unset -k delete \n-a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F auid>=1000 -\nF auid!=unset -k delete \nRunning configuration \nRun the following command to check loaded rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && auditctl -l | awk \"/^ *-a *always,exit/ \\ \n &&/ -F *arch=b(32|64)/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -S/ \\ \n &&(/unlink/||/rename/||/unlinkat/||/renameat/) \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=1000 -\nF auid!=-1 -F key=delete \n-a always,exit -F arch=b32 -S unlink,rename,unlinkat,renameat -F auid>=1000 -\nF auid!=-1 -F key=delete",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor file deletion events by users. \nExample: \n# { \nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n[ -n \"${UID_MIN}\" ] && printf \" \n-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F \nauid>=${UID_MIN} -F auid!=unset -F key=delete \n-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F \nauid>=${UID_MIN} -F auid!=unset -F key=delete \n\" >> /etc/audit/rules.d/50-delete.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset.\\n\" \n} \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-12, SC-7 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005 \nM1047"
    },
    {
        "Title": "6.2.3.14 Ensure events that modify the system's Mandatory \nAccess Controls are collected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor AppArmor, an implementation of mandatory access controls. The parameters \nbelow monitor any write access (potential additional, deletion or modification of files in \nthe directory) or attribute changes to the /etc/apparmor/ and /etc/apparmor.d/ \ndirectories. \nNote: If a different Mandatory Access Control method is used, changes to the \ncorresponding directories should be audited.",
        "Rationale": "Changes to files in the /etc/apparmor/ and /etc/apparmor.d/ directories could \nindicate that an unauthorized user is attempting to modify access controls and change \nsecurity contexts, leading to a compromise of the system.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# awk '/^ *-w/ \\ \n&&(/\\/etc\\/apparmor/ \\ \n  ||/\\/etc\\/apparmor.d/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \nVerify the output matches: \n-w /etc/apparmor/ -p wa -k MAC-policy \n-w /etc/apparmor.d/ -p wa -k MAC-policy \nRunning configuration \nRun the following command to check loaded rules: \n# auditctl -l | awk '/^ *-w/ \\ \n&&(/\\/etc\\/apparmor/ \\ \n  ||/\\/etc\\/apparmor.d/) \\ \n&&/ +-p *wa/ \\ \n&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \nVerify the output matches: \n \n-w /etc/apparmor/ -p wa -k MAC-policy \n-w /etc/apparmor.d/ -p wa -k MAC-policy",
        "Remediation": "Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor events that modify the system's Mandatory Access \nControls. \nExample: \n# printf \" \n-w /etc/apparmor/ -p wa -k MAC-policy \n-w /etc/apparmor.d/ -p wa -k MAC-policy \n\" >> /etc/audit/rules.d/50-MAC-policy.rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3, CM-6 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n5.5 Implement Automated Configuration Monitoring \nSystems \n \nUtilize a Security Content Automation Protocol (SCAP) compliant configuration \nmonitoring system to verify all security configuration elements, catalog approved \nexceptions, and alert when unauthorized changes occur. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0004 \nM1022"
    },
    {
        "Title": "6.2.3.15 Ensure successful and unsuccessful attempts to use the \nchcon command are collected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe chcon command.",
        "Rationale": "The chcon command is used to change file security context. Without generating audit \nrecords that are specific to the security and mission needs of the organization, it would \nbe difficult to establish, correlate, and investigate the events relating to an incident or \nidentify those responsible for one.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && awk \"/^ *-a *always,exit/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -F *perm=x/ \\ \n &&/ -F *path=\\/usr\\/bin\\/chcon/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset \n-k perm_chng \nRunning configuration \nRun the following command to check loaded rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && auditctl -l | awk \"/^ *-a *always,exit/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -F *perm=x/ \\ \n &&/ -F *path=\\/usr\\/bin\\/chcon/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -S all -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F \nauid!=-1 -F key=perm_chng",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nchcon command. \nExample: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && printf \" \n-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k perm_chng \n\" >> /etc/audit/rules.d/50-perm_chng.rules || printf \"ERROR: Variable \n'UID_MIN' is unset.\\n\" \n} \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-12, SI-5 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005 \nM1022"
    },
    {
        "Title": "6.2.3.16 Ensure successful and unsuccessful attempts to use the \nsetfacl command are collected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe setfacl command",
        "Rationale": "This utility sets Access Control Lists (ACLs) of files and directories. Without generating \naudit records that are specific to the security and mission needs of the organization, it \nwould be difficult to establish, correlate, and investigate the events relating to an \nincident or identify those responsible for one.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && awk \"/^ *-a *always,exit/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -F *perm=x/ \\ \n &&/ -F *path=\\/usr\\/bin\\/setfacl/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules || \nprintf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=1000 -F \nauid!=unset -k perm_chng \nRunning configuration \nRun the following command to check loaded rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && auditctl -l | awk \"/^ *-a *always,exit/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -F *perm=x/ \\ \n &&/ -F *path=\\/usr\\/bin\\/setfacl/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -S all -F path=/usr/bin/setfacl -F perm=x -F auid>=1000 -F \nauid!=-1 -F key=perm_chng",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nsetfacl command. \nExample: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && printf \" \n-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k perm_chng \n\" >> /etc/audit/rules.d/50-perm_chng.rules || printf \"ERROR: Variable \n'UID_MIN' is unset.\\n\" \n} \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-12, SI-5 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005 \nM1022"
    },
    {
        "Title": "6.2.3.17 Ensure successful and unsuccessful attempts to use the \nchacl command are collected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe chacl command. \nchacl is an IRIX-compatibility command, and is maintained for those users who are \nfamiliar with its use from either XFS or IRIX.",
        "Rationale": "chacl changes the ACL(s) for a file or directory. Without generating audit records that \nare specific to the security and mission needs of the organization, it would be difficult to \nestablish, correlate, and investigate the events relating to an incident or identify those \nresponsible for one.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && awk \"/^ *-a *always,exit/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -F *perm=x/ \\ \n &&/ -F *path=\\/usr\\/bin\\/chacl/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=1000 -F auid!=unset \n-k perm_chng \nRunning configuration \nRun the following command to check loaded rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && auditctl -l | awk \"/^ *-a *always,exit/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -F *perm=x/ \\ \n &&/ -F *path=\\/usr\\/bin\\/chacl/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -S all -F path=/usr/bin/chacl -F perm=x -F auid>=1000 -F \nauid!=-1 -F key=perm_chng",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nchacl command. \nExample: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && printf \" \n-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k perm_chng \n\" >> /etc/audit/rules.d/50-perm_chng.rules || printf \"ERROR: Variable \n'UID_MIN' is unset.\\n\" \n} \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-12, SI-5 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005 \nM1022"
    },
    {
        "Title": "6.2.3.18 Ensure successful and unsuccessful attempts to use the \nusermod command are collected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The operating system must generate audit records for successful/unsuccessful uses of \nthe usermod command.",
        "Rationale": "The usermod command modifies the system account files to reflect the changes that are \nspecified on the command line. Without generating audit records that are specific to the \nsecurity and mission needs of the organization, it would be difficult to establish, \ncorrelate, and investigate the events relating to an incident or identify those responsible \nfor one.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following command to check the on disk rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && awk \"/^ *-a *always,exit/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -F *perm=x/ \\ \n &&/ -F *path=\\/usr\\/sbin\\/usermod/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=1000 -F \nauid!=unset -k usermod \nRunning configuration \nRun the following command to check loaded rules: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && auditctl -l | awk \"/^ *-a *always,exit/ \\ \n &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n &&/ -F *auid>=${UID_MIN}/ \\ \n &&/ -F *perm=x/ \\ \n &&/ -F *path=\\/usr\\/sbin\\/usermod/ \\ \n &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -S all -F path=/usr/sbin/usermod -F perm=x -F auid>=1000 -F \nauid!=-1 -F key=usermod",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor successful and unsuccessful attempts to use the \nusermod command. \nExample: \n# { \n UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n [ -n \"${UID_MIN}\" ] && printf \" \n-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k usermod \n\" >> /etc/audit/rules.d/50-usermod.rules || printf \"ERROR: Variable 'UID_MIN' \nis unset.\\n\" \n} \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2, AU-12, SI-5 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0005 \nM1022"
    },
    {
        "Title": "6.2.3.19 Ensure kernel module loading unloading and \nmodification is collected (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Monitor the loading and unloading of kernel modules. All the loading / listing / \ndependency checking of modules is done by kmod via symbolic links. \nThe following system calls control loading and unloading of modules: \n\u2022 \ninit_module - load a module \n\u2022 \nfinit_module - load a module (used when the overhead of using \ncryptographically signed modules to determine the authenticity of a module can \nbe avoided) \n\u2022 \ndelete_module - delete a module \n\u2022 \ncreate_module - create a loadable module entry \n\u2022 \nquery_module - query the kernel for various bits pertaining to modules \nAny execution of the loading and unloading module programs and system calls will \ntrigger an audit record with an identifier of modules.",
        "Rationale": "Monitoring the use of all the various ways to manipulate kernel modules could provide \nsystem administrators with evidence that an unauthorized change was made to a kernel \nmodule, possibly compromising the security of the system.",
        "Impact": "",
        "Audit": "On disk configuration \nRun the following script to check the on disk rules: \n#!/usr/bin/env bash \n \n{ \n  awk '/^ *-a *always,exit/ \\ \n  &&/ -F *arch=b(32|64)/ \\ \n  &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) \\ \n  &&/ -S/ \\ \n  &&(/init_module/ \\ \n    ||/finit_module/ \\ \n    ||/delete_module/ \\ \n    ||/create_module/ \\ \n    ||/query_module/) \\ \n  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules \n \n  UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n  [ -n \"${UID_MIN}\" ] && awk \"/^ *-a *always,exit/ \\ \n  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n  &&/ -F *auid>=${UID_MIN}/ \\ \n  &&/ -F *perm=x/ \\ \n  &&/ -F *path=\\/usr\\/bin\\/kmod/ \\ \n  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\ \n  || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output matches: \n-a always,exit -F arch=b64 -S \ninit_module,finit_module,delete_module,create_module,query_module -F \nauid>=1000 -F auid!=unset -k kernel_modules \n-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=1000 -F auid!=unset -\nk kernel_modules \nRunning configuration \nRun the following script to check loaded rules: \n \n#!/usr/bin/env bash \n \n{ \n  auditctl -l | awk '/^ *-a *always,exit/ \\ \n  &&/ -F *arch=b(32|64)/ \\ \n  &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) \\ \n  &&/ -S/ \\ \n  &&(/init_module/ \\ \n    ||/finit_module/ \\ \n    ||/delete_module/ \\ \n    ||/create_module/ \\ \n    ||/query_module/) \\ \n  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' \n \n  UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n  [ -n \"${UID_MIN}\" ] && auditctl -l | awk \"/^ *-a *always,exit/ \\ \n  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\ \n  &&/ -F *auid>=${UID_MIN}/ \\ \n  &&/ -F *perm=x/ \\ \n  &&/ -F *path=\\/usr\\/bin\\/kmod/ \\ \n  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\ \n  || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" \n} \nVerify the output includes: \n-a always,exit -F arch=b64 -S \ncreate_module,init_module,delete_module,query_module,finit_module -F \nauid>=1000 -F auid!=-1 -F key=kernel_modules \n-a always,exit -S all -F path=/usr/bin/kmod -F perm=x -F auid>=1000 -F \nauid!=-1 -F key=kernel_modules \nSymlink audit \nRun the following script to audit if the symlinks kmod accepts are indeed pointing at it: \n#!/usr/bin/env bash \n \n{ \n   a_files=(\"/usr/sbin/lsmod\" \"/usr/sbin/rmmod\" \"/usr/sbin/insmod\" \n\"/usr/sbin/modinfo\" \"/usr/sbin/modprobe\" \"/usr/sbin/depmod\") \n   for l_file in \"${a_files[@]}\"; do \n      if [ \"$(readlink -f \"$l_file\")\" = \"$(readlink -f /bin/kmod)\" ]; then \n         printf \"OK: \\\"$l_file\\\"\\n\" \n      else \n         printf \"Issue with symlink for file: \\\"$l_file\\\"\\n\" \n      fi \n   done \n} \nVerify the output states OK. If there is a symlink pointing to a different location it should \nbe investigated",
        "Remediation": "Create audit rules \nEdit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, \nwith the relevant rules to monitor kernel module modification. \nExample: \n#!/usr/bin/env bash \n \n{ \n  UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) \n  [ -n \"${UID_MIN}\" ] && printf \" \n  -a always,exit -F arch=b64 -S \ninit_module,finit_module,delete_module,create_module,query_module -F \nauid>=${UID_MIN} -F auid!=unset -k kernel_modules \n  -a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F \nauid!=unset -k kernel_modules \n  \" >> /etc/audit/rules.d/50-kernel_modules.rules || printf \"ERROR: Variable \n'UID_MIN' is unset.\\n\" \n} \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3, CM-6 \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration. \nSystem call structure \nFor performance (man 7 audit.rules) reasons it is preferable to have all the system \ncalls on one line. However, your configuration may have them on one line each or some \nother combination. This is important to understand for both the auditing and remediation \nsections as the examples given are optimized for performance as per the man page.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.006 \nTA0004 \nM1047"
    },
    {
        "Title": "6.2.3.20 Ensure the audit configuration is immutable (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Set system audit so that audit rules cannot be modified with auditctl . Setting the flag \n\"-e 2\" forces audit to be put in immutable mode. Audit changes can only be made on \nsystem reboot. \nNote: This setting will require the system to be rebooted to update the active auditd \nconfiguration settings.",
        "Rationale": "In immutable mode, unauthorized users cannot execute changes to the audit system to \npotentially hide malicious activity and then put the audit rules back. Users would most \nlikely notice a system reboot and that could alert administrators of an attempt to make \nunauthorized audit changes.",
        "Impact": "",
        "Audit": "Run the following command and verify output matches: \n# grep -Ph -- '^\\h*-e\\h+2\\b' /etc/audit/rules.d/*.rules | tail -1 \n \n-e 2",
        "Remediation": "Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e \n2 at the end of the file: \nExample: \n# printf '\\n%s' \"-e 2\" >> /etc/audit/rules.d/99-finalize.rules \nLoad audit rules \nMerge and load the rules into active configuration: \n# augenrules --load \nCheck if reboot is required. \n# if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot \nrequired to load rules\\n\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, AU-3, AU-12, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event source, \ndate, user, timestamp, source addresses, destination addresses, and other useful \nelements. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1562, T1562.001 \nTA0005 \nM1022"
    },
    {
        "Title": "6.2.3.21 Ensure the running and on disk configuration is the same \n(Manual)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The Audit system have both on disk and running configuration. It is possible for these \nconfiguration settings to differ. \nNote: Due to the limitations of augenrules and auditctl, it is not absolutely \nguaranteed that loading the rule sets via augenrules --load will result in all rules \nbeing loaded or even that the user will be informed if there was a problem loading the \nrules.",
        "Rationale": "Configuration differences between what is currently running and what is on disk could \ncause unexpected problems or may give a false impression of compliance \nrequirements.",
        "Impact": "",
        "Audit": "Merged rule sets \nEnsure that all rules in /etc/audit/rules.d have been merged into \n/etc/audit/audit.rules: \n# augenrules --check \n \n/usr/sbin/augenrules: No change \nShould there be any drift, run augenrules --load to merge and load all rules.",
        "Remediation": "If the rules are not aligned across all three () areas, run the following command to \nmerge and load all rules: \n# augenrules --load \nCheck if reboot is required. \nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then echo \"Reboot required \nto load rules\"; fi",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3 \n \nAdditional Information: \nPotential reboot required \nIf the auditing configuration is locked (-e 2), then augenrules will not warn in any way \nthat rules could not be loaded into the running configuration. A system reboot will be \nrequired to load the rules into the running configuration.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event source, \ndate, user, timestamp, source addresses, destination addresses, and other useful \nelements. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "6.2.4.1 Ensure audit log files mode is configured (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Audit log files contain information about the system and system activity.",
        "Rationale": "Access to audit records can reveal system and configuration data to attackers, \npotentially compromising its confidentiality.",
        "Impact": "",
        "Audit": "Run the following script to verify audit log files are mode 0640 or more restrictive: \n#!/usr/bin/env bash \n \n{ \n   l_perm_mask=\"0137\" \n   if [ -e \"/etc/audit/auditd.conf\" ]; then \n      l_audit_log_directory=\"$(dirname \"$(awk -F= '/^\\s*log_file\\s*/{print \n$2}' /etc/audit/auditd.conf | xargs)\")\" \n      if [ -d \"$l_audit_log_directory\" ]; then \n         l_maxperm=\"$(printf '%o' $(( 0777 & ~$l_perm_mask )) )\" \n         a_files=() \n         while IFS= read -r -d $'\\0' l_file; do \n            [ -e \"$l_file\" ] && a_files+=(\"$l_file\") \n         done < <(find \"$l_audit_log_directory\" -maxdepth 1 -type f -perm \n/\"$l_perm_mask\" -print0) \n \n \n if (( \"${#a_files[@]}\" > 0 )); then \n            for l_file in \"${a_files[@]}\"; do \n               l_file_mode=\"$(stat -Lc '%#a' \"$l_file\")\" \n               echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n  - File: \n\\\"$l_file\\\" is mode: \\\"$l_file_mode\\\"\\n     (should be mode: \\\"$l_maxperm\\\" \nor more restrictive)\\n\" \n            done \n         else \n            echo -e \"\\n- Audit Result:\\n  ** PASS **\\n  - All files in \n\\\"$l_audit_log_directory\\\" are mode: \\\"$l_maxperm\\\" or more restrictive\" \n         fi \n      else \n         echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n  - Log file directory not \nset in \\\"/etc/audit/auditd.conf\\\" please set log file directory\" \n      fi \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n  - File: \n\\\"/etc/audit/auditd.conf\\\" not found.\\n  - ** Verify auditd is installed **\" \n   fi \n}",
        "Remediation": "Run the following command to remove more permissive mode than 0640 from audit log \nfiles: \n# [ -f /etc/audit/auditd.conf ] && find \"$(dirname $(awk -F \"=\" \n'/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))\" -type f -perm \n/0137 -exec chmod u-x,g-wx,o-rwx {} +",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.2.4.2 Ensure audit log files owner is configured (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Audit log files contain information about the system and system activity.",
        "Rationale": "Access to audit records can reveal system and configuration data to attackers, \npotentially compromising its confidentiality.",
        "Impact": "",
        "Audit": "Run the following script to verify audit log files are owned by the root user: \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" l_output2=\"\" \n   if [ -e \"/etc/audit/auditd.conf\" ]; then \n      l_audit_log_directory=\"$(dirname \"$(awk -F= '/^\\s*log_file\\s*/{print \n$2}' /etc/audit/auditd.conf | xargs)\")\" \n      if [ -d \"$l_audit_log_directory\" ]; then \n         while IFS= read -r -d $'\\0' l_file; do \n            l_output2=\"$l_output2\\n  - File: \\\"$l_file\\\" is owned by user: \n\\\"$(stat -Lc '%U' \"$l_file\")\\\"\\n     (should be owned by user: \\\"root\\\")\\n\" \n         done < <(find \"$l_audit_log_directory\" -maxdepth 1 -type f ! -user \nroot -print0) \n      else \n         l_output2=\"$l_output2\\n  - Log file directory not set in \n\\\"/etc/audit/auditd.conf\\\" please set log file directory\" \n      fi \n   else \n      l_output2=\"$l_output2\\n  - File: \\\"/etc/audit/auditd.conf\\\" not \nfound.\\n  - ** Verify auditd is installed **\" \n   fi \n   if [ -z \"$l_output2\" ]; then \n      l_output=\"$l_output\\n  - All files in \\\"$l_audit_log_directory\\\" are \nowned by user: \\\"root\\\"\\n\" \n      echo -e \"\\n- Audit Result:\\n  ** PASS **\\n - * Correctly configured * \n:$l_output\" \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - * Reasons for audit \nfailure * :$l_output2\\n\" \n   fi \n}",
        "Remediation": "Run the following command to configure the audit log files to be owned by the root \nuser: \n# [ -f /etc/audit/auditd.conf ] && find \"$(dirname $(awk -F \"=\" \n'/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))\" -type f ! -user \nroot -exec chown root {} +",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.2.4.3 Ensure audit log files group owner is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Audit log files contain information about the system and system activity.",
        "Rationale": "Access to audit records can reveal system and configuration data to attackers, \npotentially compromising its confidentiality.",
        "Impact": "",
        "Audit": "Run the following command to verify log_group parameter is set to either adm or root \nin /etc/audit/auditd.conf: \n#  grep -Piws -- '^\\h*log_group\\h*=\\h*\\H+\\b' /etc/audit/auditd.conf | grep -\nPvi -- '(adm)' \nNothing should be returned \nUsing the path of the directory containing the audit logs, verify audit log files are owned \nby the \"root\" or \"adm\" group by running the following script: \n#!/usr/bin/env bash \n \n{ \n  if [ -e /etc/audit/auditd.conf ]; then \n      l_fpath=\"$(dirname \"$(awk -F \"=\" '/^\\s*log_file/ {print $2}' \n/etc/audit/auditd.conf | xargs)\")\" \n      find -L \"$l_fpath\" -not -path \"$l_fpath\"/lost+found -type f \\( ! -group \nroot -a ! -group adm \\) -exec ls -l {} + \n   fi \n} \nNothing should be returned",
        "Remediation": "Run the following command to configure the audit log files to be group owned by adm: \n# find $(dirname $(awk -F\"=\" '/^\\s*log_file/ {print $2}' \n/etc/audit/auditd.conf | xargs)) -type f \\( ! -group adm -a ! -group root \\) \n-exec chgrp adm {} + \nRun the following command to set the log_group parameter in the audit configuration \nfile to log_group = adm: \n# sed -ri 's/^\\s*#?\\s*log_group\\s*=\\s*\\S+(\\s*#.*)?.*$/log_group = adm\\1/' \n/etc/audit/auditd.conf \nRun the following command to restart the audit daemon to reload the configuration file: \n# systemctl restart auditd",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.2.4.4 Ensure the audit log file directory mode is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "The audit log directory contains audit log files.",
        "Rationale": "Audit information includes all information including: audit records, audit settings and \naudit reports. This information is needed to successfully audit system activity. This \ninformation must be protected from unauthorized modification or deletion. If this \ninformation were to be compromised, forensic analysis and discovery of the true source \nof potentially malicious system activity is impossible to achieve.",
        "Impact": "",
        "Audit": "Run the following script to verify the audit log directory is mode 0750 or more restrictive: \n#!/usr/bin/env bash \n \n{ \n   l_perm_mask=\"0027\" \n   if [ -e \"/etc/audit/auditd.conf\" ]; then \n      l_audit_log_directory=\"$(dirname \"$(awk -F= '/^\\s*log_file\\s*/{print \n$2}' /etc/audit/auditd.conf | xargs)\")\" \n      if [ -d \"$l_audit_log_directory\" ]; then \n         l_maxperm=\"$(printf '%o' $(( 0777 & ~$l_perm_mask )) )\" \n         l_directory_mode=\"$(stat -Lc '%#a' \"$l_audit_log_directory\")\" \n         if [ $(( $l_directory_mode & $l_perm_mask )) -gt 0 ]; then \n            echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n  - Directory: \n\\\"$l_audit_log_directory\\\" is mode: \\\"$l_directory_mode\\\"\\n     (should be \nmode: \\\"$l_maxperm\\\" or more restrictive)\\n\" \n         else \n            echo -e \"\\n- Audit Result:\\n  ** PASS **\\n  - Directory: \n\\\"$l_audit_log_directory\\\" is mode: \\\"$l_directory_mode\\\"\\n     (should be \nmode: \\\"$l_maxperm\\\" or more restrictive)\\n\" \n         fi         \n      else \n         echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n  - Log file directory not \nset in \\\"/etc/audit/auditd.conf\\\" please set log file directory\" \n      fi \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n  - File: \n\\\"/etc/audit/auditd.conf\\\" not found\\n  - ** Verify auditd is installed **\" \n   fi \n}",
        "Remediation": "Run the following command to configure the audit log directory to have a mode of \n\"0750\" or less permissive: \n# chmod g-w,o-rwx \"$(dirname \"$(awk -F= '/^\\s*log_file\\s*/{print $2}' \n/etc/audit/auditd.conf | xargs)\")\" \nDefault Value: \n750",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.2.4.5 Ensure audit configuration files mode is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Audit configuration files control auditd and what events are audited.",
        "Rationale": "Access to the audit configuration files could allow unauthorized personnel to prevent the \nauditing of critical events. \nMisconfigured audit configuration files may prevent the auditing of critical events or \nimpact the system's performance by overwhelming the audit log. Misconfiguration of the \naudit configuration files may also make it more difficult to establish and investigate \nevents relating to an incident.",
        "Impact": "",
        "Audit": "Run the following script to verify that the audit configuration files are mode 0640 or more \nrestrictive: \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" l_output2=\"\" l_perm_mask=\"0137\" \n   l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_perm_mask )) )\" \n   while IFS= read -r -d $'\\0' l_fname; do \n      l_mode=$(stat -Lc '%#a' \"$l_fname\") \n      if [ $(( \"$l_mode\" & \"$l_perm_mask\" )) -gt 0 ]; then \n         l_output2=\"$l_output2\\n - file: \\\"$l_fname\\\" is mode: \\\"$l_mode\\\" \n(should be mode: \\\"$l_maxperm\\\" or more restrictive)\" \n      fi \n   done < <(find /etc/audit/ -type f \\( -name \"*.conf\" -o -name '*.rules' \\) \n-print0) \n   if [ -z \"$l_output2\" ]; then \n      echo -e \"\\n- Audit Result:\\n  ** PASS **\\n - All audit configuration \nfiles are mode: \\\"$l_maxperm\\\" or more restrictive\" \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n$l_output2\" \n   fi \n}",
        "Remediation": "Run the following command to remove more permissive mode than 0640 from the audit \nconfiguration files: \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) -exec \nchmod u-x,g-wx,o-rwx {} +",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.2.4.6 Ensure audit configuration files owner is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Audit configuration files control auditd and what events are audited.",
        "Rationale": "Access to the audit configuration files could allow unauthorized personnel to prevent the \nauditing of critical events. \nMisconfigured audit configuration files may prevent the auditing of critical events or \nimpact the system's performance by overwhelming the audit log. Misconfiguration of the \naudit configuration files may also make it more difficult to establish and investigate \nevents relating to an incident.",
        "Impact": "",
        "Audit": "Run the following command to verify that the audit configuration files are owned by the \nroot user: \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -user \nroot \nNothing should be returned",
        "Remediation": "Run the following command to change ownership to root user: \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -user \nroot -exec chown root {} +",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.2.4.7 Ensure audit configuration files group owner is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Audit configuration files control auditd and what events are audited.",
        "Rationale": "Access to the audit configuration files could allow unauthorized personnel to prevent the \nauditing of critical events. \nMisconfigured audit configuration files may prevent the auditing of critical events or \nimpact the system's performance by overwhelming the audit log. Misconfiguration of the \naudit configuration files may also make it more difficult to establish and investigate \nevents relating to an incident.",
        "Impact": "",
        "Audit": "Run the following command to verify that the audit configuration files are owned by the \ngroup root: \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -group \nroot \nNothing should be returned",
        "Remediation": "Run the following command to change group to root: \n# find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -group \nroot -exec chgrp root {} +",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022 \n \n6.2.4.8 Ensure audit tools mode is configured (Automated) \nProfile Applicability: \n\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation \nDescription: \nAudit tools include, but are not limited to, vendor-provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators. \nRationale: \nProtecting audit information includes identifying and protecting the tools used to view \nand manipulate log data. Protecting audit tools is necessary to prevent unauthorized \noperation on audit information. \n \n \n \nAudit: \nRun the following script to verify the audit tools are mode 0755 or more restrictive: \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" l_output2=\"\" l_perm_mask=\"0022\" \n   l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_perm_mask )) )\" \n   a_audit_tools=(\"/sbin/auditctl\" \"/sbin/aureport\" \"/sbin/ausearch\" \n\"/sbin/autrace\" \"/sbin/auditd\" \"/sbin/augenrules\") \n   for l_audit_tool in \"${a_audit_tools[@]}\"; do \n      l_mode=\"$(stat -Lc '%#a' \"$l_audit_tool\")\" \n      if [ $(( \"$l_mode\" & \"$l_perm_mask\" )) -gt 0 ]; then \n         l_output2=\"$l_output2\\n - Audit tool \\\"$l_audit_tool\\\" is mode: \n\\\"$l_mode\\\" and should be mode: \\\"$l_maxperm\\\" or more restrictive\" \n      else \n         l_output=\"$l_output\\n - Audit tool \\\"$l_audit_tool\\\" is correctly \nconfigured to mode: \\\"$l_mode\\\"\" \n      fi \n   done \n   if [ -z \"$l_output2\" ]; then \n      echo -e \"\\n- Audit Result:\\n  ** PASS **\\n - * Correctly configured * \n:$l_output\" \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - * Reasons for audit \nfailure * :$l_output2\\n\" \n      [ -n \"$l_output\" ] && echo -e \"\\n - * Correctly configured * \n:\\n$l_output\\n\" \n   fi \n   unset a_audit_tools \n} \nRemediation: \nRun the following command to remove more permissive mode from the audit tools: \n# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules \nReferences: \n1. NIST SP 800-53 Rev. 5: AU-3 \n \n \n \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.2.4.9 Ensure audit tools owner is configured (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Audit tools include, but are not limited to, vendor-provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting audit information includes identifying and protecting the tools used to view \nand manipulate log data. Protecting audit tools is necessary to prevent unauthorized \noperation on audit information.",
        "Impact": "",
        "Audit": "Run the following command to verify the audit tools are owned by the root user: \n# stat -Lc \"%n %U\" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules | awk '$2 != \"root\" {print}' \nNothing should be returned",
        "Remediation": "Run the following command to change the owner of the audit tools to the root user: \n# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "6.2.4.10 Ensure audit tools group owner is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Audit tools include, but are not limited to, vendor-provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators.",
        "Rationale": "Protecting audit information includes identifying and protecting the tools used to view \nand manipulate log data. Protecting audit tools is necessary to prevent unauthorized \noperation on audit information.",
        "Impact": "",
        "Audit": "Run the following command to verify the audit tools are owned by the group root \n# stat -Lc \"%n %G\" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules | awk '$2 != \"root\" {print}' \nNothing should be returned",
        "Remediation": "Run the following command to change group ownership to the groop root: \n# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace \n/sbin/auditd /sbin/augenrules",
        "References": "1. NIST SP 800-53 Rev. 5: AU-3",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "6.3.1 Ensure AIDE is installed (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "AIDE takes a snapshot of filesystem state including modification times, permissions, \nand file hashes which can then be used to compare against the current state of the \nfilesystem to detect modifications to the system.",
        "Rationale": "By monitoring the filesystem state compromised files can be detected to prevent or limit \nthe exposure of accidental or malicious misconfigurations or modified binaries.",
        "Impact": "",
        "Audit": "Run the following command to verify aide is installed: \n# dpkg-query -s aide &>/dev/null && echo \"aide is installed\" \n \naide is installed \nRun the following command to verify aide-common is installed: \n# dpkg-query -s aide-common &>/dev/null && echo \"aide-common is installed\" \n \naide-common is installed",
        "Remediation": "Install AIDE using the appropriate package manager or manual installation: \n# apt install aide aide-common \nConfigure AIDE as appropriate for your environment. Consult the AIDE documentation \nfor options. \nRun the following commands to initialize AIDE: \n# aideinit \n# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db",
        "References": "1. NIST SP 800-53 Rev. 5: AU-2 \n \nAdditional Information: \nThe prelinking feature can interfere with AIDE because it alters binaries to speed up \ntheir start up times. Run prelink -ua to restore the binaries to their prelinked state, \nthus avoiding false positives from AIDE.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.14 Log Sensitive Data Access \n \nLog sensitive data access, including modification and disposal.  \n \n \n\u25cf \nv7 \n14.9 Enforce Detail Logging for Access or Changes to \nSensitive Data \n \nEnforce detailed audit logging for access to sensitive data or changes to \nsensitive data (utilizing tools such as File Integrity Monitoring or Security \nInformation and Event Monitoring). \n \n \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1565, T1565.001 \nTA0001 \nM1022"
    },
    {
        "Title": "6.3.2 Ensure filesystem integrity is regularly checked (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Periodic checking of the filesystem integrity is needed to detect changes to the \nfilesystem.",
        "Rationale": "Periodic file checking allows the system administrator to determine on a regular basis if \ncritical files have been changed in an unauthorized fashion.",
        "Impact": "",
        "Audit": "Run the following command: \n# systemctl list-unit-files | awk \n'$1~/^dailyaidecheck\\.(timer|service)$/{print $1 \"\\t\" $2}' \nExample output: \ndailyaidecheck.service  static \ndailyaidecheck.timer    enabled \nVerify dailyaidecheck.timer is enabled and dailyaidecheck.service is either \nstatic or enabled. \nRun the following command to verify dailyaidecheck.timer is active: \n# systemctl is-active dailyaidecheck.timer \n \nactive",
        "Remediation": "Run the following command to unmask dailyaidecheck.timer and \ndailyaidecheck.service: \n# systemctl unmask dailyaidecheck.timer dailyaidecheck.service \nRun the following command to enable and start dailyaidecheck.timer: \n# systemctl --now enable dailyaidecheck.timer",
        "References": "1. https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.service \n2. https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.timer \n3. NIST SP 800-53 Rev. 5: AU-2 \n \nAdditional Information: \nThe checking in this recommendation occurs every day at 5am. Alter the frequency and \ntime of the checks in compliance with site policy \nsystemd timers, timer file aidecheck.timer and service file aidecheck.service, have \nbeen included as an optional alternative to using cron \nUbuntu advises using /usr/bin/aide.wrapper rather than calling /usr/bin/aide \ndirectly in order to protect the database and prevent conflicts",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n14.9 Enforce Detail Logging for Access or Changes to \nSensitive Data \n \nEnforce detailed audit logging for access to sensitive data or changes to \nsensitive data (utilizing tools such as File Integrity Monitoring or Security \nInformation and Event Monitoring). \n \n \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1036, T1036.002, \nT1036.003, T1036.004, \nT1036.005, T1565, \nT1565.001 \nTA0040 \nM1022"
    },
    {
        "Title": "6.3.3 Ensure cryptographic mechanisms are used to protect the \nintegrity of audit tools (Automated)",
        "Profile Applicability": "\u2022  Level 2 - Server \n\u2022  Level 2 - Workstation",
        "Description": "Audit tools include, but are not limited to, vendor-provided and open source audit tools \nneeded to successfully view and manipulate audit information system activity and \nrecords. Audit tools include custom queries and report generators. \naide.conf is case-sensitive. Leading and trailing white spaces are ignored. Each \nconfig lines must end with new line. \nAIDE uses the backslash character \\ as escape character for ' ' (space), '@' and '' \n(backslash) (e.g. '\\ ' or '@'). To literally match a '' in a file path with a regular expression \nyou have to escape the backslash twice (i.e. '\\\\'). \nThere are three types of lines in aide.conf: \n\u2022 \nThe configuration options which are used to set configuration parameters and \ndefine groups. \n\u2022 \n(restricted) rules that are used to indicate which files are added to the database. \n\u2022 \nMacro lines define or undefine variables within the config file. \nNote: Lines beginning with # are ignored as comments. \n@@include <FILE> - Include <FILE>. \n\u2022 \nThe content of the file is used as if it were inserted in this part of the config file. \n\u2022 \nThe maximum depth of nested includes is 16. \n`@@include <DIRECTORY> <REGEX> - [RULE_PREFIX] (added in AIDE v0.17) \n\u2022 \nInclude all (regular) files found in <DIRECTORY> matching regular expression \n<REGEX> (sub-directories are ignored). \n\u2022 \nThe file are included in lexical sort order. \n\u2022 \nIf RULE_PREFIX is set, all rules included by the statement are prefixed with given \n<RULE_PREFIX> (added in AIDE v0.18). Prefixes from nested include \nstatements are concatenated. \n\u2022 \nThe content of the files is used as if it were inserted in this part of the config file. \n@x_include: \n\u2022 \nis identical to @@include, except that if a config file is executable is is run and \nthe output is used as config. \n\u2022 \nIf the executable file exits with status greater than zero or writes to stderr aide \nstops with an error. \n\u2022 \nFor security reasons <DIRECTORY> and each executable config file must be \nowned by the current user or root. They must not be group- or world-writable. \n\u2022 \n@@x_include _<FILE>_ (added in AIDE v0.17): \n \n\u2022 \n`@@x_include <DIRECTORY> <REGEX> [RULE_PREFIX] (added in AIDE \nv0.17) \n@@x_include_setenv <VAR> <VALUE> (added in AIDE v0.17) \n\u2022 \nAdds the variable <VAR> with the value <VALUE> to the environment used for \nconfig file execution. \n\u2022 \nEnvironment variable names are limited to alphanumeric characters (A-Za-z0-9) \nand the underscore '_' and must not begin with a digit.",
        "Rationale": "Protecting the integrity of the tools used for auditing purposes is a critical step toward \nensuring the integrity of audit information. Audit information includes all information \n(e.g., audit records, audit settings, and audit reports) needed to successfully audit \ninformation system activity. \nAttackers may replace the audit tools or inject code into the existing tools with the \npurpose of providing the capability to hide or erase system activity from the audit logs.",
        "Impact": "",
        "Audit": "Verify that Advanced Intrusion Detection Environment (AIDE) is properly configured. \nRun the following script to verify: \n\u2022 \nAIDE is configured to use cryptographic mechanisms to protect the integrity of \naudit tools: \n\u2022 \nThe following audit tool files include the options \"p, i, n, u, g, s, b, acl, xattrs and \nsha512\" \no auditctl \no auditd \no ausearch \no aureport \no autrace \no augenrules \n \n#!/usr/bin/env bash \n \n{ \n   a_output=() a_output2=() l_tool_dir=\"$(readlink -f /sbin)\" \n   a_items=(\"p\" \"i\" \"n\" \"u\" \"g\" \"s\" \"b\" \"acl\" \"xattrs\" \"sha512\") \n   l_aide_cmd=\"$(whereis aide | awk '{print $2}')\" \n   a_audit_files=(\"auditctl\" \"auditd\" \"ausearch\" \"aureport\" \"autrace\" \n\"augenrules\") \n   if [ -f \"$l_aide_cmd\" ] && command -v \"$l_aide_cmd\" &>/dev/null; then \n      a_aide_conf_files=(\"$(find -L /etc -type f -name 'aide.conf')\") \n      f_file_par_chk() \n      { \n         a_out2=() \n         for l_item in \"${a_items[@]}\"; do \n            ! grep -Psiq -- '(\\h+|\\+)'\"$l_item\"'(\\h+|\\+)' <<< \"$l_out\" && \\ \n            a_out2+=(\"  - Missing the \\\"$l_item\\\" option\") \n         done \n         if [ \"${#a_out2[@]}\" -gt \"0\" ]; then \n            a_output2+=(\" - Audit tool file: \\\"$l_file\\\"\" \"${a_out2[@]}\") \n         else \n            a_output+=(\" - Audit tool file: \\\"$l_file\\\" includes:\" \"   \n\\\"${a_items[*]}\\\"\") \n         fi \n      } \n      for l_file in \"${a_audit_files[@]}\"; do \n         if [ -f \"$l_tool_dir/$l_file\" ]; then \n            l_out=\"$(\"$l_aide_cmd\" --config \"${a_aide_conf_files[@]}\" -p \nf:\"$l_tool_dir/$l_file\")\" \n            f_file_par_chk \n         else \n            a_output+=(\"  - Audit tool file \\\"$l_file\\\" doesn't exist\") \n         fi \n      done \n   else \n      a_output2+=(\"  - The command \\\"aide\\\" was not found\"  \"    Please \ninstall AIDE\") \n   fi \n   if [ \"${#a_output2[@]}\" -le 0 ]; then \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** PASS **\" \"${a_output[@]}\" \"\" \n   else \n      printf '%s\\n' \"\" \"- Audit Result:\" \"  ** FAIL **\" \" - Reason(s) for \naudit failure:\" \"${a_output2[@]}\" \n      [ \"${#a_output[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"- Correctly set:\" \n\"${a_output[@]}\" \"\" \n   fi \n} \nNote: The script is written to read the \"winning\" configuration setting, to include any \nconfiguration settings in files included as part of the @@x_include setting.",
        "Remediation": "Run the following command to determine the absolute path to the non-symlinked \nversion on the audit tools: \n# readlink -f /sbin \nThe output will be either /usr/sbin - OR - /sbin. Ensure the correct path is used. \nEdit /etc/aide/aide.conf and add or update the following selection lines replacing \n<PATH> with the correct path returned in the command above: \n# Audit Tools  \n<PATH>/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/auditd p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/aureport p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/autrace p+i+n+u+g+s+b+acl+xattrs+sha512  \n<PATH>/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512 \nExample \n# printf '%s\\n' \"\" \"# Audit Tools\" \"$(readlink -f /sbin/auditctl) \np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/auditd) \np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/ausearch) \np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/aureport) \np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/autrace) \np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/augenrules) \np+i+n+u+g+s+b+acl+xattrs+sha512\" >> /etc/aide/aide.conf \nNote: - IF - /etc/aide/aide.conf includes a @@x_include statement: \n\u2022 \n<DIRECTORY> and each executable config file must be owned by the current \nuser or root \n\u2022 \nThey must not be group or world-writable \nExample: \n@@x_include /etc/aide.conf.d ^[a-zA-Z0-9_-]+$",
        "References": "1. AIDE.CONF(5) \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1070, T1070.002, T1083, \nT1083.000 \nTA0007",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "7.1.1 Ensure permissions on /etc/passwd are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/passwd file contains user account information that is used by many system \nutilities and therefore must be readable for these utilities to operate.",
        "Rationale": "It is critical to ensure that the /etc/passwd file is protected from unauthorized write \naccess. Although it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Impact": "",
        "Audit": "Run the following command to verify /etc/passwd is mode 644 or more restrictive, Uid \nis 0/root and Gid is 0/root: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: ( %g/ %G)'  /etc/passwd \n \nAccess: (0644/-rw-r--r--)  Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/passwd: \n# chmod u-x,go-wx /etc/passwd \n# chown root:root /etc/passwd \nDefault Value: \nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.2 Ensure permissions on /etc/passwd- are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/passwd- file contains backup user account information.",
        "Rationale": "It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Impact": "",
        "Audit": "Run the following command to verify /etc/passwd- is mode 644 or more restrictive, \nUid is 0/root and Gid is 0/root: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: { %g/ %G)' /etc/passwd- \n \nAccess: (0644/-rw-r--r--)  Uid: ( 0/ root) Gid: { 0/ root)",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/passwd-: \n# chmod u-x,go-wx /etc/passwd- \n# chown root:root /etc/passwd- \nDefault Value: \nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: { 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.3 Ensure permissions on /etc/group are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/group file contains a list of all the valid groups defined in the system. The \ncommand below allows read/write access for root and read access for everyone else.",
        "Rationale": "The /etc/group file needs to be protected from unauthorized changes by non-\nprivileged users, but needs to be readable as this information is used with many non-\nprivileged programs.",
        "Impact": "",
        "Audit": "Run the following command to verify /etc/group is mode 644 or more restrictive, Uid \nis 0/root and Gid is 0/root: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/group \n \nAccess: (0644/-rw-r--r--)  Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/group: \n# chmod u-x,go-wx /etc/group \n# chown root:root /etc/group \nDefault Value: \nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.4 Ensure permissions on /etc/group- are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/group- file contains a backup list of all the valid groups defined in the \nsystem.",
        "Rationale": "It is critical to ensure that the /etc/group- file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Impact": "",
        "Audit": "Run the following command to verify /etc/group- is mode 644 or more restrictive, Uid \nis 0/root and Gid is 0/root: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: ( %g/ %G)'  /etc/group- \n \nAccess: (0644/-rw-r--r--)  Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/group-: \n# chmod u-x,go-wx /etc/group- \n# chown root:root /etc/group- \nDefault Value: \nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.5 Ensure permissions on /etc/shadow are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/shadow file is used to store the information about user accounts that is critical \nto the security of those accounts, such as the hashed password and other security \ninformation.",
        "Rationale": "If attackers can gain read access to the /etc/shadow file, they can easily run a \npassword cracking program against the hashed password to break it. Other security \ninformation that is stored in the /etc/shadow file (such as expiration) could also be \nuseful to subvert the user accounts.",
        "Impact": "",
        "Audit": "Run the following command to verify /etc/shadow is mode 640 or more restrictive, Uid \nis 0/root and Gid is 0/root or ({GID}/ shadow): \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: ( %g/ %G)'  /etc/shadow \nExample: \nAccess: (0640/-rw-r-----)  Uid: ( 0/ root) Gid: ( 42/ shadow)",
        "Remediation": "Run one of the following commands to set ownership of /etc/shadow to root and \ngroup to either root or shadow: \n# chown root:shadow /etc/shadow \n  -OR- \n# chown root:root /etc/shadow \nRun the following command to remove excess permissions form /etc/shadow: \n# chmod u-x,g-wx,o-rwx /etc/shadow \nDefault Value: \nAccess: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.6 Ensure permissions on /etc/shadow- are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/shadow- file is used to store backup information about user accounts that is \ncritical to the security of those accounts, such as the hashed password and other \nsecurity information.",
        "Rationale": "It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Impact": "",
        "Audit": "Run the following command to verify /etc/shadow- is mode 640 or more restrictive, \nUid is 0/root and Gid is 0/root or {GID}/shadow: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: ( %g/ %G)'  /etc/shadow- \nExample: \nAccess: (0640/-rw-r-----)  Uid: ( 0/ root) Gid: ( 42/ shadow)",
        "Remediation": "Run one of the following commands to set ownership of /etc/shadow- to root and \ngroup to either root or shadow: \n# chown root:shadow /etc/shadow- \n  -OR- \n# chown root:root /etc/shadow- \nRun the following command to remove excess permissions form /etc/shadow-: \n# chmod u-x,g-wx,o-rwx /etc/shadow- \nDefault Value: \nAccess: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.7 Ensure permissions on /etc/gshadow are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/gshadow file is used to store the information about groups that is critical to \nthe security of those accounts, such as the hashed password and other security \ninformation.",
        "Rationale": "If attackers can gain read access to the /etc/gshadow file, they can easily run a \npassword cracking program against the hashed password to break it. Other security \ninformation that is stored in the /etc/gshadow file (such as group administrators) could \nalso be useful to subvert the group.",
        "Impact": "",
        "Audit": "Run the following command to verify /etc/gshadow is mode 640 or more restrictive, \nUid is 0/root and Gid is 0/root or `{GID}/shadow: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: ( %g/ %G)'  /etc/gshadow \nExample: \nAccess: (0640/-rw-r-----)  Uid: ( 0/ root) Gid: ( 42/ shadow)",
        "Remediation": "Run one of the following commands to set ownership of /etc/gshadow to root and \ngroup to either root or shadow: \n# chown root:shadow /etc/gshadow \n  -OR- \n# chown root:root /etc/gshadow \nRun the following command to remove excess permissions form /etc/gshadow: \n# chmod u-x,g-wx,o-rwx /etc/gshadow \nDefault Value: \nAccess: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.8 Ensure permissions on /etc/gshadow- are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The /etc/gshadow- file is used to store backup information about groups that is critical \nto the security of those accounts, such as the hashed password and other security \ninformation.",
        "Rationale": "It is critical to ensure that the /etc/gshadow- file is protected from unauthorized \naccess. Although it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Impact": "",
        "Audit": "Run the following command to verify /etc/gshadow- is mode 640 or more restrictive, \nUid is 0/root and Gid is 0/root or {GID}/shadow: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: ( %g/ %G)'  /etc/gshadow- \nExample: \nAccess: (0640/-rw-r-----)  Uid: ( 0/ root) Gid: ( 42/ shadow)",
        "Remediation": "Run one of the following commands to set ownership of /etc/gshadow- to root and \ngroup to either root or shadow: \n# chown root:shadow /etc/gshadow- \n  -OR- \n# chown root:root /etc/gshadow- \nRun the following command to remove excess permissions form /etc/gshadow-: \n# chmod u-x,g-wx,o-rwx /etc/gshadow- \nDefault Value: \nAccess: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.9 Ensure permissions on /etc/shells are configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "/etc/shells is a text file which contains the full pathnames of valid login shells. This \nfile is consulted by chsh and available to be queried by other programs.",
        "Rationale": "It is critical to ensure that the /etc/shells file is protected from unauthorized access. \nAlthough it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Impact": "",
        "Audit": "Run the following command to verify /etc/shells is mode 644 or more restrictive, Uid \nis 0/root and Gid is 0/root: \n# stat -Lc 'Access: (%#a/%A)  Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/shells \n \nAccess: (0644/-rw-r--r--)  Uid: ( 0/ root) Gid: ( 0/ root)",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/shells: \n# chmod u-x,go-wx /etc/shells \n# chown root:root /etc/shells \nDefault Value: \nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.10 Ensure permissions on /etc/security/opasswd are \nconfigured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "/etc/security/opasswd and it's backup /etc/security/opasswd.old hold user's \nprevious passwords if pam_unix or pam_pwhistory is in use on the system",
        "Rationale": "It is critical to ensure that /etc/security/opasswd is protected from unauthorized \naccess. Although it is protected by default, the file permissions could be changed either \ninadvertently or through malicious actions.",
        "Impact": "",
        "Audit": "Run the following commands to verify /etc/security/opasswd and \n/etc/security/opasswd.old are mode 600 or more restrictive, Uid is 0/root and \nGid is 0/root if they exist: \n#  [ -e \"/etc/security/opasswd\" ] && stat -Lc '%n Access: (%#a/%A)  Uid: ( \n%u/ %U) Gid: ( %g/ %G)' /etc/security/opasswd \n \n/etc/security/opasswd Access: (0600/-rw-------)  Uid: ( 0/ root) Gid: ( 0/ \nroot) \n -OR- \nNothing is returned \n#  [ -e \"/etc/security/opasswd.old\" ] && stat -Lc '%n Access: (%#a/%A)  Uid: \n( %u/ %U) Gid: ( %g/ %G)' /etc/security/opasswd.old \n \n/etc/security/opasswd.old Access: (0600/-rw-------)  Uid: ( 0/ root) Gid: ( \n0/ root) \n -OR- \nNothing is returned",
        "Remediation": "Run the following commands to remove excess permissions, set owner, and set group \non /etc/security/opasswd and /etc/security/opasswd.old is they exist: \n# [ -e \"/etc/security/opasswd\" ] && chmod u-x,go-rwx /etc/security/opasswd \n# [ -e \"/etc/security/opasswd\" ] && chown root:root /etc/security/opasswd \n# [ -e \"/etc/security/opasswd.old\" ] && chmod u-x,go-rwx \n/etc/security/opasswd.old \n# [ -e \"/etc/security/opasswd.old\" ] && chown root:root \n/etc/security/opasswd.old \nDefault Value: \n/etc/security/opasswd Access: (0600/-rw-------) Uid: ( 0/ root) Gid: ( 0/ root)",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008, T1222, \nT1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.1.11 Ensure world writable files and directories are secured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "World writable files are the least secure. Data in world-writable files can be modified and \ncompromised by any user on the system. World writable files may also indicate an \nincorrectly written script or program that could potentially be the cause of a larger \ncompromise to the system's integrity. See the chmod(2) man page for more \ninformation. \nSetting the sticky bit on world writable directories prevents users from deleting or \nrenaming files in that directory that are not owned by them.",
        "Rationale": "Data in world-writable files can be modified and compromised by any user on the \nsystem. World writable files may also indicate an incorrectly written script or program \nthat could potentially be the cause of a larger compromise to the system's integrity. \nThis feature prevents the ability to delete or rename files in world writable directories \n(such as /tmp ) that are owned by another user.",
        "Impact": "",
        "Audit": "Run the following script to verify: \n\u2022 \nNo world writable files exist \n\u2022 \nNo world writable directories without the sticky bit exist \n \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" l_output2=\"\" \n   l_smask='01000' \n   a_file=(); a_dir=() # Initialize arrays \n   a_path=(! -path \"/run/user/*\" -a ! -path \"/proc/*\" -a ! -path \n\"*/containerd/*\" -a ! -path \"*/kubelet/pods/*\" -a ! -path \n\"*/kubelet/plugins/*\" -a ! -path \"/sys/*\" -a ! -path \"/snap/*\") \n   while IFS= read -r l_mount; do \n      while IFS= read -r -d $'\\0' l_file; do \n         if [ -e \"$l_file\" ]; then \n            [ -f \"$l_file\" ] && a_file+=(\"$l_file\") # Add WR files \n            if [ -d \"$l_file\" ]; then # Add directories w/o sticky bit \n               l_mode=\"$(stat -Lc '%#a' \"$l_file\")\" \n               [ ! $(( $l_mode & $l_smask )) -gt 0 ] && a_dir+=(\"$l_file\") \n            fi \n         fi \n      done < <(find \"$l_mount\" -xdev \\( \"${a_path[@]}\" \\) \\( -type f -o -type \nd \\) -perm -0002 -print0 2> /dev/null) \n   done < <(findmnt -Dkerno fstype,target | awk '($1 !~ \n/^\\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ && $2 !~ \n/^(\\/run\\/user\\/|\\/tmp|\\/var\\/tmp)/){print $2}') \n   if ! (( ${#a_file[@]} > 0 )); then \n      l_output=\"$l_output\\n  - No world writable files exist on the local \nfilesystem.\" \n   else \n      l_output2=\"$l_output2\\n - There are \\\"$(printf '%s' \"${#a_file[@]}\")\\\" \nWorld writable files on the system.\\n   - The following is a list of World \nwritable files:\\n$(printf '%s\\n' \"${a_file[@]}\")\\n   - end of list\\n\" \n   fi \n   if ! (( ${#a_dir[@]} > 0 )); then \n      l_output=\"$l_output\\n  - Sticky bit is set on world writable \ndirectories on the local filesystem.\" \n   else \n      l_output2=\"$l_output2\\n - There are \\\"$(printf '%s' \"${#a_dir[@]}\")\\\" \nWorld writable directories without the sticky bit on the system.\\n   - The \nfollowing is a list of World writable directories without the sticky \nbit:\\n$(printf '%s\\n' \"${a_dir[@]}\")\\n   - end of list\\n\" \n   fi \n   unset a_path; unset a_arr; unset a_file; unset a_dir # Remove arrays \n   # If l_output2 is empty, we pass \n   if [ -z \"$l_output2\" ]; then \n      echo -e \"\\n- Audit Result:\\n  ** PASS **\\n - * Correctly configured * \n:\\n$l_output\\n\" \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - * Reasons for audit \nfailure * :\\n$l_output2\" \n      [ -n \"$l_output\" ] && echo -e \"- * Correctly configured * \n:\\n$l_output\\n\" \n   fi \n} \nNote: On systems with a large number of files and/or directories, this audit may be a \nlong running process",
        "Remediation": "\u2022 \nWorld Writable Files: \no It is recommended that write access is removed from other with the \ncommand ( chmod o-w <filename> ), but always consult relevant vendor \ndocumentation to avoid breaking any application dependencies on a given \nfile. \n\u2022 \nWorld Writable Directories: \no Set the sticky bit on all world writable directories with the command ( \nchmod a+t <directory_name> ) \nRun the following script to: \n\u2022 \nRemove other write permission from any world writable files \n\u2022 \nAdd the sticky bit to all world writable directories \n#!/usr/bin/env bash \n \n{ \n   l_smask='01000' \n   a_file=(); a_dir=() # Initialize arrays \n   a_path=(! -path \"/run/user/*\" -a ! -path \"/proc/*\" -a ! -path \n\"*/containerd/*\" -a ! -path \"*/kubelet/pods/*\" -a ! -path \n\"*/kubelet/plugins/*\" -a ! -path \"/sys/*\" -a ! -path \"/snap/*\") \n   while IFS= read -r l_mount; do \n      while IFS= read -r -d $'\\0' l_file; do \n         if [ -e \"$l_file\" ]; then \n            l_mode=\"$(stat -Lc '%#a' \"$l_file\")\" \n            if [ -f \"$l_file\" ]; then # Remove excess permissions from WW \nfiles \n               echo -e \" - File: \\\"$l_file\\\" is mode: \\\"$l_mode\\\"\\n  - \nremoving write permission on \\\"$l_file\\\" from \\\"other\\\"\" \n               chmod o-w \"$l_file\" \n            fi \n            if [ -d \"$l_file\" ]; then # Add sticky bit \n               if [ ! $(( $l_mode & $l_smask )) -gt 0 ]; then \n                  echo -e \" - Directory: \\\"$l_file\\\" is mode: \\\"$l_mode\\\" and \ndoesn't have the sticky bit set\\n  - Adding the sticky bit\" \n                  chmod a+t \"$l_file\" \n               fi \n            fi \n         fi \n      done < <(find \"$l_mount\" -xdev \\( \"${a_path[@]}\" \\) \\( -type f -o -type \nd \\) -perm -0002 -print0 2> /dev/null) \n   done < <(findmnt -Dkerno fstype,target | awk '($1 !~ \n/^\\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ && $2 !~ \n/^(\\/run\\/user\\/|\\/tmp|\\/var\\/tmp)/){print $2}')  \n}",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1222, T1222.002, T1548 \nTA0004, TA0005 \nM1022, M1028"
    },
    {
        "Title": "7.1.12 Ensure no files or directories without an owner and a group \nexist (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Administrators may delete users or groups from the system and neglect to remove all \nfiles and/or directories owned by those users or groups.",
        "Rationale": "A new user or group who is assigned a deleted user's user ID or group ID may then end \nup \"owning\" a deleted user or group's files, and thus have more access on the system \nthan was intended.",
        "Impact": "",
        "Audit": "Run the following script to verify no unowned or ungrouped files or directories exist: \n \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" l_output2=\"\" \n   a_nouser=(); a_nogroup=() # Initialize arrays \n   a_path=(! -path \"/run/user/*\" -a ! -path \"/proc/*\" -a ! -path \n\"*/containerd/*\" -a ! -path \"*/kubelet/pods/*\" -a ! -path \n\"*/kubelet/plugins/*\" -a ! -path \"/sys/fs/cgroup/memory/*\" -a ! -path \n\"/var/*/private/*\") \n   while IFS= read -r l_mount; do \n      while IFS= read -r -d $'\\0' l_file; do \n         if [ -e \"$l_file\" ]; then \n            while IFS=: read -r l_user l_group; do \n               [ \"$l_user\" = \"UNKNOWN\" ] && a_nouser+=(\"$l_file\") \n               [ \"$l_group\" = \"UNKNOWN\" ] && a_nogroup+=(\"$l_file\") \n            done < <(stat -Lc '%U:%G' \"$l_file\") \n         fi \n      done < <(find \"$l_mount\" -xdev \\( \"${a_path[@]}\" \\) \\( -type f -o -type \nd \\) \\( -nouser -o -nogroup \\) -print0 2> /dev/null) \n   done < <(findmnt -Dkerno fstype,target | awk '($1 !~ \n/^\\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ && $2 !~ \n/^\\/run\\/user\\//){print $2}') \n   if ! (( ${#a_nouser[@]} > 0 )); then \n      l_output=\"$l_output\\n  - No files or directories without a owner exist \non the local filesystem.\" \n   else \n      l_output2=\"$l_output2\\n  - There are \\\"$(printf '%s' \n\"${#a_nouser[@]}\")\\\" unowned files or directories on the system.\\n   - The \nfollowing is a list of unowned files and/or directories:\\n$(printf '%s\\n' \n\"${a_nouser[@]}\")\\n   - end of list\" \n   fi \n   if ! (( ${#a_nogroup[@]} > 0 )); then \n      l_output=\"$l_output\\n  - No files or directories without a group exist \non the local filesystem.\" \n   else \n      l_output2=\"$l_output2\\n  - There are \\\"$(printf '%s' \n\"${#a_nogroup[@]}\")\\\" ungrouped files or directories on the system.\\n   - The \nfollowing is a list of ungrouped files and/or directories:\\n$(printf '%s\\n' \n\"${a_nogroup[@]}\")\\n   - end of list\" \n   fi  \n   unset a_path; unset a_arr ; unset a_nouser; unset a_nogroup # Remove \narrays \n   if [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass \n      echo -e \"\\n- Audit Result:\\n  ** PASS **\\n - * Correctly configured * \n:\\n$l_output\\n\" \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - * Reasons for audit \nfailure * :\\n$l_output2\" \n      [ -n \"$l_output\" ] && echo -e \"\\n- * Correctly configured * \n:\\n$l_output\\n\" \n   fi \n} \nNote: On systems with a large number of files and/or directories, this audit may be a \nlong running process",
        "Remediation": "Remove or set ownership and group ownership of these files and/or directories to an \nactive user on the system as appropriate.",
        "References": "1. NIST SP 800-53 Rev. 5: AC-3. MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1222, T1222.002 \nTA0007 \nM1022"
    },
    {
        "Title": "7.1.13 Ensure SUID and SGID files are reviewed (Manual)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The owner of a file can set the file's permissions to run with the owner's or group's \npermissions, even if the user running the program is not the owner or a member of the \ngroup. The most common reason for a SUID or SGID program is to enable users to \nperform functions (such as changing their password) that require root privileges.",
        "Rationale": "There are valid reasons for SUID and SGID programs, but it is important to identify and \nreview such programs to ensure they are legitimate. Review the files returned by the \naction in the audit section and check to see if system binaries have a different \nchecksum than what from the package. This is an indication that the binary may have \nbeen replaced.",
        "Impact": "",
        "Audit": "Run the following script to generate a list of SUID and SGID files: \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" l_output2=\"\" \n   a_suid=(); a_sgid=() # initialize arrays \n   while IFS= read -r l_mount; do \n      while  IFS= read -r -d $'\\0' l_file; do \n         if [ -e \"$l_file\" ]; then \n            l_mode=\"$(stat -Lc '%#a' \"$l_file\")\" \n            [ $(( $l_mode & 04000 )) -gt 0 ] && a_suid+=(\"$l_file\") \n            [ $(( $l_mode & 02000 )) -gt 0 ] && a_sgid+=(\"$l_file\") \n         fi \n      done < <(find \"$l_mount\" -xdev -type f \\( -perm -2000 -o -perm -4000 \\) \n-print0 2>/dev/null) \n   done < <(findmnt -Dkerno fstype,target,options | awk '($1 !~ \n/^\\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ && $2 !~ \n/^\\/run\\/user\\// && $3 !~/noexec/ && $3 !~/nosuid/) {print $2}') \n   if ! (( ${#a_suid[@]} > 0 )); then \n      l_output=\"$l_output\\n - No executable SUID files exist on the system\" \n   else \n      l_output2=\"$l_output2\\n - List of \\\"$(printf '%s' \"${#a_suid[@]}\")\\\" \nSUID executable files:\\n$(printf '%s\\n' \"${a_suid[@]}\")\\n - end of list -\\n\" \n   fi \n   if ! (( ${#a_sgid[@]} > 0 )); then \n      l_output=\"$l_output\\n - No SGID files exist on the system\" \n   else \n      l_output2=\"$l_output2\\n - List of \\\"$(printf '%s' \"${#a_sgid[@]}\")\\\" \nSGID executable files:\\n$(printf '%s\\n' \"${a_sgid[@]}\")\\n - end of list -\\n\" \n   fi \n   [ -n \"$l_output2\" ] && l_output2=\"$l_output2\\n- Review the preceding \nlist(s) of SUID and/or SGID files to\\n- ensure that no rogue programs have \nbeen introduced onto the system.\\n\"  \n   unset a_arr; unset a_suid; unset a_sgid # Remove arrays \n   # If l_output2 is empty, Nothing to report \n   if [ -z \"$l_output2\" ]; then \n      echo -e \"\\n- Audit Result:\\n$l_output\\n\" \n   else \n      echo -e \"\\n- Audit Result:\\n$l_output2\\n\" \n      [ -n \"$l_output\" ] && echo -e \"$l_output\\n\" \n   fi \n} \nNote: on systems with a large number of files, this may be a long running process",
        "Remediation": "Ensure that no rogue SUID or SGID programs have been introduced into the system. \nReview the files returned by the action in the Audit section and confirm the integrity of \nthese binaries.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5, AC-3, MP-2",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1548, T1548.001 \nTA0004 \nM1028"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "7.2.1 Ensure accounts in /etc/passwd use shadowed passwords \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Local accounts can uses shadowed passwords. With shadowed passwords, The \npasswords are saved in shadow password file, /etc/shadow, encrypted by a salted \none-way hash. Accounts with a shadowed password have an x in the second field in \n/etc/passwd.",
        "Rationale": "The /etc/passwd file also contains information like user ID's and group ID's that are \nused by many system programs. Therefore, the /etc/passwd file must remain world \nreadable. In spite of encoding the password with a randomly-generated one-way hash \nfunction, an attacker could still break the system if they got access to the /etc/passwd \nfile. This can be mitigated by using shadowed passwords, thus moving the passwords in \nthe /etc/passwd file to /etc/shadow. The /etc/shadow file is set so only root will be \nable to read and write. This helps mitigate the risk of an attacker gaining access to the \nencoded passwords with which to perform a dictionary attack. \nNote: \n\u2022 \nAll accounts must have passwords or be locked to prevent the account from \nbeing used by an unauthorized user. \n\u2022 \nA user account with an empty second field in /etc/passwd allows the account to \nbe logged into by providing only the username.",
        "Impact": "",
        "Audit": "Run the following command and verify that no output is returned: \n# awk -F: '($2 != \"x\" ) { print \"User: \\\"\" $1 \"\\\" is not set to shadowed \npasswords \"}' /etc/passwd",
        "Remediation": "Run the following command to set accounts to use shadowed passwords and migrate \npasswords in /etc/passwd to /etc/shadow: \n# pwconv \nInvestigate to determine if the account is logged in and what it is being used for, to \ndetermine if it needs to be forced off.",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5 \n2. PWCONV(8) \nAdditional Information: \nThe pwconv command creates shadow from passwd and an optionally existing shadow. \n\u2022 \nThe pwunconv command creates passwd from passwd and shadow and then \nremoves shadow. \n\u2022 \nThe grpconv command creates gshadow from group and an optionally existing \ngshadow. \n\u2022 \nThe grpunconv command creates group from group and gshadow and then \nremoves gshadow. \nThese four programs all operate on the normal and shadow password and group files: \n/etc/passwd, /etc/group, /etc/shadow, and /etc/gshadow. \nEach program acquires the necessary locks before conversion. pwconv and grpconv \nare similar. First, entries in the shadowed file which don't exist in the main file are \nremoved. Then, shadowed entries which don't have x' as the password in the \nmain file are updated. Any missing shadowed entries are added. \nFinally, passwords in the main file are replaced with x'. These programs \ncan be used for initial conversion as well to update the shadowed file if the main file is \nedited by hand. \npwconv will use the values of PASS_MIN_DAYS, PASS_MAX_DAYS, and PASS_WARN_AGE \nfrom /etc/login.defs when adding new entries to /etc/shadow. \npwunconv and grpunconv are similar. Passwords in the main file are updated from the \nshadowed file. Entries which exist in the main file but not in the shadowed file are left \nalone. Finally, the shadowed file is removed. Some password aging information is lost \nby pwunconv. It will convert what it can.",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv7 \n16.4 Encrypt or Hash all Authentication Credentials \n \nEncrypt or hash with a salt all authentication credentials when stored. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008 \nTA0003 \nM1027"
    },
    {
        "Title": "7.2.2 Ensure /etc/shadow password fields are not empty \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "An account with an empty password field means that anybody may log in as that user \nwithout providing a password.",
        "Rationale": "All accounts must have passwords or be locked to prevent the account from being used \nby an unauthorized user.",
        "Impact": "",
        "Audit": "Run the following command and verify that no output is returned: \n# awk -F: '($2 == \"\" ) { print $1 \" does not have a password \"}' /etc/shadow",
        "Remediation": "If any accounts in the /etc/shadow file do not have a password, run the following \ncommand to lock the account until it can be determined why it does not have a \npassword: \n# passwd -l <username> \nAlso, check to see if the account is logged in and investigate what it is being used for to \ndetermine if it needs to be forced off.",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0003 \nM1027"
    },
    {
        "Title": "7.2.3 Ensure all groups in /etc/passwd exist in /etc/group \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Over time, system administration errors and changes can lead to groups being defined \nin /etc/passwd but not in /etc/group .",
        "Rationale": "Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to \nsystem security since group permissions are not properly managed.",
        "Impact": "",
        "Audit": "Run the following script to verify all GIDs in /etc/passwd exist in /etc/group: \n#!/usr/bin/env bash \n \n{ \n   a_passwd_group_gid=(\"$(awk -F: '{print $4}' /etc/passwd | sort -u)\") \n   a_group_gid=(\"$(awk -F: '{print $3}' /etc/group | sort -u)\") \n   a_passwd_group_diff=(\"$(printf '%s\\n' \"${a_group_gid[@]}\" \n\"${a_passwd_group_gid[@]}\" | sort | uniq -u)\") \n   while IFS= read -r l_gid; do \n      awk -F: '($4 == '\"$l_gid\"') {print \"  - User: \\\"\" $1 \"\\\" has GID: \\\"\" \n$4 \"\\\" which does not exist in /etc/group\" }' /etc/passwd \n   done < <(printf '%s\\n' \"${a_passwd_group_gid[@]}\" \n\"${a_passwd_group_diff[@]}\" | sort | uniq -D | uniq) \n   unset a_passwd_group_gid; unset a_group_gid; unset a_passwd_group_diff \n} \nNothing should be returned",
        "Remediation": "Analyze the output of the Audit step above and perform the appropriate action to correct \nany discrepancies found.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply \ndata access control lists, also known as access permissions, to local and remote \nfile systems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv8 \n14.6 Train Workforce Members on Recognizing and \nReporting Security Incidents \n \nTrain workforce members to be able to recognize a potential incident and be \nable to report such an incident.  \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1222, T1222.002 \nTA0003 \nM1027"
    },
    {
        "Title": "7.2.4 Ensure shadow group is empty (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The shadow group allows system programs which require access the ability to read the \n/etc/shadow file. No users should be assigned to the shadow group.",
        "Rationale": "Any users assigned to the shadow group would be granted read access to the \n/etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can \neasily run a password cracking program against the hashed passwords to break them. \nOther security information that is stored in the /etc/shadow file (such as expiration) \ncould also be useful to subvert additional user accounts.",
        "Impact": "",
        "Audit": "Run the following commands and verify no results are returned: \n# awk -F: '($1==\"shadow\") {print $NF}' /etc/group \n# awk -F: '($4 == '\"$(getent group shadow | awk -F: '{print $3}' | xargs)\"') \n{print \"  - user: \\\"\" $1 \"\\\" primary group is the shadow group\"}' /etc/passwd",
        "Remediation": "Run the following command to remove all users from the shadow group \n# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\\1/' /etc/group \nChange the primary group of any users with shadow as their primary group. \n# usermod -g <primary group> <user>",
        "References": "1. NIST SP 800-53 Rev. 5: IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1003, T1003.008 \nTA0005 \nM1022"
    },
    {
        "Title": "7.2.5 Ensure no duplicate UIDs exist (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Although the useradd program will not let you create a duplicate User ID (UID), it is \npossible for an administrator to manually edit the /etc/passwd file and change the UID \nfield.",
        "Rationale": "Users must be assigned unique UIDs for accountability and to ensure appropriate \naccess protections.",
        "Impact": "",
        "Audit": "Run the following script and verify no results are returned: \n#!/usr/bin/env bash \n \n{ \n  while read -r l_count l_uid; do \n    if [ \"$l_count\" -gt 1 ]; then \n      echo -e \"Duplicate UID: \\\"$l_uid\\\" Users: \\\"$(awk -F: '($3 == n) { \nprint $1 }' n=$l_uid /etc/passwd | xargs)\\\"\" \n    fi \n  done < <(cut -f3 -d\":\" /etc/passwd | sort -n | uniq -c) \n}",
        "Remediation": "Based on the results of the audit script, establish unique UIDs and review all files owned \nby the shared UIDs to determine which UID they are supposed to belong to.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0005 \nM1027",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "7.2.6 Ensure no duplicate GIDs exist (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Although the groupadd program will not let you create a duplicate Group ID (GID), it is \npossible for an administrator to manually edit the /etc/group file and change the GID \nfield.",
        "Rationale": "User groups must be assigned unique GIDs for accountability and to ensure appropriate \naccess protections.",
        "Impact": "",
        "Audit": "Run the following script and verify no results are returned: \n#!/usr/bin/env bash \n \n{ \n   while read -r l_count l_gid; do \n      if [ \"$l_count\" -gt 1 ]; then \n      echo -e \"Duplicate GID: \\\"$l_gid\\\" Groups: \\\"$(awk -F: '($3 == n) { \nprint $1 }' n=$l_gid /etc/group | xargs)\\\"\" \n    fi \n  done < <(cut -f3 -d\":\" /etc/group | sort -n | uniq -c) \n}",
        "Remediation": "Based on the results of the audit script, establish unique GIDs and review all files \nowned by the shared GID to determine which group they are supposed to belong to.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \nAdditional Information: \nYou can also use the grpck command to check for other inconsistencies in the \n/etc/group file. \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0005 \nM1027",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "7.2.7 Ensure no duplicate user names exist (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "Although the useradd program will not let you create a duplicate user name, it is \npossible for an administrator to manually edit the /etc/passwd file and change the user \nname.",
        "Rationale": "If a user is assigned a duplicate user name, it will create and have access to files with \nthe first UID for that username in /etc/passwd . For example, if \"test4\" has a UID of \n1000 and a subsequent \"test4\" entry has a UID of 2000, logging in as \"test4\" will use \nUID 1000. Effectively, the UID is shared, which is a security problem.",
        "Impact": "",
        "Audit": "Run the following script and verify no results are returned: \n#!/usr/bin/env bash \n \n{ \n   while read -r l_count l_user; do \n      if [ \"$l_count\" -gt 1 ]; then \n         echo -e \"Duplicate User: \\\"$l_user\\\" Users: \\\"$(awk -F: '($1 == n) { \nprint $1 }' n=$l_user /etc/passwd | xargs)\\\"\" \n      fi \n   done < <(cut -f1 -d\":\" /etc/group | sort -n | uniq -c) \n}",
        "Remediation": "Based on the results of the audit script, establish unique user names for the users. File \nownerships will automatically reflect the change as long as the users have unique UIDs.",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0004 \nM1027 \n \n7.2.8 Ensure no duplicate group names exist (Automated) \nProfile Applicability: \n\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation \nDescription: \nAlthough the groupadd program will not let you create a duplicate group name, it is \npossible for an administrator to manually edit the /etc/group file and change the group \nname. \nRationale: \nIf a group is assigned a duplicate group name, it will create and have access to files \nwith the first GID for that group in /etc/group . Effectively, the GID is shared, which is \na security problem. \nAudit: \nRun the following script and verify no results are returned: \n#!/usr/bin/env bash \n \n{ \n   while read -r l_count l_group; do \n      if [ \"$l_count\" -gt 1 ]; then \n         echo -e \"Duplicate Group: \\\"$l_group\\\" Groups: \\\"$(awk -F: '($1 == \nn) { print $1 }' n=$l_group /etc/group | xargs)\\\"\" \n      fi \n   done < <(cut -f1 -d\":\" /etc/group | sort -n | uniq -c) \n} \nRemediation: \nBased on the results of the audit script, establish unique names for the user groups. File \ngroup ownerships will automatically reflect the change as long as the groups have \nunique GIDs. \nReferences: \n1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5 \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1078, T1078.001, \nT1078.003 \nTA0004 \nM1027",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "7.2.9 Ensure local interactive user home directories are \nconfigured (Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "The user home directory is space defined for the particular user to set local environment \nvariables and to store personal files. While the system administrator can establish \nsecure permissions for users' home directories, the users can easily override these. \nUsers can be defined in /etc/passwd without a home directory or with a home directory \nthat does not actually exist.",
        "Rationale": "Since the user is accountable for files stored in the user home directory, the user must \nbe the owner of the directory. Group or world-writable user home directories may enable \nmalicious users to steal or modify other users' data or to gain another user's system \nprivileges. If the user's home directory does not exist or is unassigned, the user will be \nplaced in \"/\" and will not be able to write any files or have local environment variables \nset.",
        "Impact": "",
        "Audit": "Run the following script to Ensure: \n\u2022 \nlocal interactive user home directories exist \n\u2022 \nEnsure local interactive users own their home directories \n\u2022 \nEnsure local interactive user home directories are mode 750 or more restrictive \n \n#!/usr/bin/env bash \n \n{ \n   l_output=\"\" l_output2=\"\" l_heout2=\"\" l_hoout2=\"\" l_haout2=\"\" \n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed \n-rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\" \n   unset a_uarr && a_uarr=() # Clear and initialize array \n   while read -r l_epu l_eph; do # Populate array with users and user home \nlocation \n      a_uarr+=(\"$l_epu $l_eph\") \n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" \n$(NF-1) }' /etc/passwd)\" \n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users \nbefore proceeding  \n   [ \"$l_asize \" -gt \"10000\" ] && echo -e \"\\n  ** INFO **\\n  - \\\"$l_asize\\\" \nLocal interactive users found on the system\\n  - This may be a long running \ncheck\\n\" \n   while read -r l_user l_home; do \n      if [ -d \"$l_home\" ]; then \n         l_mask='0027' \n         l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\" \n         while read -r l_own l_mode; do \n            [ \"$l_user\" != \"$l_own\" ] && l_hoout2=\"$l_hoout2\\n  - User: \n\\\"$l_user\\\" Home \\\"$l_home\\\" is owned by: \\\"$l_own\\\"\" \n            if [ $(( $l_mode & $l_mask )) -gt 0 ]; then \n               l_haout2=\"$l_haout2\\n  - User: \\\"$l_user\\\" Home \\\"$l_home\\\" is \nmode: \\\"$l_mode\\\" should be mode: \\\"$l_max\\\" or more restrictive\" \n            fi \n         done <<< \"$(stat -Lc '%U %#a' \"$l_home\")\" \n      else \n         l_heout2=\"$l_heout2\\n  - User: \\\"$l_user\\\" Home \\\"$l_home\\\" Doesn't \nexist\" \n      fi \n   done <<< \"$(printf '%s\\n' \"${a_uarr[@]}\")\" \n   [ -z \"$l_heout2\" ] && l_output=\"$l_output\\n   - home directories exist\" || \nl_output2=\"$l_output2$l_heout2\" \n   [ -z \"$l_hoout2\" ] && l_output=\"$l_output\\n   - own their home directory\" \n|| l_output2=\"$l_output2$l_hoout2\" \n   [ -z \"$l_haout2\" ] && l_output=\"$l_output\\n   - home directories are mode: \n\\\"$l_max\\\" or more restrictive\" || l_output2=\"$l_output2$l_haout2\" \n   [ -n \"$l_output\" ] && l_output=\"  - All local interactive users:$l_output\" \n   if [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass \n      echo -e \"\\n- Audit Result:\\n  ** PASS **\\n - * Correctly configured * \n:\\n$l_output\" \n   else \n      echo -e \"\\n- Audit Result:\\n  ** FAIL **\\n - * Reasons for audit \nfailure * :\\n$l_output2\" \n      [ -n \"$l_output\" ] && echo -e \"\\n- * Correctly configured * \n:\\n$l_output\" \n   fi \n}",
        "Remediation": "If a local interactive users' home directory is undefined and/or doesn't exist, follow local \nsite policy and perform one of the following: \n\u2022 \nLock the user account \n\u2022 \nRemove the user from the system \n\u2022 \ncreate a directory for the user. If undefined, edit /etc/passwd and add the \nabsolute path to the directory to the last field of the user. \nRun the following script to: \n\u2022 \nRemove excessive permissions from local interactive users home directories \n\u2022 \nUpdate the home directory's owner \n \n#!/usr/bin/env bash \n \n{ \n   l_output2=\"\" \n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed \n-rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\" \n   unset a_uarr && a_uarr=() # Clear and initialize array \n   while read -r l_epu l_eph; do # Populate array with users and user home \nlocation \n      a_uarr+=(\"$l_epu $l_eph\") \n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" \n$(NF-1) }' /etc/passwd)\" \n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users \nbefore proceeding  \n   [ \"$l_asize \" -gt \"10000\" ] && echo -e \"\\n  ** INFO **\\n  - \\\"$l_asize\\\" \nLocal interactive users found on the system\\n  - This may be a long running \nprocess\\n\" \n   while read -r l_user l_home; do \n      if [ -d \"$l_home\" ]; then \n         l_mask='0027' \n         l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\" \n         while read -r l_own l_mode; do \n            if [ \"$l_user\" != \"$l_own\" ]; then \n               l_output2=\"$l_output2\\n  - User: \\\"$l_user\\\" Home \\\"$l_home\\\" \nis owned by: \\\"$l_own\\\"\\n  -  changing ownership to: \\\"$l_user\\\"\\n\" \n               chown \"$l_user\" \"$l_home\" \n            fi \n            if [ $(( $l_mode & $l_mask )) -gt 0 ]; then \n               l_output2=\"$l_output2\\n  - User: \\\"$l_user\\\" Home \\\"$l_home\\\" \nis mode: \\\"$l_mode\\\" should be mode: \\\"$l_max\\\" or more restrictive\\n  -  \nremoving excess permissions\\n\" \n               chmod g-w,o-rwx \"$l_home\" \n            fi \n         done <<< \"$(stat -Lc '%U %#a' \"$l_home\")\" \n      else \n         l_output2=\"$l_output2\\n  - User: \\\"$l_user\\\" Home \\\"$l_home\\\" \nDoesn't exist\\n  -  Please create a home in accordance with local site \npolicy\" \n      fi \n   done <<< \"$(printf '%s\\n' \"${a_uarr[@]}\")\" \n   if [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass \n      echo -e \" - No modification needed to local interactive users home \ndirectories\" \n   else \n      echo -e \"\\n$l_output2\" \n   fi \n}",
        "References": "",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1222, T1222.002 \nTA0005 \nM1022"
    },
    {
        "Title": "7.2.10 Ensure local interactive user dot files access is configured \n(Automated)",
        "Profile Applicability": "\u2022  Level 1 - Server \n\u2022  Level 1 - Workstation",
        "Description": "While the system administrator can establish secure permissions for users' \"dot\" files, \nthe users can easily override these. \n\u2022 \n.forward file specifies an email address to forward the user's mail to. \n\u2022 \n.rhost file provides the \"remote authentication\" database for the rcp, rlogin, and \nrsh commands and the rcmd() function. These files bypass the standard \npassword-based user authentication mechanism. They specify remote hosts and \nusers that are considered trusted (i.e. are allowed to access the local system \nwithout supplying a password) \n\u2022 \n.netrc file contains data for logging into a remote host or passing authentication \nto an API. \n\u2022 \n.bash_history file keeps track of the user\u2019s commands.",
        "Rationale": "User configuration files with excessive or incorrect access may enable malicious users \nto steal or modify other users' data or to gain another user's system privileges.",
        "Impact": "",
        "Audit": "Run the following script to verify local interactive user dot files: \n\u2022 \nDon't include .forward, .rhost, or .netrc files \n\u2022 \nAre mode 0644 or more restrictive \n\u2022 \nAre owned by the local interactive user \n\u2022 \nAre group owned by the user's primary group \n\u2022 \n \n.bash_history is mode 0600 or more restrictive \nNote: If a .netrc file is required, and follows local site policy, it should be mode 0600 or \nmore restrictive. \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=(); a_output3=() \n   l_maxsize=\"1000\" # Maximum number of local interactive users before \nwarning (Default 1,000) \n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed \n-rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\" \n   a_user_and_home=() # Create array with local users and their home \ndirectories \n   while read -r l_local_user l_local_user_home; do # Populate array with \nusers and user home location \n      [[ -n \"$l_local_user\" && -n \"$l_local_user_home\" ]] && \na_user_and_home+=(\"$l_local_user:$l_local_user_home\") \n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" \n$(NF-1) }' /etc/passwd)\" \n   l_asize=\"${#a_user_and_home[@]}\" # Here if we want to look at number of \nusers before proceeding  \n   [ \"${#a_user_and_home[@]}\" -gt \"$l_maxsize\" ] && printf '%s\\n' \"\" \"  ** \nINFO **\" \\ \n   \"  - \\\"$l_asize\\\" Local interactive users found on the system\" \\ \n   \"  - This may be a long running check\" \"\" \n   file_access_chk() \n   { \n      a_access_out=() \n      l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\" \n      if [ $(( $l_mode & $l_mask )) -gt 0 ]; then \n         a_access_out+=(\"  - File: \\\"$l_hdfile\\\" is mode: \\\"$l_mode\\\" and \nshould be mode: \\\"$l_max\\\" or more restrictive\") \n      fi \n      if [[ ! \"$l_owner\" =~ ($l_user) ]]; then \n         a_access_out+=(\"  - File: \\\"$l_hdfile\\\" owned by: \\\"$l_owner\\\" and \nshould be owned by \\\"${l_user//|/ or }\\\"\") \n      fi \n      if [[ ! \"$l_gowner\" =~ ($l_group) ]]; then \n         a_access_out+=(\"  - File: \\\"$l_hdfile\\\" group owned by: \n\\\"$l_gowner\\\" and should be group owned by \\\"${l_group//|/ or }\\\"\") \n      fi \n   } \n   while IFS=: read -r l_user l_home; do \n      a_dot_file=(); a_netrc=(); a_netrc_warn=(); a_bhout=(); a_hdirout=() \n      if [ -d \"$l_home\" ]; then \n         l_group=\"$(id -gn \"$l_user\" | xargs)\";l_group=\"${l_group// /|}\" \n         while IFS= read -r -d $'\\0' l_hdfile; do \n            while read -r l_mode l_owner l_gowner; do \n               case \"$(basename \"$l_hdfile\")\" in \n                  .forward | .rhost ) \n                     a_dot_file+=(\"  - File: \\\"$l_hdfile\\\" exists\") ;; \n                  .netrc ) \n                     l_mask='0177'; file_access_chk \n                     if [ \"${#a_access_out[@]}\" -gt 0 ]; then \n                        a_netrc+=(\"${a_access_out[@]}\") \n                     else \n                        a_netrc_warn+=(\"   - File: \\\"$l_hdfile\\\" exists\") \n                     fi ;; \n                  .bash_history ) \n                     l_mask='0177'; file_access_chk \n \n                     [ \"${#a_access_out[@]}\" -gt 0 ] && \na_bhout+=(\"${a_access_out[@]}\") ;; \n                  * ) \n                     l_mask='0133'; file_access_chk \n                     [ \"${#a_access_out[@]}\" -gt 0 ] && \na_hdirout+=(\"${a_access_out[@]}\") ;; \n               esac \n            done < <(stat -Lc '%#a %U %G' \"$l_hdfile\") \n         done < <(find \"$l_home\" -xdev -type f -name '.*' -print0) \n      fi \n      if [[ \"${#a_dot_file[@]}\" -gt 0 || \"${#a_netrc[@]}\" -gt 0 || \n\"${#a_bhout[@]}\" -gt 0 || \"${#a_hdirout[@]}\" -gt 0 ]]; then \n         a_output2+=(\" - User: \\\"$l_user\\\" Home Directory: \\\"$l_home\\\"\" \n\"${a_dot_file[@]}\" \"${a_netrc[@]}\" \"${a_bhout[@]}\" \"${a_hdirout[@]}\") \n      fi \n      [ \"${#a_netrc_warn[@]}\" -gt 0 ] && a_output3+=(\" - User: \\\"$l_user\\\" \nHome Directory: \\\"$l_home\\\"\" \"${a_netrc_warn[@]}\") \n   done <<< \"$(printf '%s\\n' \"${a_user_and_home[@]}\")\" \n   if [ \"${#a_output2[@]}\" -le 0 ]; then # If l_output2 is empty, we pass \n      [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"  ** WARNING **\" \n\"${a_output3[@]}\" \n      printf '%s\\n' \"- Audit Result:\" \"  ** PASS **\" \n   else \n      printf '%s\\n' \"- Audit Result:\" \"  ** FAIL **\" \" - * Reasons for audit \nfailure * :\" \"${a_output2[@]}\" \"\" \n      [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"  ** WARNING **\" \n\"${a_output3[@]}\" \n   fi \n}",
        "Remediation": "Making global modifications to users' files without alerting the user community can result \nin unexpected outages and unhappy users. Therefore, it is recommended that a \nmonitoring policy be established to report user dot file permissions and determine the \naction to be taken in accordance with site policy. \nThe following script will: \n\u2022 \nremove excessive permissions on dot files within interactive users' home \ndirectories \n\u2022 \nchange ownership of dot files within interactive users' home directories to the \nuser \n\u2022 \nchange group ownership of dot files within interactive users' home directories to \nthe user's primary group \n\u2022 \nlist .forward and .rhost files to be investigated and manually deleted \n \n#!/usr/bin/env bash \n \n{ \n   a_output2=(); a_output3=() \n   l_maxsize=\"1000\" # Maximum number of local interactive users before \nwarning (Default 1,000) \n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed \n-rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\" \n   a_user_and_home=() # Create array with local users and their home \ndirectories \n   while read -r l_local_user l_local_user_home; do # Populate array with \nusers and user home location \n      [[ -n \"$l_local_user\" && -n \"$l_local_user_home\" ]] && \na_user_and_home+=(\"$l_local_user:$l_local_user_home\") \n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" \n$(NF-1) }' /etc/passwd)\" \n   l_asize=\"${#a_user_and_home[@]}\" # Here if we want to look at number of \nusers before proceeding  \n   [ \"${#a_user_and_home[@]}\" -gt \"$l_maxsize\" ] && printf '%s\\n' \"\" \"  ** \nINFO **\" \\ \n   \"  - \\\"$l_asize\\\" Local interactive users found on the system\" \\ \n   \"  - This may be a long running check\" \"\" \n   file_access_fix() \n   { \n      a_access_out=() \n      l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\" \n      if [ $(( $l_mode & $l_mask )) -gt 0 ]; then \n         printf '%s\\n' \"\" \"  - File: \\\"$l_hdfile\\\" is mode: \\\"$l_mode\\\" and \nshould be mode: \\\"$l_max\\\" or more restrictive\" \\ \n         \"     Updating file: \\\"$l_hdfile\\\" to be mode: \\\"$l_max\\\" or more \nrestrictive\" \n         chmod \"$l_change\" \"$l_hdfile\" \n      fi \n      if [[ ! \"$l_owner\" =~ ($l_user) ]]; then \n         printf '%s\\n' \"\" \"  - File: \\\"$l_hdfile\\\" owned by: \\\"$l_owner\\\" and \nshould be owned by \\\"${l_user//|/ or }\\\"\" \\ \n         \"     Updating file: \\\"$l_hdfile\\\" to be owned by \\\"${l_user//|/ or \n}\\\"\" \n         chown \"$l_user\" \"$l_hdfile\" \n      fi \n      if [[ ! \"$l_gowner\" =~ ($l_group) ]]; then \n         printf '%s\\n' \"\" \"  - File: \\\"$l_hdfile\\\" group owned by: \n\\\"$l_gowner\\\" and should be group owned by \\\"${l_group//|/ or }\\\"\" \\ \n         \"     Updating file: \\\"$l_hdfile\\\" to be group owned by \n\\\"${l_group//|/ or }\\\"\" \n         chgrp \"$l_group\" \"$l_hdfile\" \n      fi \n   } \n   while IFS=: read -r l_user l_home; do \n      a_dot_file=(); a_netrc=(); a_netrc_warn=(); a_bhout=(); a_hdirout=() \n      if [ -d \"$l_home\" ]; then \n         l_group=\"$(id -gn \"$l_user\" | xargs)\";l_group=\"${l_group// /|}\" \n         while IFS= read -r -d $'\\0' l_hdfile; do \n            while read -r l_mode l_owner l_gowner; do \n               case \"$(basename \"$l_hdfile\")\" in \n                  .forward | .rhost ) \n                     a_dot_file+=(\"  - File: \\\"$l_hdfile\\\" exists\" \"    \n \nPlease review and manually delete this file\") ;; \n                  .netrc ) \n                     l_mask='0177'; l_change=\"u-x,go-rwx\"; file_access_fix \n                     a_netrc_warn+=(\"   - File: \\\"$l_hdfile\\\" exists\") ;; \n                  .bash_history ) \n                     l_mask='0177'; l_change=\"u-x,go-rwx\"; file_access_fix ;; \n                  * ) \n                     l_mask='0133'; l_change=\"u-x,go-wx\"; file_access_fix ;; \n               esac \n            done < <(stat -Lc '%#a %U %G' \"$l_hdfile\") \n         done < <(find \"$l_home\" -xdev -type f -name '.*' -print0) \n      fi \n      [ \"${#a_dot_file[@]}\" -gt 0 ] && a_output2+=(\" - User: \\\"$l_user\\\" Home \nDirectory: \\\"$l_home\\\"\" \"${a_dot_file[@]}\") \n      [ \"${#a_netrc_warn[@]}\" -gt 0 ] && a_output3+=(\" - User: \\\"$l_user\\\" \nHome Directory: \\\"$l_home\\\"\" \"${a_netrc_warn[@]}\") \n   done <<< \"$(printf '%s\\n' \"${a_user_and_home[@]}\")\" \n   [ \"${#a_output3[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"  ** WARNING **\" \n\"${a_output3[@]}\" \"\" \n   [ \"${#a_output2[@]}\" -gt 0 ] && printf '%s\\n' \"\" \"${a_output2[@]}\" \n}",
        "References": "1. NIST SP 800-53 Rev. 5: CM-1, CM-2, CM-6, CM-7, IA-5",
        "Additional Information": "",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf \n \n \nMITRE ATT&CK Mappings: \nTechniques / Sub-\ntechniques \nTactics \nMitigations \nT1222, T1222.001, \nT1222.002, T1552, \nT1552.003, T1552.004 \nTA0005 \nM1022"
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    },
    {
        "Title": "",
        "Profile Applicability": "",
        "Description": "",
        "Rationale": "",
        "Impact": "",
        "Audit": "",
        "Remediation": "",
        "References": "",
        "Additional Information": "",
        "CIS Control": ""
    }
]