[
    {
        "Title": "1 Install Updates, Patches and Additional Security Software",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Software vendors release security patches and software updates for their products \nwhen security vulnerabilities are discovered. There is no simple way to complete this \naction without a network connection to an Apple software repository. Please ensure \nappropriate access for this control. This check is only for what Apple provides through \nsoftware update. \nSoftware updates should be run at minimum every 30 days. Run the following command \nto verify when software update was previously run: \n$ /usr/bin/sudo defaults read \n/Library/Preferences/com.apple.SoftwareUpdate | grep -e \nLastFullSuccessfulDate. \nThe response should be in the last 30 days (Example): LastFullSuccessfulDate = \n\"2020-07-30 12:45:25 +0000\";",
        "Rationale": "It is important that these updates be applied in a timely manner to prevent unauthorized \npersons from exploiting the identified vulnerabilities. \nImpact: \nInstallation of updates can be disruptive to the users especially if a restart is required. \nMajor updates need to be applied after creating an organizational patch policy. It is also \nadvised to run updates and forced restarts during system downtime and not while in \nactive use.",
        "Audit": "Graphical Method: \nPerform the following to ensure there are no available software updates: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select Show Updates to verify that there are no software updates available \nTerminal Method: \nRun the following command to verify there are no software updates: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/softwareupdate -l \n \nSoftware Update Tool \n \nFinding available software \nNo new software available.  \nNote: If you are running a previous version of macOS, the output will say that the \ncurrent version is available. As long as the system is on the current point release of \nmacOS, it is compliant. It is recommended that your organization moves to the current \nversion of macOS once a .1 version is released. Be aware that old macOS versions will \nstop receiving any updates. \nNote: Computers that have installed pre-release software in the past will fail this check \nif there are pre-release software updates available when audited.",
        "Remediation": "Graphical Method: \nPerform the following to install all available software updates: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select Update All \nTerminal Method: \nRun the following command to verify what packages need to be installed: \n$ /usr/bin/sudo /usr/sbin/softwareupdate -l  \nThe output will include the following: \nSoftware Update found the following new or updated software: \nRun the following command to install all the packages that need to be updated: \nTo install all updates run the command: \n$ /usr/bin/sudo /usr/sbin/softwareupdate -i -a \nOr run the following command to install individual packages: \n$ /usr/bin/sudo /usr/sbin/softwareupdate -i '<package name>' \nNote: If one of the software updates listed includes Action: restart, then you must \nattach the -R flag to force a system restart. If the system update is complete but no \nrestart occurs, then the system is in an unknown state that requires a future restart. It is \nadvised to run updates and forced restarts during system downtime and not while in \nactive use. \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/softwareupdate -l  \n \nSoftware Update Tool \n \nFinding available software \nSoftware Update found the following new or updated software: \n* Label: ProVideoFormats-2.2.7 \n \nTitle: Pro Video Formats, Version: 2.2.7, Size: 9693KiB, Recommended: \nYES,  \n* Label: Command Line Tools for Xcode-15.0 \n \nTitle: Command Line Tools for Xcode, Version: 15.0, Size: 721962KiB, \nRecommended: YES,  \n \n$ /usr/bin/sudo /usr/sbin/softwareupdate -i 'ProVideoFormats-2.2.7' \n \nSoftware Update Tool \n \nFinding available software \nAttempting to quit apps: ( \n    \"com.apple.Compressor\" \n) \nWaiting for user to quit any relevant apps \nSuccessfully quit all apps \n \nDownloaded Pro Video Formats \nInstalling Pro Video Formats \nDone with Pro Video Formats \nDone. \nIn the above example, if a restart was required, the command to remediate would be \n/usr/bin/sudo /usr/sbin/softwareupdate -i 'ProVideoFormats-2.2.7' -R",
        "References": "1. https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-40r4.pdf \nAdditional Information: \nIf software update has not been ran on the system previously (GUI or in Terminal), then \nthe End User License agreement may need to be accepted when running \nsoftwareupdate -i. Where that is needed, include the --agree-to-license option.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "1.2 Ensure Auto Update Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Auto Update verifies that your system has the newest security patches and software \nupdates. If \"Automatically check for updates\" is not selected, background updates for \nnew malware definition files from Apple for XProtect and Gatekeeper will not occur.",
        "Rationale": "It is important that a system has the newest updates applied so as to prevent \nunauthorized persons from exploiting identified vulnerabilities. \nImpact: \nWithout automatic update, updates may not be made in a timely manner and the system \nwill be exposed to additional risk.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure the system is automatically checking for updates: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Verify that Check for updates is enabled \nTerminal Method: \nRun the following command to verify that software updates are automatically checked: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\ \n.objectForKey('AutomaticCheckEnabled').js \nEOS \n \ntrue \nNote: If automatic updates were selected during system setup, this setting may not \nhave left an auditable artifact. Please turn off the check and re-enable when the GUI \ndoes not reflect the audited results.",
        "Remediation": "Graphical Method: \nPerform the following steps to enable the system to automatically check for updates: \n \nInternal Only - General \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Set Check for updates to enabled \n6. Select Done \nTerminal Method: \nRun the following command to enable auto update: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.SoftwareUpdate AutomaticCheckEnabled -bool \ntrue   \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.SoftwareUpdate \n2. The key to include is AutomaticCheckEnabled \n3. The key must be set to <true/>",
        "References": "1. http://macops.ca/os-x-admins-your-clients-are-not-getting-background-security-\nupdates/ \n2. https://derflounder.wordpress.com/2014/12/17/forcing-xprotect-blacklist-updates-\non-mavericks-and-yosemite/",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "1.3 Ensure Download New Updates When Available Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "In the GUI, both \"Install macOS updates\" and \"Install app updates from the App Store\" \nare dependent on whether \"Download new updates when available\" is selected.",
        "Rationale": "It is important that a system has the newest updates downloaded so that they can be \napplied. \nImpact: \nIf \"Download new updates when available\" is not selected, updates may not be made in \na timely manner and the system will be exposed to additional risk.",
        "Audit": "Perform the following to ensure the system is automatically checking for updates: \nGraphical Method: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Verify that Download new updates when available is enabled \nTerminal Method: \nRun the following command to verify that software updates are automatically checked: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\ \n.objectForKey('AutomaticDownload').js \nEOS \n \ntrue \nNote: If automatic updates were selected during system setup, this setting may not \nhave left an auditable artifact. Please turn off the check and re-enable when the GUI \ndoes not reflect the audited results.",
        "Remediation": "Perform the following to enable the system to automatically check for updates: \nGraphical Method: \n \nInternal Only - General \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Set Download new updates when available to enabled \n6. Select Done \nTerminal Method: \nRun the following command to enable auto update: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload -bool true   \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.SoftwareUpdate \n2. The key to include is AutomaticDownload \n3. The key must be set to <true/>",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "1.4 Ensure Install of macOS Updates Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Ensure that macOS updates are installed after they are available from Apple. This \nsetting enables macOS updates to be automatically installed. Some environments will \nwant to approve and test updates before they are delivered. It is best practice to test \nfirst where updates can and have caused disruptions to operations. Automatic updates \nshould be turned off where changes are tightly controlled and there are mature testing \nand approval processes. Automatic updates should not be turned off simply to allow the \nadministrator to contact users in order to verify installation. A dependable, repeatable \nprocess involving a patch agent or remote management tool should be in place before \nauto-updates are turned off.",
        "Rationale": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being \nexploited. \nImpact: \nUnpatched software may be exploited.",
        "Audit": "Graphical Method: \nPerform the following to ensure that macOS updates are set to auto update: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Verify that Install macOS updates is enabled \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Automatically Install macOS Updates set \nto True \n \nInternal Only - General \nTerminal Method: \nRun the following command to verify that macOS updates are automatically checked \nand installed: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\ \n.objectForKey('AutomaticallyInstallMacOSUpdates').js \nEOS \n \ntrue \nNote: If automatic updates were selected during system setup, this setting may not \nhave left an auditable artifact. Please turn off the check and re-enable when the GUI \ndoes not reflect the audited results.",
        "Remediation": "Graphical Method: \nPerform the following steps to enable macOS updates to run automatically: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Set Install macOS updates to enabled \n6. Select Done \nTerminal Method: \nRun the following command to to enable automatic checking and installing of macOS \nupdates: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.SoftwareUpdate \nAutomaticallyInstallMacOSUpdates -bool TRUE \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.SoftwareUpdate \n2. The key to include is AutomaticallyInstallMacOSUpdates \n3. The key must be set to <true/>",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "1.5 Ensure Install Application Updates from the App Store Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Ensure that application updates are installed after they are available from Apple. These \nupdates do not require reboots or administrator privileges for end users.",
        "Rationale": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being \nexploited. \nImpact: \nUnpatched software may be exploited.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that App Store updates install automatically: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Verify that Install application updates from the App Store is enabled \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Automatically Install App Updates set to \nTrue \nTerminal Method: \nRun the following command to verify that App Store updates are auto updating: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.commerce')\\ \n  .objectForKey('AutoUpdate')) \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdat\ne')\\ \n  .objectForKey('AutomaticallyInstallAppUpdates')) \n  if ( pref1 == 1 || pref2 == 1 ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to enable App Store updates to install automatically: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Set Install application updates from the App Store to enabled \n6. Select Done \nTerminal Method: \nRun the following command to turn on App Store auto updating: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.commerce AutoUpdate -bool TRUE \nNote: This remediation requires a log out and log in to show in the GUI. \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.SoftwareUpdate \n2. The key to include is AutomaticallyInstallAppUpdates \n3. The key must be set to <true/> \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "1.6 Ensure Install Security Responses and System Files Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Ensure that system and security updates are installed after they are available from \nApple. This setting enables definition updates for XProtect and Gatekeeper. With this \nsetting in place, new malware and adware that Apple has added to the list of malware or \nuntrusted software will not execute. These updates do not require reboots or end user \nadmin rights. \nApple has introduced a security feature that allows for smaller downloads and the \ninstallation of security updates when a reboot is not required. This feature is only \navailable when the last regular update has already been applied. This feature \nemphasizes that a Mac must be up-to-date on patches so that Apple's security tools can \nbe used to quickly patch when a rapid response is necessary.",
        "Rationale": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being \nexploited. \nImpact: \nUnpatched software may be exploited.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that system data files and security updates install \nautomatically: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Verify that Install Security Responses and System files is enabled \nTerminal Method: \nRun the following commands to verify that system data files and security updates are \nautomatically checked: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdat\ne')\\ \n  .objectForKey('ConfigDataInstall')) \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdat\ne')\\ \n  .objectForKey('CriticalUpdateInstall')) \n  if ( pref1 == 1 && pref2 == 1 ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue \nNote: If automatic updates were selected during system setup, this setting may not \nhave left an auditable artifact. Please turn off the check and re-enable when the GUI \ndoes not reflect the audited results.",
        "Remediation": "Graphical Method: \nPerform the following steps to enable system data files and security updates to install \nautomatically: \n1. Open System Settings \n2. Select General \n3. Select Software Update \n4. Select the i \n5. Set Install Security Responses and System files to enabled \n6. Select Done \nTerminal Method: \nRun the following commands to enable automatic checking of system data files and \nsecurity updates: \n$ /usr/bin/sudo  /usr/bin/defaults write \n/Library/Preferences/com.apple.SoftwareUpdate ConfigDataInstall -bool true  \n \n$ /usr/bin/sudo  /usr/bin/defaults write \n/Library/Preferences/com.apple.SoftwareUpdate CriticalUpdateInstall -bool \ntrue \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.SoftwareUpdate \n2. The key to include is ConfigDataInstall \n \nInternal Only - General \n3. The key must be set to <true/> \n4. The key to also include is CriticalUpdateInstall \n5. The key must be set to <true/>",
        "References": "1. https://eclecticlight.co/2021/10/27/silently-updated-security-data-files-in-\nmonterey/ \n2. https://support.apple.com/en-us/HT202491 \n3. https://support.apple.com/guide/security/protecting-against-malware-\nsec469d47bd8/web \n4. https://support.apple.com/guide/deployment/rapid-security-responses-\ndep93ff7ea78/1/web/1.0",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv8 \n7.7 Remediate Detected Vulnerabilities \n \nRemediate detected vulnerabilities in software through processes and tooling \non a monthly, or more frequent, basis, based on the remediation process. \n \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf \n \n \nInternal Only - General \n1.7 Ensure Software Update Deferment Is Less Than or Equal to \n30 Days (Automated) \nProfile Applicability: \n\u2022  Level 1 \nDescription: \nApple provides the capability to manage software updates on Apple devices through \nmobile device management. Part of those capabilities permit organizations to defer \nsoftware updates and allow for testing. Many organizations have specialized software \nand configurations that may be negatively impacted by Apple updates. If software \nupdates are deferred, they should not be deferred for more than 30 days. This control \nonly verifies that deferred software updates are not deferred for more than 30 days. \nRationale: \nApple software updates almost always include security updates. Attackers evaluate \nupdates to create exploit code in order to attack unpatched systems. The longer a \nsystem remains unpatched, the greater an exploit possibility exists in which there are \npublicly reported vulnerabilities. \nImpact: \nSome organizations may need more than 30 days to evaluate the impact of software \nupdates. \nAudit: \nPerform the following to ensure that software updates are deferred at most 30 days: \nGraphical Method: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that Deferred Software Update Delays (Days) is set to \u2264 30 \nTerminal Method: \nRun the following command to verify that a profile is installed that defers software \nupdates to at most 30 days: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('enforcedSoftwareUpdateDelay').js \nEOS \nIf there is an output, it should be \u2264 30. \nNote: If your organization does not use a software deferment mobile configuration, \nthere will be no output and will pass the audit. \n \nInternal Only - General \nRemediation: \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is enforcedSoftwareUpdateDelay \n3. The key must be set to <integer><1-30></integer> \nReferences: \n1. https://support.apple.com/guide/deployment/manage-software-updates-\ndepc4c80847a/web \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n7.3 Perform Automated Operating System Patch \nManagement \n \nPerform operating system updates on enterprise assets through automated \npatch management on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv8 \n7.4 Perform Automated Application Patch Management \n \nPerform application updates on enterprise assets through automated patch \nmanagement on a monthly, or more frequent, basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.4 Deploy Automated Operating System Patch \nManagement Tools \n \nDeploy automated software update tools in order to ensure that the operating \nsystems are running the most recent security updates provided by the software \nvendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n3.5 Deploy Automated Software Patch Management \nTools \n \nDeploy automated software update tools in order to ensure that third-party \nsoftware on all systems is running the most recent security updates provided by \nthe software vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "1.8 Ensure the System is Managed by a Mobile Device Management (MDM) Software (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple provides the capability to manage macOS, iOS, and iPadOS using Mobile Device \nManagement (MDM). Profiles are used to configure devices to enforce security controls \nas well as to configure the devices for authorized access. Many security controls \navailable on Apple devices are only available through the use of profile settings using \nMDM. This capability is also misused by attackers who have added rogue profiles to the \nlist of unwanted software and fake software updates to induce users to approve the \ninstallation of malicious content. Organizations should have Mobile Device Management \nsoftware in place to harden organizationally managed devices and take advantage of \nadditional Apple controls, as well as to make the devices more resistant to attackers \nenticing users to install unwanted content from rogue MDMs.",
        "Rationale": "Mobile Device Management is the preferred Apple method to manage Apple devices. \nSome capability in this technology is a requirement for the enforcement of some \ncontrols. Users with managed devices should be trained and familiar with authorized \ncontent provided through the organization's MDM. \nImpact: \nAn MDM is yet another additional tool that requires technically adept personnel to \nmanage correctly. In theory, proper use of an MDM can make services provisioning \nsimpler with configuration profiles to reach authorized services.",
        "Audit": "Terminal Method: \nRun the following to verify the system is enrolled in a Mobile Device Management \nsoftware: \n$ sudo /usr/bin/profiles status -type enrollment | /usr/bin/awk -F: '/MDM \nenrollment/ {print $2}' | /usr/bin/grep -c \"Yes (User Approved)\" \n \n1",
        "Remediation": "Enroll the system in a Mobile Device Management software. \n \nInternal Only - General",
        "References": "1. https://csrc.nist.gov/publications/detail/sp/800-40/rev-4/final \n2. https://controlfreak.risk-redux.io/controls/CM-06 \n3. https://support.apple.com/guide/deployment/intro-to-mdm-profiles-\ndepc0aadd3fe/web#:~:text=iOS%2C%20iPadOS%2C%20macOS%2C%20and,t\nhe%20user%20or%20your%20organization. \n4. http://lockboxx.blogspot.com/2019/03/macos-red-teaming-202-profiles.html \n5. https://simplemdm.com/blog/mdm-migration/ \nAdditional Information: \nApple first announced Declarative Device Management at WWDC 2021 and has since \nconfirmed that future management capabilities will specifically focus on the declarative \nmanagement feature set. \nPer Apple, \"Declarative Device Management is an update to the existing protocol for \ndevice management that can be used in combination with the existing MDM protocol \ncapabilities. It allows the device to asynchronously apply settings and report status back \nto the MDM solution without constant polling.\" \nOrganizations must ensure that their MDM solution supports this feature to utilize \nDeclarative Device Management. Organizations interested in leveraging Declarative \nDevice Management (DDM) must become familiar with its capabilities and how it will \ninteract with other tools. \nThe Center for Internet Security does not endorse any particular MDM vendor or \nmethodology for managing macOS devices. However, we aim to provide information for \nadministrators, security specialists, auditors, help desk personnel, and platform \ndeployment personnel involved in developing, deploying, assessing, or securing \nsolutions incorporating Apple macOS 14.0 Sonoma. \nA feature of Declarative Device Management is the ability to deploy \"Legacy Declarative \nConfigurations.\" You can use this configuration to download and install profiles with \npayloads unavailable as declarative configurations. In addition, Declarative Device \nManagement now supports managing already installed MDM profiles without needing to \nremove them. An MDM server must send and activate a configuration containing the \nsame profile as one already installed by MDM. The Declarative Device Management \nsystem will then take over the management of that profile without reinstalling or \nupdating it. At that point, Declarative Device Management owns the profile. Using \nLegacy Declarative Configurations will result in the configuration data being written out \nto PLIST files, the same as a configuration profile. With Declarative Management taking \nover a configuration profile with Legacy Declarative Configurations, the MDM will not be \nable to make changes to it. \n \nInternal Only - General \nWhen implementing Declarative Device Management, MDM servers will write \nconfiguration data into an encrypted data container inaccessible to the device. The \ncurrent state of a device's Declarative configuration and emitted status items will only be \naccessible by the MDM. Monitoring and auditing of the settings should be done on the \nlocal system against the state of the device. \nOnly the MDM solution can subscribe to the declarative status channel and reports of \ndevices to be aware of the state of the configurations applied to the system. As a result, \nsecurity and auditing solutions may have to query the MDM server directly for the state \nof configurations and compliance instead of scanning the local macOS system for this \ninformation. Because Configuration Profiles and Declarative Configurations may live \nside by side while Declarative Device Management becomes more widely adopted, \norganizations must decide which is best for the business and be mindful when utilizing \nboth management features. \nFor macOS 14.0 Sonoma, implementing certain Declarative Configurations may affect \nthe ability to perform auditing or remediation outlined within this benchmark. \nOrganizations may be required to defer to their MDM solution for audit and validation. 1: \nUsing Declarative Configuration Services: \u2028Utilizing this allows for managing System \nIntegrity Protected (SIP) Services, including sshd, sudo, PAM, CUPS, Apache httpd, \nbash, and z-shell. *Affects (as labeled in Ventura Benchmark): CIS 2.3.3.4, CIS 2.3.3.5, \nCIS 4.2, CIS 5.4 2: Passcode/Password Policies. *Affects the entire 5.2 Password \nManagement section (as labeled in Ventura Benchmark). \nSupportive Links: \nApple Platform Deployment: https://support.apple.com/guide/deployment/welcome/web \nMeet Declarative Device Management (WWDC21): \nhttps://developer.apple.com/wwdc21/10131 Review declarative configurations for Apple \ndevices: https://support.apple.com/guide/deployment/review-declarative-configurations-\ndepf858becef/web",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.1 Apple ID"
    },
    {
        "Title": "2.1.1 iCloud"
    },
    {
        "Title": "2.1.1.1 Audit iCloud Keychain (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "The iCloud keychain is Apple's password manager that works with macOS and iOS. \nThe capability allows users to store passwords in either iOS or macOS for use in Safari \non both platforms and other iOS-integrated applications. The most pervasive use is \ndriven by iOS use rather than macOS. The passwords stored in a macOS keychain on \nan Enterprise-managed computer could be stored in Apple's cloud and then be \navailable on a personal computer using the same account. The stored passwords could \nbe for organizational as well as for personal accounts. \nIf passwords are no longer being used as organizational tokens, they are not in scope \nfor iCloud keychain storage.",
        "Rationale": "Ensure that the iCloud keychain is used consistently with organizational requirements.",
        "Audit": "Graphical Method: \nPerform the following steps to verify a profile is installed for the iCloud keychain sync \nservice: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Disallow iCloud Keychain Sync set to your \norganization's requirements \nTerminal Method: \nRun the following command to verify that a profile is installed that sets iCloud Keychain \nsync to your organization's settings: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowCloudKeychainSync').js \nEOS \nIf the output is false, iCloud Keychain Sync is disabled. If the output is true, iCloud \nKeychain sync is enabled.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n \nInternal Only - General \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowCloudKeychainSync \n3. The key should be set <true/>, to allow iCloud keychain syncing, or <false/>, \nto disable it, based on your organization's requirements \nNote: Since the profile method sets a system-wide setting and not a user-level one, the \nprofile method is the preferred method. It is always better to set system-wide than per \nuser. \nAdditional Information: \nTo verify individual users: \nAudit Procedure: \nGraphical Method: \nPerform the following steps to verify the iCloud keychain sync service: \n1. Open System Settings  \n2. Select Apple ID  \n3. Select iCloud  \n4. Verify that Keychain is set to your organization's requirements \nTerminal Method: \nFor each user, run this command to verify the iCloud keychain sync services: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Preferences/MobileMeAccounts | grep -B 1 \nKEYCHAIN_SYNC \n \nEnabled = <0,1>; \nName = \"KEYCHAIN_SYNC\"; \nThe output will be either a 0, disabled, or 1, enabled. Verify if the setting meets your \norganization's requirements \nexample: \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read \n/Users/seconduser/Library/Preferences/MobileMeAccounts | grep -B 1 \nKEYCHAIN_SYNC \n                    Enabled = 0; \n                    Name = \"KEYCHAIN_SYNC\"; \nRemediation Procedure: \nGraphical Method: \nPerform the following steps to set iCloud keychain sync based on your organization's \nrequirements: \n \nInternal Only - General \n1. Open System Settings  \n2. Select Apple ID  \n3. Select iCloud  \n4. Set Keychain to meet your organization's requirements",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv8 \n15.3 Classify Service Providers \n \nClassify service providers. Classification consideration may include one or more \ncharacteristics, such as data sensitivity, data volume, availability requirements, \napplicable regulations, inherent risk, and mitigated risk. Update and review \nclassifications annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.1.1.2 Audit iCloud Drive (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "iCloud Drive is Apple's storage solution for applications on both macOS and iOS to use \nthe same files that are resident in Apple's cloud storage. The iCloud Drive folder is \navailable much like Dropbox, Microsoft OneDrive, or Google Drive. \nOne of the concerns in public cloud storage is that proprietary data may be \ninappropriately stored in an end user's personal repository. Organizations that need \nspecific controls on information should ensure that this service is turned off or the user \nknows what information must be stored on services that are approved for storage of \ncontrolled information.",
        "Rationale": "Organizations should review third party storage solutions pertaining to existing data \nconfidentiality and integrity requirements. \nImpact: \nUsers will not be able to use continuity on macOS to resume the use of newly \ncomposed but unsaved files.",
        "Audit": "Graphical Method: \nPerform the following steps to verify if a profile is installed to configure iCloud Drive: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Disallow iCloud Drive set to your \norganization's requirements \nTerminal Method: \nRun the following command to verify that a profile is installed that sets iCloud Drive sync \nto your organization's settings: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowCloudDocumentSync').js \nEOS              \nIf the output is false, iCloud Drive Sync is disabled. If the output is true, iCloud Drive \nsync is enabled. \n \nInternal Only - General",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowCloudDocumentSync \n3. The key should be set <true/>, to allow iCloud Drive, or <false/>, to disable it, \nbased on your organization's requirements \nNote: Since the profile method sets a system-wide setting and not a user-level one, the \nprofile method is the preferred method. It is always better to set system-wide than per \nuser.",
        "References": "1. https://developer.apple.com/documentation/devicemanagement/restrictions \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify if iCloud Drive is enabled: \n1. Open System Preferences  \n2. Select Apple ID  \n3. Select iCloud  \n4. Verify that iCloud Drive is set within your organization's requirements \nor \n1. Open System Preferences  \n2. Select Profiles  \n3. Verify that an installed profile has Disallow iCloud Drive is set to your \norganization's requirements \nTerminal Method: \nRun the following command to verify that iCloud Drive is set to your organization's \nspecifications: \n \nInternal Only - General \n$ /usr/bin/sudosudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Preferences/MobileMeAccounts | /usr/bin/grep -B 1 \nMOBILE_DOCUMENTS \nThe output will include Enabled = and iCloud Drive is either enabled, 1, or disabled, 0. \nVerify that the service is set to your organization's requirements. \nexample: \n$ /usr/bin/sudosudo -u seconduser /usr/bin/defaults read \n/Users/seconduser/Library/Preferences/MobileMeAccounts | /usr/bin/grep -B 1 \nMOBILE_DOCUMENTS \n \nEnabled = 0; \nName = \"MOBILE_DOCUMENTS\"; \nRemediation: \nGraphical Method: \nPerform the following steps to set iCloud Drive to your organization's requirements: \n1. Open System Preferences  \n2. Select Apple ID  \n3. Select iCloud  \n4. Set iCloud Drive to for your organization's requirements \nPerform the following to verify what applications are syncing with iCloud Drive: \n1. Open System Preferences  \n2. Select Apple ID  \n3. Select iCloud  \n4. Select Options... next to iCloud Drive  \n5. Select Documents  \n6. Verify the applications that are syncing to iCloud Drive are set to your \norganization's requirements",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv8 \n15.3 Classify Service Providers \n \nClassify service providers. Classification consideration may include one or more \ncharacteristics, such as data sensitivity, data volume, availability requirements, \napplicable regulations, inherent risk, and mitigated risk. Update and review \nclassifications annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.1.1.3 Ensure iCloud Drive Document and Desktop Sync Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "With macOS 10.12, Apple introduced the capability to have a user's Desktop and \nDocuments folders automatically synchronize to the user's iCloud Drive, provided they \nhave enough room purchased through Apple on their iCloud Drive. This capability \nmirrors what Microsoft is doing with the use of OneDrive and Office 365. There are \nconcerns with using this capability. \nThe storage space that Apple provides for free is used by users with iCloud mail, all of a \nuser's Photo Library created with the ever larger Multi-Pixel iPhone cameras, and all \niOS Backups. Adding a synchronization capability for users who have files going back a \ndecade or more, storage may be tight using the free 5GB provided without purchasing \nmuch larger storage capacity from Apple. Users with multiple computers running 10.12 \nand above with unique content on each will have issues as well. \nEnterprise users may not be allowed to store Enterprise information in a third-party \npublic cloud. In previous implementations, such as iCloud Drive or DropBox, the user \nselected what files were synchronized even if there were no other controls. The new \nfeature synchronizes all files in a folder widely used to put working files. \nThe automatic synchronization of all files in a user's Desktop and Documents folders \nshould be disabled. \nhttps://derflounder.wordpress.com/2016/09/23/icloud-desktop-and-documents-in-\nmacos-sierra-the-good-the-bad-and-the-ugly/",
        "Rationale": "Automated Document synchronization should be planned and controlled to approved \nstorage. \nImpact: \nUsers will not be able to use iCloud for the automatic sync of the Desktop and \nDocuments folders.",
        "Audit": "Graphical Method: \nPerform the following steps to verify if Desktop and Documents in iCloud Drive is \nenabled: \n1. Open System Settings \n \nInternal Only - General \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Disallow iCloud Desktop & Documents \nSync set to True \nTerminal Method: \nRun the following command to verify that a profile is installed that disables iCloud \nDocument and Desktop Sync: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowCloudDesktopAndDocuments').js \nEOS \n \nfalse \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowCloudDesktopAndDocuments \n3. The key must be set to <false/>",
        "References": "1. https://developer.apple.com/documentation/devicemanagement/restrictions \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify if Desktop and Documents in iCloud Drive is \nenabled: \n1. Open System Settings  \n2. Select Apple ID  \n3. Select iCloud  \n4. Verify that iCloud Drive is disabled \n5. If iCloud Drive is enabled, select Options  \n6. Verify that 'Desktop & Documents Folders` is disabled \n \nInternal Only - General \nTerminal Method: \nFor each user, run the following command to verify that the Documents and Desktop \nfolders are not syncing to iCloud: \n$ /usr/bin/sudo -u <username> /bin/ls -l /Users/<username>/Library/Mobile\\ \nDocuments/com~apple~CloudDocs/Documents/ | /usr/bin/grep total \n \n$ /usr/bin/sudo -u <username> /bin/ls -l /Users/<username>/Library/Mobile\\ \nDocuments/com~apple~CloudDocs/Desktop/ | /usr/bin/grep total \nexample: \n$ /usr/bin/sudo -u seconduser /bin/ls -l /Users/seconduser/Library/Mobile\\ \nDocuments/com~apple~CloudDocs/Documents/ | /usr/bin/grep total \n \n$ /usr/bin/sudo -u seconduser /bin/ls -l /Users/seconduser/Library/Mobile\\ \nDocuments/com~apple~CloudDocs/Desktop/ | /usr/bin/grep total \n \ntotal 8 \nIn the above example, there is an output so the machine is not compliant. \nRemediation: \nGraphical Method: \nPerform the following steps to disable iCloud Desktop and Document syncing: \n1. Open System Settings  \n2. Select Apple ID  \n3. Select iCloud  \n4. Select Options on iCloud Drive  \n5. Disable Desktop & Documents Folders",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n15.3 Classify Service Providers \n \nClassify service providers. Classification consideration may include one or more \ncharacteristics, such as data sensitivity, data volume, availability requirements, \napplicable regulations, inherent risk, and mitigated risk. Update and review \nclassifications annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.1.1.4 Audit Security Keys Used With AppleIDs (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Apple has introduced the capability of using security keys to protect Apple IDs using \ntwo-factor authentication in macOS Ventura 13.2, in iOS 16.3, and in iPadOS 16.3. This \nfeature along with the purchase of two hardware tokens (a backup device is required) \nprotects against the compromise of AppleIDs. This feature requires all devices using an \nenrolled Apple ID to meet the minimum OS standard.",
        "Rationale": "Users of Apple devices are supported across their devices by using the same Apple ID \nto support shared data in both iCloud and across devices. Compromising an Apple ID \nhas become a very attractive target for attackers to gain unauthorized access to iCloud \nstorage and user devices. Two-factor authentication reduces the risk. \nImpact: \nLegacy devices and test machines will be challenging to ensure that they are all running \nrecent Operating Systems that can utilize Security Keys. It is best practice not to use \nAppleIDs with access to current user data on legacy and test machines. Technical staff \nthat use legacy devices are encouraged to create additional Apple IDs that do not need \ntwo-factor protection and can be used for testing on legacy devices when required.",
        "Audit": "Graphical Method: \nPerform the following steps to verify if Security Keys is set to your organization's \nrequirements: \n1. Open System Settings \n2. Select Apple ID \n3. Select Password & Security \n4. Verify that Security Keys is set to your organization's requirements",
        "Remediation": "Graphical Method: \nPerform the following steps to set Security Keys is set to your organization's \nrequirements: \n1. Open System Settings \n2. Select Apple ID \n3. Select Password & Security \n \nInternal Only - General \n4. Select Add.. to add a security key, or Remove All Security Keys ro remove \nsecurity keys, to meet your organization's requirements",
        "References": "1. https://support.apple.com/en-us/HT213154 \n2. https://9to5mac.com/2023/02/03/ios-16-3-hardware-security-keys-explained-\nvideo/ \n3. https://hcsonline.com/images/Security_Key_Apple_ID.pdf",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.1.1.5 Audit Freeform Sync to iCloud (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Starting with macOS 13.1 (Ventura) Apple has made a collaboration tool (Freeform) \navailable on macOS, iOS and iPadOS. This application allows for extensive whiteboard \ncreation and sharing using iCloud. Organizations may want to audit the use of Freeform \niCloud sharing of internally created boards.",
        "Rationale": "Internally created whiteboards may not be authorized to share to external contact \nthrough iCloud.",
        "Audit": "Graphical Method: \nPerform the following steps to verify if iCloud Freeform sync is enabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Disallow iCloud Freeform Sync set to your \norganization's requirement \nTerminal Method: \nRun the following command to verify that a profile is installed that disables Freeform \nSync: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowCloudFreeform').js \nEOS \nThe output should match your organization's requirement",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowCloudFreeform \n3. The key must be set to <<true/false>/> \n \nInternal Only - General",
        "References": "1. https://www.apple.com/newsroom/2022/12/apple-launches-freeform-a-powerful-\nnew-app-designed-for-creative-collaboration/ \n2. https://support.apple.com/guide/freeform/share-a-board-frfma5307056b/mac \n3. https://support.apple.com/guide/icloud/set-up-freeform-mmd1b86048ac/icloud",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv8 \n15.3 Classify Service Providers \n \nClassify service providers. Classification consideration may include one or more \ncharacteristics, such as data sensitivity, data volume, availability requirements, \napplicable regulations, inherent risk, and mitigated risk. Update and review \nclassifications annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.1.1.6 Audit Find My Mac (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Find My is Apple's consumer solution for device tracking of your devices. This allows a \nuser to track the location of devices associated with their Apple ID. This is a great \nsolution for consumer or user device management and tracking, but it is not meant to be \nan enterprise management solution to device tracking and information management on \nenterprise managed devices. There are multiple enterprise MDM solutions for managing \norganizational devices.",
        "Rationale": "An enterprise solution should be used for tracking and information management of all \ndevices including Apple devices, Apple's Find My solution only handles Apple devices. If \nno enterprise solution is available, Find My provides capabilities for a user to manage \nand track Apple devices. It is not designed as an enterprise solution, and should not be \nused as one. It is better to allow the user to track devices that use their Apple ID then to \nhave no tracking at all. \nImpact: \nThere should be no impact on the user while using the device. If someone other than \nthe user has access to tracking information, this can impact the user and needs to be \nresearched. Users should audit to ensure that only authorized people should have \naccess to your location. Using multiple solutions for device tracking can unnecessary \ncomplexity.",
        "Audit": "Graphical Method: \nPerform the following steps to verify if Security Keys is set to your organization's \nrequirements: \n1. Open System Settings \n2. Select Apple ID \n3. Select iCloud \n4. Select Show More Apps.. \n5. Verify that Find My Mac is set to your organization's requirements",
        "Remediation": "Graphical Method: \nPerform the following steps to set Security Keys is set to your organization's \nrequirements: \n \nInternal Only - General \n1. Open System Settings \n2. Select Apple ID \n3. Select iCloud \n4. Select Show More Apps.. \n5. Set Find My Mac is set to your organization's requirements",
        "References": "1. https://support.apple.com/lt-lt/guide/deployment/depdc4ba8d82/web \n2. https://support.apple.com/find-my",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv8 \n15.3 Classify Service Providers \n \nClassify service providers. Classification consideration may include one or more \ncharacteristics, such as data sensitivity, data volume, availability requirements, \napplicable regulations, inherent risk, and mitigated risk. Update and review \nclassifications annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.1.2 Audit App Store Password Settings (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "With OS X 10.11, Apple added settings for password storage for the App Store in \nmacOS. These settings parallel the settings in iOS. As with iOS, the choices are a \nrequirement to provide a password after every purchase or to have a 15-minute grace \nperiod, and whether or not to require a password for free purchases. The response to \nthis setting is stored in a cookie and processed by iCloud. \nThere is plenty of risk information on the wisdom of this setting for parents with children \nbuying games on iPhones and iPads. The most relevant information here is the \nlikelihood that users who are not authorized to download software may have physical \naccess to an unlocked computer where someone who is authorized recently made a \npurchase. If that is a concern, a password should be required at all times for App Store \naccess in the Password Settings controls.",
        "Rationale": "Audit: \nGraphical Method: \nPerform the following steps to verify that App Store Passwords are set to your \norganization's requirements: \n1. Open System Settings \n2. Select Apple ID \n3. Select Media & Purchases \n4. Verify that Free Downloads is set to your organization's requirements \n5. Verify that Purchases and In-App Purchases is set to your organization's \nrequirements",
        "Audit": "Graphical Method: \nPerform the following steps to verify that App Store Passwords are set to your \norganization's requirements: \n1. Open System Settings \n2. Select Apple ID \n3. Select Media & Purchases \n4. Verify that Free Downloads is set to your organization's requirements \n5. Verify that Purchases and In-App Purchases is set to your organization's \nrequirements",
        "Remediation": "Graphical Method: \nPerform the following steps to set App Store Passwords to your organization's \nrequirements: \n1. Open System Settings \n2. Select Apple ID \n3. Select Media & Purchases \n4. Set Free Downloads to your organization's requirements \n5. Set Purchases and In-App Purchases to your organization's requirements \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.2 Network"
    },
    {
        "Title": "2.2.1 Ensure Firewall Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "A firewall is a piece of software that blocks unwanted incoming connections to a system.",
        "Rationale": "A firewall minimizes the threat of unauthorized users gaining access to your system \nwhile connected to a network or the Internet. \nImpact: \nThe firewall may block legitimate traffic. Applications that are unsigned will require \nspecial handling.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure the firewall is enabled: \n1. Open System Settings \n2. Select Network \n3. Verify that the Firewall is Active \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Firewall set to Enabled \nTerminal Method: \nRun the following command to verify that the firewall is enabled: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n    app = Application.currentApplication() \n    app.includeStandardAdditions = true; \n \n     \n  let pref1 = app.doShellScript('/usr/bin/defaults read \n/Library/Preferences/com.apple.alf globalstate') \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.fire\nwall')\\ \n  .objectForKey('EnableFirewall')) \n   \n    if ( ( ( pref1 == 1 ) || ( pref1 == 2 ) || ( pref2 == \"true\" ) ) && \n(pref1 != 0 ) ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n \n} \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to turn the firewall on: \n1. Open System Settings \n2. Select Network \n3. Select Firewall \n4. Set Firewall to enabled \nTerminal Method: \nRun the following command to enable the firewall: \n$ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.alf \nglobalstate -int <value> \nFor the <value>, use either 1, specific services, or 2, essential services only. \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.security.firewall \n2. The key to include is EnableFirewall \n3. The key must be set to <true/>",
        "References": "1. https://support.apple.com/en-us/guide/security/seca0e83763f/web \n2. http://support.apple.com/en-us/HT201642 \n \nInternal Only - General \nAdditional Information: \nNote: After some testing, it was discovered that setting globalstate to 0 in the plist \n/Library/Preferences/com.apple.alf disables the firewall even if the profile is \ninstalled. We are now auditing for '0' in that plist even if the profile is installed to give as \nmuch information as possible to administrators. \nYour organization might want to verify and limit specific applications that allow incoming \nconnectivity. \nTo verify those applications: \nGraphical Method: \nPerform the following steps to ensure the system is configured as prescribed: \n1. Open System Settings  \n2. Select Network  \n3. Select Firewall  \n4. Select Options...  \n5. Verify that your organizations necessary rules are set \nTerminal Method: \nRun the following command to verify what applications are allowing incoming \nconnections: \n$ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --listapps     \nThe output will show any applications, and their path, and their associated rule. \nexample: \n$ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --listapps    \nALF: total number of apps = 3  \n \n1 :  /System/Library/CoreServices/RemoteManagement/ARDAgent.app  \n  \n ( Allow incoming connections )  \n \n2 :  /Applications/Chess.app  \n  \n ( Allow incoming connections )  \n \n3 :  /Applications/Contacts.app  \n  \n ( Block incoming connections )  \nTo remove unnecessary firewall rules: \nGraphical Method: \nPerform the following steps to remove unnecessary firewall rules: \n1. Open System Settings  \n2. Select Network  \n3. Select Firewall  \n \nInternal Only - General \n4. Select Options...  \n5. Select unneeded rule(s) \n6. Select the - below to delete them \nTerminal Method: \nRun the following command to remove specific applications: \n$ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --remove \n</path/application name> \n \nApplication at path ( </path/application name> ) removed from firewall \nThe </path/application name> is the one to be removed from the previous listing. \nexample: \n$ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --listapps    \nALF: total number of apps = 3  \n \n1 :  /System/Library/CoreServices/RemoteManagement/ARDAgent.app  \n  \n ( Allow incoming connections )  \n \n2 :  /Applications/Chess.app  \n  \n ( Allow incoming connections )  \n \n3 :  /Applications/Contacts.app  \n  \n ( Block incoming connections )  \n \n$ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --remove \n/Applications/Chess.app \n \nApplication at path ( /Applications/Chess.app ) removed from firewall",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n13.1 Centralize Security Event Alerting \n \nCentralize security event alerting across enterprise assets for log correlation and \nanalysis. Best practice implementation requires the use of a SIEM, which includes \nvendor-defined event correlation alerts. A log analytics platform configured with \nsecurity-relevant correlation alerts also satisfies this Safeguard. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a default-\ndeny rule that drops all traffic except those services and ports that are explicitly \nallowed. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.5 Implement Application Firewalls \n \nPlace application firewalls in front of any critical servers to verify and validate the \ntraffic going to the server. Any unauthorized traffic should be blocked and logged. \n \n \n\u25cf"
    },
    {
        "Title": "2.2.2 Ensure Firewall Stealth Mode Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "While in Stealth mode, the computer will not respond to unsolicited probes, dropping \nthat traffic.",
        "Rationale": "Stealth mode on the firewall minimizes the threat of system discovery tools while \nconnected to a network or the Internet. \nImpact: \nTraditional network discovery tools like ping will not succeed. Other network tools that \nmeasure activity and approved applications will work as expected. \nThis control aligns with the primary macOS use case of a laptop that is often connected \nto untrusted networks where host segregation may be non-existent. In that use case, \nhiding from the other inmates is likely more than desirable. In use cases where use is \nonly on trusted LANs with static IP addresses, stealth mode may not be desirable.",
        "Audit": "Graphical Method: \nPerform the following steps to verify the firewall has stealth mode enabled: \n1. Open System Settings \n2. Select Network \n3. Select Firewall \n4. Select Option \n5. Verify that Enable stealth mode is enabled \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Stealth Mode set to Enabled \nTerminal Method: \nRun the following command to verify that stealth mode is enabled: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.alf')\\ \n  .objectForKey('stealthenabled')) \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.fire\nwall')\\ \n  .objectForKey('EnableStealthMode')) \n  if ( ( pref1 == 1 ) || ( pref2 == \"true\" ) ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to enable firewall stealth mode: \n1. Open System Settings \n2. Select Network \n3. Select Firewall \n4. Select Options... \n5. Set Enabled stealth mode to enabled \nTerminal Method: \nRun the following command to enable stealth mode: \n$ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --\nsetstealthmode on \n \nStealth mode enabled \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.security.firewall \n2. The key to include is EnableStealthMode \n3. The key must be set to <true/> \nNote: This key must be set in the same configuration profile with EnableFirewall set \nto <true/>. If it is set in its own configuration profile, it will fail.",
        "References": "1. http://support.apple.com/en-us/HT201642"
    },
    {
        "Title": "2.3 General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.4 Apply Host-based Firewalls or Port Filtering \n \nApply host-based firewalls or port filtering tools on end systems, with a default-\ndeny rule that drops all traffic except those services and ports that are explicitly \nallowed. \n\u25cf \n\u25cf \n\u25cf \n \n2.3 General \n \nInternal Only - General \n2.3.1 AirDrop & Handoff"
    },
    {
        "Title": "2.3.1.1 Ensure AirDrop Is Disabled When Not Actively Transferring Files (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "AirDrop is Apple's built-in, on-demand, ad hoc file exchange system that is compatible \nwith both macOS and iOS. It uses Bluetooth LE for discovery that limits connectivity to \nMac or iOS users that are in close proximity. Depending on the setting, it allows \neveryone or only Contacts to share files when they are near each other. \nIn many ways, this technology is far superior to the alternatives. The file transfer is done \nover a TLS encrypted session, does not require any open ports that are required for file \nsharing, does not leave file copies on email servers or within cloud storage, and allows \nfor the service to be mitigated so that only people already trusted and added to contacts \ncan interact with you. \nWhile there are positives to AirDrop, there are privacy concerns that could expose \npersonal information. For that reason, AirDrop should be disabled, and should only be \nenabled when needed and disabled afterwards. The recommendation against enabling \nthe sharing is not based on any known lack of security in the protocol, but for specific \nuser operational concerns. \n\u2022 \nIf AirDrop is enabled, the Mac is advertising that a Mac is addressable on the \nlocal network and open to either unwanted AirDrop upload requests or for a \nnegotiation on whether the remote user is in the user's contacts list. Neither \nprocess is desirable. \n\u2022 \nIn most known use cases, AirDrop use qualifies as ad hoc networking when it \ninvolves Apple device users deciding to exchange a file using the service. \nAirDrop can thus be enabled on the fly for that exchange. \nFor organizations concerned about any use of AirDrop because of Digital Loss \nPrevention (DLP) monitoring on other protocols, JAMF has an article on reviewing \nAirDrop logs. \nDetecting outbound AirDrop transfers and logging them",
        "Rationale": "AirDrop can allow malicious files to be downloaded from unknown sources. Contacts \nOnly limits may expose personal information to devices in the same area. \nImpact: \nDisabling AirDrop can limit the ability to move files quickly over the network without \nusing file shares. \n \nInternal Only - General",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that AirDrop is disabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Allow AirDrop set to False \nTerminal Method: \nRun the following command to verify that a profile is installed that disabled AirDrop: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowAirDrop').js \nEOS \n \nfalse \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowAirDrop \n3. The key must be set to <false/> \nNote: AirDrop can only be enabled or disabled through configuration profiles. If your \norganization wants to use AirDrop, it would need to be set through Terminal or the GUI. \nPlease see the Additional Information for assistance with those options, but those \nsystem will not technically be in compliance.",
        "References": "1. https://www.techrepublic.com/article/apple-airdrop-users-reportedly-vulnerable-\nto-security-flaw/ \n2. https://www.imore.com/how-apple-keeps-your-airdrop-files-private-and-secure \n3. https://en.wikipedia.org/wiki/AirDrop \n4. https://macmost.com/10-reasons-you-should-be-using-airdrop-to-transfer-\nfiles.html \n \nInternal Only - General \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to ensure that AirDrop is disabled: \n1. Open System Settings in the Menu Bar \n2. Select General  \n3. Select AirDrop & Handoff  \n4. Verify that AirDrop is set to No One  \n5. Open System Settings  \n6. Select Control Center  \n7. Select AirDrop  \n8. Verify that Don't show in Menu Bar is not selected \nTerminal Method: \nFor all users, run the following commands to verify whether AirDrop is disabled: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.NetworkBrowser \nDisableAirDrop \n \n1 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read com.apple.NetworkBrowser \nDisableAirDrop \n \n1 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.NetworkBrowser \nDisableAirDrop \n \n0 \n \n$ /usr/bin/sudo -u thirduser /usr/bin/defaults read com.apple.NetworkBrowser \nDisableAirDrop \n \nThe domain/default pair of (com.apple.NetworkBrowser, DisableAirDrop) does \nnot exist \nRemediation: \nGraphical Method: \nPerform the following steps to disable AirDrop: \n1. Open System Settings in the Menu Bar \n2. Select General  \n \nInternal Only - General \n3. Select AirDrop & Handoff  \n4. Set AirDrop to No One  \n5. Open System Settings  \n6. Select Control Center  \n7. Set AirDrop to Don't show in Menu Bar  \nTerminal Method: \nRun the following commands to disable AirDrop: \n$ /usr/bin/sudo -u <username> defaults write com.apple.NetworkBrowser \nDisableAirDrop -bool true \nexample: \n$ /usr/bin/sudo -u seconduser defaults write com.apple.NetworkBrowser \nDisableAirDrop -bool true",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv8 \n6.7 Centralize Access Control \n \nCentralize access control for all enterprise assets through a directory service or \nSSO provider, where supported. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n15.4 Disable Wireless Access on Devices if Not Required \n \nDisable wireless access on devices that do not have a business purpose for \nwireless access. \n \n \n\u25cf"
    },
    {
        "Title": "2.3.1.2 Ensure AirPlay Receiver Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "In macOS Monterey (12.0), Apple has added the capability to share content from \nanother Apple device to the screen of a host Mac. While there are many valuable uses \nof this capability, such sharing on a standard Mac user workstation should be enabled \nad hoc as required rather than allowing a continuous sharing service. The feature can \nbe restricted by Apple ID or network and is configured to use by accepting the \nconnection on the Mac. Part of the concern is frequent connection requests may \nfunction as a denial-of-service and access control limits may provide too much \ninformation to an attacker. \nhttps://macmost.com/how-to-use-a-mac-as-an-airplay-receiver.html \nhttps://support.apple.com/guide/mac-pro-rack/use-airplay-apdf1417128d/mac",
        "Rationale": "This capability appears very useful for kiosk and shared work spaces. The ability to \nallow by network could be especially useful on segregated guest networks where \nvisitors could share their screens on computers with bigger monitors, including \ncomputers connected to projectors. \nImpact: \nTurning off AirPlay sharing by default will not allow users to share without turning the \nservice on. The service should be enable as needed rather than left on.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that AirPlay Receiver is Disabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Allow AirPlay Incoming Requests set to \nFalse \nTerminal Method: \nFor each user, run the following command to verify that AirPlay Receiver is disabled: \nRun the following command to verify that a profile is installed that disables the ability to \nuse the computer as an AirPlay Receiver: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowAirPlayIncomingRequests').js \nEOS \n \nfalse \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowAirPlayIncomingRequests \n3. The key must be set to <false/> \nNote: Since the profile method sets a system-wide setting and not a user-level one, the \nprofile method is the preferred method. It is always better to set system-wide than per \nuser. \nDefault Value: \nAirPlay Receiver is enabled by default. \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to ensure that AirPlay Receiver is Disabled: \n1. Open System Settings  \n2. Select General  \n3. Select AirDrop & Handoff  \n4. Verify that AirPlay Receiver is disabled \nTerminal Method: \nFor each user, run the following command to verify that AirPlay Receiver is disabled: \n \nInternal Only - General \n$ /usr/bin/sudo -u <username> /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.controlcenter')\\ \n.objectForKey('AirplayRecieverEnabled').js \nEOS \n \ntrue \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.controlcenter')\\ \n.objectForKey('AirplayRecieverEnabled').js \nEOS \n \ntrue \nRemediation: \nGraphical Method: \nPerform the following steps to disable AirPlay Receiver: \n1. Open System Settings  \n2. Select General  \n3. Select AirDrop & Handoff  \n4. Set AirPlay Receiver to disabled \nTerminal Method: \nFor each user, run the following command to disable AirPlay Receiver: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost write \ncom.apple.controlcenter.plist AirplayRecieverEnabled -bool false \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost write \ncom.apple.controlcenter.plist AirplayRecieverEnabled -bool false",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.2 Date & Time"
    },
    {
        "Title": "2.3.2.1 Ensure Set Time and Date Automatically Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Correct date and time settings are required for authentication protocols, file creation, \nmodification dates, and log entries. \nNote: If your organization has internal time servers, enter them here. Enterprise mobile \ndevices may need to use a mix of internal and external time servers. If multiple servers \nare required, use the Date & Time System Preference with each server separated by a \nspace. \nAdditional Note: The default Apple time server is time.apple.com. Variations include \ntime.euro.apple.com. While it is certainly more efficient to use internal time servers, \nthere is no reason to block access to global Apple time servers or to add a \ntime.apple.com alias to internal DNS records. There are no reports that Apple gathers \nany information from NTP synchronization, as the computers already phone home to \nApple for Apple services including iCloud use and software updates. Best practice is to \nallow DNS resolution to an authoritative time service for time.apple.com, preferably to \nconnect to Apple servers, but local servers are acceptable as well.",
        "Rationale": "Kerberos may not operate correctly if the time on the Mac is off by more than 5 minutes. \nThis in turn can affect Apple's single sign-on feature, Active Directory logons, and other \nfeatures. \nImpact: \nThe timed service will periodically synchronize with named time servers and will make \nthe computer time more accurate.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the system's date and time are set \nautomatically: \n1. Open System Settings \n2. Select General \n3. Select Date & Time \n4. Verify that Set time and date automatically is enabled \n \nInternal Only - General \nTerminal Method: \nRun the following command to ensure that date and time are automatically set: \n$ /usr/bin/sudo /usr/sbin/systemsetup -getusingnetworktime  \n \nNetwork Time: On",
        "Remediation": "Graphical Method: \nPerform the following to enable the date and time to be set automatically: \n1. Open System Settings \n2. Select General \n3. Select Date & Time \n4. Set Set time and date automatically to enabled \nNote: By default, the operating system will use time.apple.com as the time server. \nYou can change to any time server that meets your organization's requirements. \nTerminal Method: \nRun the following commands to enable the date and time setting automatically: \n$ /usr/bin/sudo /usr/sbin/systemsetup -setnetworktimeserver \n<your.time.server> \n \nsetNetworkTimeServer: <your.time.server> \n \n$ /usr/bin/sudo /usr/sbin/systemsetup -setusingnetworktime on \n \nsetUsingNetworkTime: On \nexample: \n$ /usr/bin/sudo /usr/sbin/systemsetup -setnetworktimeserver time.apple.com \n \nsetNetworkTimeServer: time.apple.com \n \n$ /usr/bin/sudo /usr/sbin/systemsetup -setusingnetworktime on \n \nsetUsingNetworkTime: On \nRun the following commands if you have not set, or need to set, a new time zone: \n$ /usr/bin/sudo /usr/sbin/systemsetup -listtimezones \n \n$ /usr/bin/sudo /usr/sbin/systemsetup -settimezone <selected time zone> \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/systemsetup -listtimezones \n \nTime Zones: \n Africa/Abidjan \n Africa/Accra \n Africa/Addis_Ababa \n ... \n \n \n$ /usr/bin/sudo /usr/sbin/systemsetup -settimezone America/New_York \n \nSet TimeZone: America/New_York \nAdditional Information: \nTo learn more about timed, read: Has anyone got the time? How High Sierra has \nchanged time synchronisation \nAlso, Ensure that time on the computer is within acceptable limits. Truly accurate time is \nmeasured within milliseconds. \nRun the following commands to verify the time is set within an appropriate limit: \n$ /usr/bin/sudo /usr/sbin/systemsetup -getnetworktimeserver  \nThe output will include Network Time Server: and the name of your time server. \nexample: Network Time Server: time.apple.com \n$ /usr/bin/sudo /usr/bin/sntp <your.time.server> \nEnsure that the offset result(s) are between -270.x and 270.x seconds. \nAnd to set the time to the correct offset: \n$ /usr/bin/sudo /usr/bin/sntp -sS <your.time.server>",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.4 Standardize Time Synchronization \n \nStandardize time synchronization. Configure at least two synchronized time \nsources across enterprise assets, where supported. \n \n\u25cf \n\u25cf \nv7 \n6.1 Utilize Three Synchronized Time Sources \n \nUse at least three synchronized time sources from which all servers and \nnetwork devices retrieve time information on a regular basis so that timestamps \nin logs are consistent. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.2.2 Ensure the Time Service Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "In macOS 10.14, Apple replace ntp with timed for time services, and is used to ensure \ncorrect time is kept. Correct date and time settings are required for authentication \nprotocols, file creation, modification dates and log entries.",
        "Rationale": "Kerberos may not operate correctly if the time on the Mac is off by more than 5 minutes. \nThis in turn can affect Apple's single sign-on feature, Active Directory logons, and other \nfeatures. \nImpact: \nAccurate time is required for many computer functions.",
        "Audit": "Terminal Method: \nRun the following command to ensure that the timed service is enabled: \n$ /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c com.apple.timed \n \n1",
        "Remediation": "Terminal Method: \nRun the following commands to enable the timed service: \n$ /usr/bin/sudo /bin/launchctl load -w \n/System/Library/LaunchDaemons/com.apple.timed.plist \nAdditional Information: \nIt is also recommended that time on the computer is within acceptable limits. Truly \naccurate time is measured within milliseconds. \nRun the following commands to verify the time is set within an appropriate limit: \n$ /usr/bin/sudo /usr/sbin/systemsetup -getnetworktimeserver  \nThe output will include Network Time Server: and the name of your time server. \nexample: Network Time Server: time.apple.com \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/sntp <your.time.server> \nEnsure that the offset result(s) are between -270.x and 270.x seconds. \nAnd to set the time to the correct offset: \n$ /usr/bin/sudo /usr/bin/sntp -sS <your.time.server>",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.4 Standardize Time Synchronization \n \nStandardize time synchronization. Configure at least two synchronized time \nsources across enterprise assets, where supported. \n \n\u25cf \n\u25cf \nv7 \n6.1 Utilize Three Synchronized Time Sources \n \nUse at least three synchronized time sources from which all servers and \nnetwork devices retrieve time information on a regular basis so that timestamps \nin logs are consistent. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3 Sharing",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "DVD or CD Sharing allows users to remotely access the system's optical drive. While \nApple does not ship Macs with built-in optical drives any longer, external optical drives \nare still recognized when they are connected. In testing, the sharing of an external \noptical drive persists when a drive is reconnected.",
        "Rationale": "Disabling DVD or CD Sharing minimizes the risk of an attacker using the optical drive as \na vector for attack and exposure of sensitive data. \nImpact: \nMany Apple devices are now sold without optical drives, however drive sharing may be \nneeded for legacy optical media. The media should be explicitly re-shared as needed \nrather than using a persistent share. Optical drives should not be used for long-term \nstorage. To store necessary data from an optical drive it should be copied to another \nform of external storage. Optionally, an image can be made of the optical drive so that it \nis stored in its original form on another form of external storage.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that DVD or CD Sharing is disabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that DVD or CD sharing is not enabled \nTerminal Method: \nRun the following command to verify that DVD or CD Sharing is disabled \n$ /usr/bin/sudo /bin/launchctl list | grep -c com.apple.ODSAgent \n \n0",
        "Remediation": "Graphical Method: \nPerform the following steps to disable DVD or CD Sharing: \n1. Open System Settings \n \nInternal Only - General \n2. Select General \n3. Select Sharing \n4. Set DVD or CD sharing to disabled \nTerminal Method: \nRun the following command to disable DVD or CD Sharing: \n$ /usr/bin/sudo /bin/launchctl disable system/com.apple.ODSAgent  \n \n$ /usr/bin/sudo /bin/launchctl bootout system/com.apple.ODSAgent \nNote: If using the Terminal method, the GUI will still show the service checked until \nafter a reboot.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.2 Ensure Screen Sharing Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Screen Sharing allows a computer to connect to another computer on a network and \ndisplay the computer\u2019s screen. While sharing the computer\u2019s screen, the user can \ncontrol what happens on that computer, such as opening documents or applications, \nopening, moving, or closing windows, and even shutting down the computer. \nWhile mature administration and management does not use graphical connections for \nstandard maintenance, most help desks have capabilities to assist users in performing \ntheir work when they have technical issues and need support. Help desks use graphical \nremote tools to understand what the user sees and assist them so they can get back to \nwork. For MacOS, some of these remote capabilities can use Apple's OS tools. Control \nis therefore not meant to prohibit the use of a just-in-time graphical view from authorized \npersonnel with authentication controls. Sharing should not be enabled except in narrow \nwindows when help desk support is required. \nScreen Sharing on macOS can allow the use of the insecure VNC protocol. VNC is a \nclear text protocol that should not be used on macOS.",
        "Rationale": "Disabling Screen Sharing mitigates the risk of remote connections being made without \nthe user of the console knowing that they are sharing the computer. \nImpact: \nHelp desks may require the periodic use of a graphical connection mechanism to assist \nusers. Any support that relies on native MacOS components will not work unless a \nscripted solution to enable and disable sharing as neccessary.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure Screen Sharing is not enabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that Screen Sharing is not enabled \nTerminal Method: \nRun the following commands to verify that Screen Sharing is not set: \n \nInternal Only - General \n$ /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -E \n\"com.apple.screensharing$\" \nThere will be no output if the service is disabled. If there is an output, then that is a \nfinding.",
        "Remediation": "Graphical Method: \nPerform the following steps to disable Screen Sharing: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Set Screen Sharing to disabled \nTerminal Method: \nRun the following command to turn off Screen Sharing: \n$ /usr/bin/sudo /bin/launchctl disable system/com.apple.screensharing \n \n$ /usr/bin/sudo /bin/launchctl bootout system/com.apple.screensharing",
        "References": "1. https://support.apple.com/guide/mac-help/turn-screen-sharing-on-or-off-\nmh11848/mac",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.3 Ensure File Sharing Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "File sharing from a user workstation creates additional risks, such as: \n\u2022 \nOpen ports are created that can be probed and attacked \n\u2022 \nPasswords are attached to user accounts for access that may be exposed and \nendanger other parts of the organizational environment, including directory \naccounts \n\u2022 \nIncreased complexity makes security more difficult and may expose additional \nattack vectors \nApple's File Sharing uses the Server Message Block (SMB) protocol to share to other \ncomputers that can mount SMB shares. This includes other macOS computers. \nApple warns that SMB sharing stored passwords is less secure, and anyone with \nsystem access can gain access to the password for that account. When sharing with \nSMB, each user accessing the Mac must have SMB enabled. Storing passwords, \nespecially copies of valid directory passwords, decreases security for the directory \naccount and should not be used.",
        "Rationale": "By disabling File Sharing, the remote attack surface and risk of unauthorized access to \nfiles stored on the system is reduced. \nImpact: \nFile Sharing can be used to share documents with other users, but hardened servers \nshould be used rather than user endpoints. Turning on File Sharing increases the \nvisibility and attack surface of a system unnecessarily.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that File Sharing is not enabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that File Sharing is not enabled \nTerminal Method: \nRun the following command to verify that File Sharing is not enabled: \n \nInternal Only - General \n$ /usr/bin/sudo /bin/launchctl list | grep -c \"com.apple.smbd\" \n \n0",
        "Remediation": "Graphical Method: \nPerform the following steps to disable File Sharing: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Set File Sharing to disabled \nTerminal Method: \nRun the following command to disable File Sharing: \n$ /usr/bin/sudo /bin/launchctl disable system/com.apple.smbd \n \n$ /usr/bin/sudo /bin/launchctl bootout system/com.apple.smbd",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv8 \n5.4 Restrict Administrator Privileges to Dedicated \nAdministrator Accounts \n \nRestrict administrator privileges to dedicated administrator accounts on \nenterprise assets. Conduct general computing activities, such as internet browsing, \nemail, and productivity suite use, from the user\u2019s primary, non-privileged account. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.3 Ensure the Use of Dedicated Administrative Accounts \n \nEnsure that all users with administrative account access use a dedicated or \nsecondary account for elevated activities. This account should only be used for \nadministrative activities and not internet browsing, email, or similar activities. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.4 Ensure Printer Sharing Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "By enabling Printer Sharing, the computer is set up as a print server to accept print jobs \nfrom other computers. Dedicated print servers or direct IP printing should be used \ninstead.",
        "Rationale": "Disabling Printer Sharing mitigates the risk of attackers attempting to exploit the print \nserver to gain access to the system.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Printer Sharing is not enabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that Printer Sharing is not enabled \nTerminal Method: \nRun the following command to verify that Printer Sharing is not enabled: \n$ /usr/bin/sudo /usr/sbin/cupsctl | grep -c \"_share_printers=0\"                           \n \n1",
        "Remediation": "Graphical Method: \nPerform the following steps to disable Printer Sharing: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Set Printer Sharing to disabled \nTerminal Method: \nRun the following command to disable Printer Sharing: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/cupsctl --no-share-printers",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.5 Ensure Remote Login Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Remote Login allows an interactive terminal connection to a computer.",
        "Rationale": "Disabling Remote Login mitigates the risk of an unauthorized person gaining access to \nthe system via Secure Shell (SSH). While SSH is an industry standard to connect to \nposix servers, the scope of the benchmark is for Apple macOS clients, not servers. \nmacOS does have an IP-based firewall available (pf, ipfw has been deprecated) that is \nnot enabled or configured. There are more details and links in the Network sub-section. \nmacOS no longer has TCP Wrappers support built in and does not have strong Brute-\nForce password guessing mitigations, or frequent patching of openssh by Apple. Since \nmost macOS computers are mobile workstations, managing IP-based firewall rules on \nmobile devices can be very resource intensive. All of these factors can be parts of \nrunning a hardened SSH server. \nImpact: \nThe SSH server built into macOS should not be enabled on a standard user computer, \nparticularly one that changes locations and IP addresses. A standard user that runs \nlocal applications, including email, web browser, and productivity tools, should not use \nthe same device as a server. There are Enterprise management toolsets that do utilize \nSSH. If they are in use, the computer should be locked down to only respond to known, \ntrusted IP addresses and appropriate administrator service accounts. \nFor macOS computers that are being used for specialized functions, there are several \noptions to harden the SSH server to protect against unauthorized access, including \nbrute force attacks. There are some basic criteria that need to be considered: \n\u2022 \nDo not open an SSH server to the internet without controls in place to mitigate \nSSH brute force attacks. This is particularly important for systems bound to \nDirectory environments. It is great to have controls in place to protect the system, \nbut if they trigger after the user is already locked out of their account, they are not \noptimal. If authorization happens after authentication, directory accounts for \nusers that don't even use the system can be locked out. \n\u2022 \nDo not use SSH key pairs when there is no insight to the security on the client \nsystem that will authenticate into the server with a private key. If an attacker gets \naccess to the remote system and can find the key, they may not need a \npassword or a key logger to access the SSH server. \n\u2022 \nDetailed instructions on hardening an SSH server, if needed, are available in the \nCIS Linux Benchmarks, but it is beyond the scope of this benchmark. \n \nInternal Only - General",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Remote Login is disabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that Remote Login is not enabled \nTerminal Method: \nRun the following command to verify that Remote Login is disabled: \n$ /usr/bin/sudo /usr/sbin/systemsetup -getremotelogin \n \nRemote Login: Off",
        "Remediation": "Perform the following to disable Remote Login: \nGraphical Method: \nPerform the following steps to disable Remote Login: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Set Remote Login to disabled \nTerminal Method: \nRun the following command to disable Remote Login: \n$ /usr/bin/sudo /usr/sbin/systemsetup -setremotelogin off \n \nDo you really want to turn remote login off? If you do, you will lose this \nconnection and can only turn it back on locally at the server (yes/no)? \nEntering yes will disable remote login. \nAdditional Information: \nman sshd_config \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.6 Ensure Remote Management Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Remote Management is the client portion of Apple Remote Desktop (ARD). Remote \nManagement can be used by remote administrators to view the current screen, install \nsoftware, report on, and generally manage client Macs. \nThe screen sharing options in Remote Management are identical to those in the Screen \nSharing section. In fact, only one of the two can be configured. If Remote Management \nis used, refer to the Screen Sharing section above on issues regard screen sharing. \nRemote Management should only be enabled when a Directory is in place to manage \nthe accounts with access. Computers will be available on port 5900 on a macOS \nSystem and could accept connections from untrusted hosts depending on the \nconfiguration, which is a major concern for mobile systems. As with other sharing \noptions, an open port even for authorized management functions can be attacked, and \nboth unauthorized access and Denial-of-Service vulnerabilities could be exploited. If \nremote management is required, the pf firewall should restrict access only to known, \ntrusted management consoles. Remote management should not be used across the \nInternet without the use of a VPN tunnel.",
        "Rationale": "Remote Management should only be enabled on trusted networks with strong user \ncontrols present in a Directory system. Mobile devices without strict controls are \nvulnerable to exploit and monitoring. \nImpact: \nMany organizations utilize ARD for client management.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that Remote Management is not enabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that Remote Management is not enabled \nTerminal Method: \nRun the following command to verify that Remote Management is not enabled: \n \nInternal Only - General \n$ /usr/bin/sudo /bin/ps -ef | /usr/bin/grep -e ARDAgent \n \n0  9233  8630   0  3:32pm ttys001    0:00.00 grep -e ARDAgent",
        "Remediation": "Graphical Method: \nPerform the following steps to disable Remote Management: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Set Remote Management to disabled \nTerminal Method: \nRun the following command to disable Remote Management: \n$ /usr/bin/sudo \n/System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources\n/kickstart -deactivate -stop \n \nStarting... \nRemoved preference to start ARD after reboot. \nDone. \nAdditional Information: \n/System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Re\nsources/kickstart -help",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv8 \n5.4 Restrict Administrator Privileges to Dedicated \nAdministrator Accounts \n \nRestrict administrator privileges to dedicated administrator accounts on \nenterprise assets. Conduct general computing activities, such as internet browsing, \nemail, and productivity suite use, from the user\u2019s primary, non-privileged account. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n4.3 Ensure the Use of Dedicated Administrative Accounts \n \nEnsure that all users with administrative account access use a dedicated or \nsecondary account for elevated activities. This account should only be used for \nadministrative activities and not internet browsing, email, or similar activities. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \nv7 \n14.3 Disable Workstation to Workstation Communication \n \nDisable all workstation to workstation communication to limit an attacker's ability \nto move laterally and compromise neighboring systems, through technologies such \nas Private VLANs or microsegmentation. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.7 Ensure Remote Apple Events Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple Events is a technology that allows one program to communicate with other \nprograms. Remote Apple Events allows a program on one computer to communicate \nwith a program on a different computer.",
        "Rationale": "Disabling Remote Apple Events mitigates the risk of an unauthorized program gaining \naccess to the system. \nImpact: \nWith remote Apple events turned on, an AppleScript program running on another Mac \ncan interact with the local computer.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Remote Apple Events is not enabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that Remote Apple Events is not enabled \nTerminal Method: \nRun the following commands to verify that Remote Apple Events is not set \n$ /usr/bin/sudo /usr/sbin/systemsetup -getremoteappleevents  \n \nRemote Apple Events: Off",
        "Remediation": "Graphical Method: \nPerform the following steps to disable Remote Apple Events: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Set Remote Apple Events to disabled \n \nInternal Only - General \nTerminal Method: \nRun the following commands to set Remote Apple Events to Off: \n$ /usr/bin/sudo /usr/sbin/systemsetup -setremoteappleevents off  \n \nsetremoteappleevents: Off",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.8 Ensure Internet Sharing Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Internet Sharing uses the open source natd process to share an internet connection \nwith other computers and devices on a local network. This allows the Mac to function as \na router and share the connection to other, possibly unauthorized, devices.",
        "Rationale": "Disabling Internet Sharing reduces the remote attack surface of the system. \nImpact: \nInternet Sharing allows the computer to function as a router and other computers to use \nit for access. This can expose both the computer itself and the networks it is accessing \nto unacceptable access from unapproved devices.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure Internet Sharing is not enabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that Internet Sharing is not enabled \nTerminal Method: \nRun the following commands to verify that Internet Sharing is not set: \n$ /usr/bin/sudo /usr/bin/defaults read \n/Library/Preferences/SystemConfiguration/com.apple.nat >nul 2>&1 | grep -c \n\"Enabled = 1;\" \n \n0 \nor \nRun the following command to verify that a profile is installed that automatically disables \ninternet sharing: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\ \n.objectForKey('forceInternetSharingOff').js \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to disable Internet Sharing: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Set Internet Sharing to disabled \nTerminal Method: \nRun the following command to turn off Internet Sharing: \n$ usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/SystemConfiguration/com.apple.nat NAT -dict Enabled -int \n0 \nNote: Using the Terminal Method will not be reflected in the GUI, but will disable the \nunderlying service. \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.MCX \n2. The key to include is forceInternetSharingOff \n3. The key must be set to <true/>",
        "References": "1. STIGID AOSX-12-001270",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.9 Ensure Content Caching Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Starting with 10.13 (macOS High Sierra), Apple introduced a service to make it easier to \ndeploy data from Apple, including software updates, where there are bandwidth \nconstraints to the Internet and fewer constraints or greater bandwidth exist on the local \nsubnet. This capability can be very valuable for organizations that have throttled and \npossibly metered Internet connections. In heterogeneous enterprise networks with \nmultiple subnets, the effectiveness of this capability would be determined by how many \nMacs were on each subnet at the time new, large updates were made available \nupstream. This capability requires the use of mac OS clients as P2P nodes for updated \nApple content. Unless there is a business requirement to manage operational Internet \nconnectivity and bandwidth, user endpoints should not store content and act as a \ncluster to provision data. \nContent types supported by Content Caching in macOS",
        "Rationale": "The main use case for Mac computers is as mobile user endpoints. P2P sharing \nservices should not be enabled on laptops that are using untrusted networks. Content \nCaching can allow a computer to be a server for local nodes on an untrusted network. \nWhile there are certainly logical controls that could be used to mitigate risk, they add to \nthe management complexity. Since the value of the service is in specific use cases, \norganizations with the use case described above can accept risk as necessary. \nImpact: \nThis setting will adversely affect bandwidth usage between local subnets and the \nInternet.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Content Caching is not enabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that Content Caching is not enabled \nor \n1. Open System Settings \n \nInternal Only - General \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Allow Content Caching set to False \nTerminal Method: \nRun the following command to verify that Content Caching is not enabled: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.AssetCache')\\ \n  .objectForKey('Activated')) \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationac\ncess')\\ \n  .objectForKey('allowContentCaching')) \n  if ( ( pref1 == 0 ) || ( pref2 == 0 ) ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to disable Content Caching: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Set Content Caching to disabled \nTerminal Method: \nRun the following command to disable Content Caching: \n$ /usr/bin/sudo /usr/bin/AssetCacheManagerUtil deactivate \nThe output will include Content caching deactivated \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowContentCaching \n3. The key must be set to <false/>",
        "References": "1. https://support.apple.com/guide/mac-help/about-content-caching-mchl9388ba1b/ \n \nInternal Only - General \n2. https://support.apple.com/guide/mac-help/set-up-content-caching-on-mac-\nmchl3b6c3720/",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.10 Ensure Media Sharing Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Starting with macOS 10.15, Apple has provided a control which permits a user to share \nApple downloaded content on all Apple devices that are signed in with the same Apple \nID. This allows users to share downloaded Movies, Music, or TV shows with other \ncontrolled macOS, iOS and iPadOS devices, as well as photos with Apple TVs. \nWith this capability, guest users can also use media downloaded on the computer. \nThe recommended best practice is not to use the computer as a server, but to utilize \nApple's cloud storage in order to download and use content stored there if content \nstored with Apple is used on multiple devices. \nhttps://support.apple.com/guide/mac-help/set-up-media-sharing-on-mac-\nmchlp13371337/mac",
        "Rationale": "Disabling Media Sharing reduces the remote attack surface of the system. \nImpact: \nMedia Sharing allows for pre-downloaded content on a Mac to be available to other \nApple devices on the same network. Leaving this disabled forces device users to \nstream or download content from each Apple authorized device. This sharing could \neven allow unauthorized devices on the same network media access.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Media Sharing is not enabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has homeSharingUIStatus set to 0 \n5. Verify that an installed profile has legacySharingUIStatus set to 0 \n6. Verify that an installed profile has mediaSharingUIStatus set to 0 \nTerminal Method: \nRun the following command to verify that a profile is installed that disables Media \nSharing: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.preferences.s\nharing.SharingPrefsExtension')\\ \n  .objectForKey('homeSharingUIStatus')) \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.preferences.s\nharing.SharingPrefsExtension')\\ \n  .objectForKey('legacySharingUIStatus')) \n  let pref3 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.preferences.s\nharing.SharingPrefsExtension')\\ \n  .objectForKey('mediaSharingUIStatus')) \n  if ( pref1 == 0 && pref2 == 0 && pref3 == 0 ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only. \nNote: If a user has media sharing enabled when installing the profile it will not disable \nmedia sharing, but will instead lock it as enabled. To verify that no users have media \nsharing enabled before installing the profile, run the following command for each user \non the system: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \ncom.apple.amp.mediasharingd home-sharing-enabled",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is \ncom.apple.preferences.sharing.SharingPrefsExtension \n2. The key to include is homeSharingUIStatus \n3. The key must be set to <integer>0</integer> \n4. The key to also include is legacySharingUIStatus \n5. The key must be set to <integer>0</integer> \n6. The key to also include is mediaSharingUIStatus \n7. The key must be set to <integer>0</integer> \n \nInternal Only - General \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to ensure that Media Sharing is not enabled: \n1. Open System Settings  \n2. Select General  \n3. Select Sharing  \n4. Verify that Media Sharing is not selected \nTerminal Method: \nRun the following command to verify that Media Sharing is not enabled: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \ncom.apple.amp.mediasharingd home-sharing-enabled \n \n0 \nexample: \n$ /usr/bin/sudo -u test /usr/bin/defaults read com.apple.amp.mediasharingd \nhome-sharing-enabled \n \n0 \n \n$ /usr/bin/sudo -u test2 /usr/bin/defaults read com.apple.amp.mediasharingd \nhome-sharing-enabled  \n \n1 \nRemediation: \nGraphical Method: \nPerform the following steps to disable Media Sharing: \n1. Open System Preferences \n2. Select Sharing \n3. Uncheck Media Sharing \nTerminal Method: \nRun the following command to disable Media Sharing: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \ncom.apple.amp.mediasharingd home-sharing-enabled -int 0 \nexample: \n \nInternal Only - General \n$ sudo -u test2 /usr/bin/defaults write com.apple.amp.mediasharingd home-\nsharing-enabled -int 0",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.11 Ensure Bluetooth Sharing Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Bluetooth Sharing allows files to be exchanged with Bluetooth-enabled devices.",
        "Rationale": "Disabling Bluetooth Sharing minimizes the risk of an attacker using Bluetooth to \nremotely attack the system. \nImpact: \nThere is a general expectation that Bluetooth peripherals will be used by most users in \nApple's ecosystem. Disabling sharing should have no impact on the use of Bluetooth \nperipherals.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that Bluetooth Sharing is not enabled: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that Bluetooth Sharing is not enabled \nTerminal Method: \nRun the following command to verify that Bluetooth Sharing is disabled: \n/usr/bin/sudo -u <username> /usr/bin/defaults -currentHost read \ncom.apple.Bluetooth PrefKeyServicesEnabled \n \n0 \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read \ncom.apple.Bluetooth PrefKeyServicesEnabled \n \n0",
        "Remediation": "Graphical Method: \nPerform the following steps to disable Bluetooth Sharing: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n \nInternal Only - General \n4. Set Bluetooth Sharing to disabled \nTerminal Method: \nRun the following command to disable Bluetooth Sharing is disabled: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost write \ncom.apple.Bluetooth PrefKeyServicesEnabled -bool false \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost write \ncom.apple.Bluetooth PrefKeyServicesEnabled -bool false",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.8 Log and Alert on Changes to Administrative Group \nMembership \n \nConfigure systems to issue a log entry and alert when an account is added to or \nremoved from any group assigned administrative privileges. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, claims, \napplication, or database specific access control lists. These controls will enforce the \nprinciple that only authorized individuals should have access to the information \nbased on their need to access the information as a part of their responsibilities. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.3.12 Ensure Computer Name Does Not Contain PII or Protected Organizational Information (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "If the computer is used in an organization that assigns host names, it is a good idea to \nchange the computer name to the host name. This is more of a best practice than a \nsecurity measure. If the host name and the computer name are the same, computer \nsupport may be able to track problems down more easily. \nFor organizations or for users that self-administer their own computers, it is important to \nnot use sensitive or personal information in computer names. The name of a computer \nthat uses untrusted networks will be exposed at a minimum to the responsible network \nteam of that network. For instance, having your name as your hostname can provide \nuseful knowledge to an attacker monitoring the network you may be connected to. \nExamples of possibly inappropriate content in computer names include: \n\u2022 \nUser directory account names \n\u2022 \nComputer directory account names where machine accounts exist \n\u2022 \nContact phone numbers \n\u2022 \nPhysical locations of offices or residences \n\u2022 \nPersonal information that can be augmented with Facebook data to assist social \nengineering attacks \nStandard naming patterns avoid collisions and mitigate risk for computer users. \nWith mobile devices, using DHCP IP tracking has serious drawbacks; hostname or \ncomputer name tracking makes much more sense for those organizations that can \nimplement it. If the computer is using different names for the \"Computer Name\" DNS \nand Directory environments, it can be difficult to manage Macs in an Enterprise asset \ninventory.",
        "Rationale": "Part of IT security is having visibility into all of the devices for which an organization is \nresponsible. Without a complete inventory, it is impossible to ensure all security controls \nare met on all organizational devices. \nDefault macOS naming deconfliction controls can create issues for appropriate \nmanagement and tracking as well as privacy exposure. By default, the name of a \nmacOS computer is derived from the first user created. If the user has multiple \ncomputers or an image is used without an appropriate name change, there will be \nmultiple computers with names derived from the same user for discovery deconfliction. \nHow many \"Ron Colvin's MacBook Pro\" should there be, and are any missing? \n \nInternal Only - General \nLocal network auto renaming to avoid collisions also allows for the enumeration of local \ncomputer names. Computers should not be named after their users, especially on \nuntrusted networks. For social engineering purposes, the computer name should not \nprovide a full name of the user or an identifiable name that might be used to assist in \ntargeted user attacks. \nA documented plan to better enable a complete device inventory without exposing user \nor organizational information is part of mature security.",
        "Audit": "Graphical Method: \nPerform the following steps to verify the computer name: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Verify that Hostname is set to your organization's parameters",
        "Remediation": "Graphical Method: \nPerform the following steps to set the computer name: \n1. Open System Settings \n2. Select General \n3. Select Sharing \n4. Select Edit... \n5. Set Hostname to your organization's parameters",
        "References": "1. https://support.apple.com/en-ca/guide/mac-help/mchlp1177/mac \n2. https://uberagent.com/blog/choosing-macos-computer-names-wisely/ \n3. https://support.apple.com/en-ca/guide/mac-help/mchlp2322/mac \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n1.1 Establish and Maintain Detailed Enterprise Asset \nInventory \n \nEstablish and maintain an accurate, detailed, and up-to-date inventory of all \nenterprise assets with the potential to store or process data, to include: end-user \ndevices (including portable and mobile), network devices, non-computing/IoT \ndevices, and servers. Ensure the inventory records the network address (if static), \nhardware address, machine name, enterprise asset owner, department for each \nasset, and whether the asset has been approved to connect to the network. For \nmobile end-user devices, MDM type tools can support this process, where \nappropriate. This inventory includes assets connected to the infrastructure \nphysically, virtually, remotely, and those within cloud environments. Additionally, it \nincludes assets that are regularly connected to the enterprise\u2019s network \ninfrastructure, even if they are not under control of the enterprise. Review and \nupdate the inventory of all enterprise assets bi-annually, or more frequently. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.1 Associate Active Ports, Services and Protocols to Asset \nInventory \n \nAssociate active ports, services and protocols to the hardware assets in the \nasset inventory. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.4 Time Machine",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Backup solutions are only effective if the backups run on a regular basis. The time to \ncheck for backups is before the hard drive fails or the computer goes missing. In order \nto simplify the user experience so that backups are more likely to occur, Time Machine \nshould be on and set to Back Up Automatically whenever the target volume is available. \nOperational staff should ensure that backups complete on a regular basis and the \nbackups are tested to ensure that file restoration from backup is possible when needed. \nBackup dates are available even when the target volume is not available in the Time \nMachine plist. \nSnapshotDates = ( \n\"2012-08-20 12:10:22 +0000\", \n\"2013-02-03 23:43:22 +0000\", \n\"2014-02-19 21:37:21 +0000\", \n\"2015-02-22 13:07:25 +0000\", \n\"2016-08-20 14:07:14 +0000\" \nWhen the backup volume is connected to the computer, more extensive information is \navailable through tmutil. See man tmutil",
        "Rationale": "Backups should automatically run whenever the backup drive is available. \nImpact: \nThe backup will run periodically in the background and could have user impact while \nrunning.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that automatic backups are set if Time Machine is \nenabled: \n1. Open System Settings \n2. Select General \n \nInternal Only - General \n3. Select Time Machine \n4. Verify that 'Next Back Up' is set to Automatically \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has AutoBackup=1 \nTerminal Method: \nRun the following command to verify that Time Machine is set to automatically backup if \nTime Machine is enabled: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.TimeMachine')\n\\ \n  .objectForKey('AutoBackup')) \n  if ( pref1  == null ) { \n    return(\"Preference Not Set\") \n  }  else if ( pref1 == 1 ) { \n    return(\"true\") \n  }  else { \n    return(\"false\") \n  } \n} \nEOS \nThe output should either be Preference Not Set or true. If it is false, then the \ncomputer is not in compliance \nRun the following command to check the snapshot dates to verify that the dates meet \nyour organization's approved backup frequency: \n$ /usr/bin/sudo /usr/bin/defaults read \n/Library/Preferences/com.apple.TimeMachine.plist Destinations \nThe output will contain all the Time Machine backups in the format \"YYYY-MM-DD \nHH:MM:SS +0000\" \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.TimeMachine')\n\\ \n  .objectForKey('AutoBackup')) \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.TimeMachine')\n\\ \n  .objectForKey('LastDestinationID')) \n  if ( pref2  == null ) { \n    return(\"Preference Not Set\") \n  }  else if ( pref1 == 1 ) { \n    return(\"true\") \n  }  else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue \n \n$ /usr/bin/sudo /usr/bin/defaults read read \n/Library/Preferences/com.apple.TimeMachine.plist Destinations            \n \n( \n        { \n        BackupAlias = {length = 348, bytes = 0x00000000 015c0002 00011442 \n61636b75 ... 20564d00 ffff0000 }; \n        BytesAvailable = 4855873536; \n        BytesUsed = 5125054464; \n        ConsistencyScanDate = \"2022-09-22 18:21:01 +0000\"; \n        DestinationID = \"A64EA502-30DD-480C-9F7B-4F3EEDD0D186\"; \n        DestinationUUIDs =         ( \n            \"0D946E5D-68ED-4F63-BCBD-CE7FC94F47C0\" \n        ); \n        FilesystemTypeName = apfs; \n        HealthCheckDecision = 0; \n        InheritanceDecision = 0; \n        LastKnownEncryptionState = Encrypted; \n        RESULT = 0; \n        ReferenceLocalSnapshotDate = \"2022-09-22 18:21:53 +0000\"; \n        SnapshotDates =         ( \n            \"2022-09-22 18:21:01 +0000\", \n            \"2022-09-22 18:21:32 +0000\", \n            \"2022-09-22 18:21:57 +0000\" \n        ); \n    } \n)",
        "Remediation": "Graphical Method: \nPerform the following steps to enable Time Machine automatic backup: \n \nInternal Only - General \n1. Open System Settings \n2. Select General \n3. Select Time Machine \n4. Select Options... \n5. Set Back up frequency to Automatically <every hour/every day/every \nweek> \nTerminal Method: \nRun the following command to enable automatic backups if Time Machine is enabled: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.TimeMachine.plist AutoBackup -bool true \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.MCX.TimeMachine \n2. The key to include is AutoBackup \n3. The key must be set to",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n11.2 Perform Automated Backups  \n \nPerform automated backups of in-scope enterprise assets. Run backups \nweekly, or more frequently, based on the sensitivity of the data. \n\u25cf \n\u25cf \n\u25cf \nv7 \n10.1 Ensure Regular Automated Back Ups \n \nEnsure that all system data is automatically backed up on regular basis. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.3.4.2 Ensure Time Machine Volumes Are Encrypted If Time Machine Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "One of the most important security tools for data protection on macOS is FileVault. With \nencryption in place, it makes it difficult for an outside party to access your data if they \nget physical possession of the computer. One very large weakness in data protection \nwith FileVault is the level of protection on backup volumes. If the internal drive is \nencrypted but the external backup volume that goes home in the same laptop bag is \nnot, it is self-defeating. Apple tries to make this mistake easily avoided by providing a \ncheckbox to enable encryption when setting up a Time Machine backup. Using this \noption does require some password management, particularly if a large drive is used \nwith multiple computers. A unique, complex password to unlock the drive can be stored \nin keychains on multiple systems for ease of use. \nWhile some portable drives may contain non-sensitive data and encryption may make \ninteroperability with other systems difficult, backup volumes should be protected just like \nboot volumes.",
        "Rationale": "Backup volumes need to be encrypted.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure the drive used for Time Machine is encrypted: \n1. Open System Settings \n2. Select General \n3. Select Time Machine \n4. Verify that every drive setup for Time Machine states Encrypted \nTerminal Method: \nRun the following command to verify if the Time Machine disk encryption is enabled: \n$ /usr/bin/sudo /usr/bin/defaults read \n/Library/Preferences/com.apple.TimeMachine.plist | grep -c NotEncrypted \n \n0",
        "Remediation": "Graphical Method: \nPerform the following steps to enable encryption on the Time Machine drive: \n \nInternal Only - General \n1. Open System Settings \n2. Select General \n3. Select Time Machine \n4. Select the unencrypted drive \n5. Select - to forget that drive as a destination \n6. Select + to add a different drive as the destination \n7. Select Set Up Disk... \n8. Set Encrypt Backup to enabled \n9. Enter a password in the New Password and the same password in the Re-enter \nPassword fields \n10. A password hint is required, but it is recommended that you do not use any \nidentifying information for the password \nNote: In macOS 12.0 Monterey and previous, the existing Time Machine drive could \nhave encryption added without formatting it. This is no longer possible in macOS 13.0 \nVentura. If you wish to keep previous backups from the unencrypted volume, you will \nneed to manually move those files over to the new encrypted drive.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.6 Encrypt Data on End-User Devices \n \nEncrypt data on end-user devices containing sensitive data. Example \nimplementations can include: Windows BitLocker\u00ae, Apple FileVault\u00ae, Linux\u00ae dm-\ncrypt. \n\u25cf \n\u25cf \n\u25cf \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv8 \n11.3 Protect Recovery Data \n \nProtect recovery data with equivalent controls to the original data. Reference \nencryption or data separation, based on requirements. \n\u25cf \n\u25cf \n\u25cf \nv7 \n10.4 Ensure Protection of Backups \n \nEnsure that backups are properly protected via physical security or encryption \nwhen they are stored, as well as when they are moved across the network. This \nincludes remote backups and cloud services. \n\u25cf \n\u25cf \n\u25cf \nv7 \n13.6 Encrypt the Hard Drive of All Mobile Devices. \n \nUtilize approved whole disk encryption software to encrypt the hard drive of all \nmobile devices. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n14.8 Encrypt Sensitive Information at Rest \n \nEncrypt all sensitive information at rest using a tool that requires a secondary \nauthentication mechanism not integrated into the operating system, in order to \naccess the information. \n \n \n\u25cf \n \n \nInternal Only - General \n2.4 Control Center \nThe Control Center System Settings pane allows modification to Control Center \nmodules and what is displayed in the menu bar. \nMany menu bar icons provide additional status information when the option key is \nselected along with the menu, including WiFi and Bluetooth."
    },
    {
        "Title": "2.4.1 Ensure Show Wi-Fi status in Menu Bar Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The Wi-Fi status in the menu bar indicates if the system's wireless internet capabilities \nare enabled. If so, the system will scan for available wireless networks in order to \nconnect. At the time of this revision, all computers Apple builds have wireless network \ncapability, which has not always been the case. This control only pertains to systems \nthat have a wireless NIC available. Operating systems running in a virtual environment \nmay not score as expected, either.",
        "Rationale": "Enabling \"Show Wi-Fi status in menu bar\" is a security awareness method that helps \nmitigate public area wireless exploits by making the user aware of their wireless \nconnectivity status. \nImpact: \nThe user of the system should have a quick check on their wireless network status \navailable.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that the Wi-Fi status shows in the menu bar: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has WiFi set to 18 \nTerminal Method: \nRun the following command to verify that a profile is installed that enables Wi-FI to be \nshown in the menu bar: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.controlcenter')\\ \n.objectForKey('WiFi').js \nEOS \n \n18 \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.controlcenter \n2. The key to include is WiFi \n3. The key must be set to <integer>18</integer> \nAdditional Information: \nAirPort is Apple\u2019s marketing name for its 802.11x based wireless network interfaces. \nOption-click the Wifi icon in the menu bar to find out more information about the \nconnected wireless network. \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify that the Wi-Fi status shows in the menu bar: \n1. Open System Settings  \n2. Select Control Center  \n3. Verify that Wi-Fi is set to Show in Menu Bar  \nTerminal Method: \nFor each user, run the following command to verify that Wi-Fi status is enabled in the \nmenu bar: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost read \ncom.apple.controlcenter.plist WiFi  \n \n2 \nNote: If the settings has not been changed from the default, then this audit will fail on \nthe command line. Follow the remediation instructions to verify that it is set to a disabled \nstatus. \n \nInternal Only - General \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read \ncom.apple.controlcenter.plist WiFi          \n \n2 \nRemediation: \nGraphical Method: \nPerform the following steps to enable Wi-Fi status in the menu bar: \n1. Open System Settings  \n2. Select Control Center  \n3. Set Wi-Fi to Show in Menu Bar  \nTerminal Method: \nFor each user, run the following command to enable Wi-Fi status in the menu bar: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost write \ncom.apple.controlcenter.plist WiFi -int 2 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost write \ncom.apple.controlcenter.plist WiFi -int 2",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv8 \n12.6 Use of Secure Network Management and \nCommunication Protocols  \n \nUse secure network management and communication protocols (e.g., 802.1X, \nWi-Fi Protected Access 2 (WPA2) Enterprise or greater). \n \n\u25cf \n\u25cf \nv7 \n15.4 Disable Wireless Access on Devices if Not Required \n \nDisable wireless access on devices that do not have a business purpose for \nwireless access. \n \n \n\u25cf \nv7 \n15.5 Limit Wireless Access on Client Devices \n \nConfigure wireless access on client machines that do have an essential \nwireless business purpose, to allow access only to authorized wireless networks \nand to restrict access to other wireless networks. \n \n \n\u25cf \n \nInternal Only - General"
    },
    {
        "Title": "2.4.2 Ensure Show Bluetooth Status in Menu Bar Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "By showing the Bluetooth status in the menu bar, a small Bluetooth icon is placed in the \nmenu bar. This icon quickly shows the status of Bluetooth, and can allow the user to \nquickly turn Bluetooth on or off.",
        "Rationale": "Enabling \"Show Bluetooth status in menu bar\" is a security awareness method that \nhelps understand the current state of Bluetooth, including whether it is enabled, \ndiscoverable, what paired devices exist, and what paired devices are currently active. \nImpact: \nBluetooth is a useful wireless tool that has been widely exploited when configured \nimproperly. The user should have insight into the Bluetooth status.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Bluetooth status shows in the menu bar: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Bluetooth set to 18 \nTerminal Method: \nRun the following command to verify that a profile is installed that enables Bluetooth to \nbe shown in the menu bar: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.controlcenter')\\ \n.objectForKey('Bluetooth').js \nEOS \n \n18 \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only. \n \nInternal Only - General",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.controlcenter \n2. The key to include is Bluetooth \n3. The key must be set to <integer>18</integer> \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to ensure that Bluetooth status shows in the menu bar: \n1. Open System Settings  \n2. Select Control Center  \n3. Verify that Bluetooth is set to Show in Menu Bar  \nTerminal Method: \nFor each user, run the following command to verify that the Bluetooth status is enabled \nto show in the menu bar: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost read \ncom.apple.controlcenter.plist Bluetooth  \n \n18 \nNote: If the settings has not been changed from the default, then this audit will fail on \nthe command line. Follow the remediation instructions to verify that it is set to a disabled \nstatus. \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read \ncom.apple.controlcenter.plist Bluetooth          \n \n18 \nRemediation: \nGraphical Method: \nPerform the following steps to enable Bluetooth status in the menu bar: \n1. Open System Settings  \n2. Select Control Center  \n3. Set Bluetooth to Show in Menu Bar  \n \nInternal Only - General \nTerminal Method: \nFor each user, run the following command to enable Bluetooth status in the menu bar: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost write \ncom.apple.controlcenter.plist Bluetooth -int 18 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost write \ncom.apple.controlcenter.plist Bluetooth -int 18",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv8 \n13.9 Deploy Port-Level Access Control \n \nDeploy port-level access control. Port-level access control utilizes 802.1x, or \nsimilar network access control protocols, such as certificates, and may \nincorporate user and/or device authentication. \n \n \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.5 Siri & Spotlight"
    },
    {
        "Title": "2.5.1 Audit Siri Settings (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "With macOS 10.12 Sierra, Apple has introduced Siri from iOS to macOS. While there \nare data spillage concerns with the use of data-gathering personal assistant software, \nthe risk here does not seem greater in sending queries to Apple through Siri than in \nsending search terms in a browser to Google or Microsoft. While it is possible that Siri \nwill be used for local actions rather than Internet searches, Siri could, in theory, tell \nApple about confidential Programs and Projects that should not be revealed. This \nappears to be a usage edge case. \nIn cases where sensitive or protected data is processed and Siri could expose that \ninformation through assisting a user in navigating their machine, it should be disabled. \nSiri does need to phone home to Apple, so it should not be available from air-gapped \nnetworks as part of its requirements. \nMost of the use case data published has shown that Siri is a tremendous time saver on \niOS where multiple screens and menus need to be navigated through. Information like \nsports scores, weather, movie times, and simple to-do items on existing calendars can \nbe easily found with Siri. None of the standard use cases should be more risky than \nalready approved activity. \nFor information on Apple's privacy policy for Siri, click here.",
        "Rationale": "Where \"normal\" user activity is already limited, Siri use should be controlled as well.",
        "Audit": "Graphical Method: \nPerform the following steps to verify Siri settings: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Allow Assistant is to your organization's \nparameters \nTerminal Method: \nRun the following command to verify that a profile is installed that sets Siri to your \norganization's setting: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS                        \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowAssistant').js          \nEOS \nor \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS                        \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.ironwood.support')\\ \n.objectForKey('Ironwood Allowed').js          \nEOS \nThe output will be true if Siri is enabled with either installed profile or false if is \ndisabled with either installed profile. \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. We have included the individual user information \nin the additional information.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowAssistant \n3. Set the key to <true/> or <false/> based on your organization's requirements \nOR \n1. The PayloadType string is com.apple.ironwood.support \n2. The key to include is Ironwood Allowed \n3. Set the key to <true/> or <false/> based on your organization's requirements",
        "References": "1. https://support.apple.com/en-us/HT210657 \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify Siri settings: \n1. Open System Settings  \n2. Select Accessibility  \n3. Select Siri  \n4. Verify Type to Siri is set to your organization's parameters \n \nInternal Only - General \n5. Select Siri Settings...  \n6. Verify the settings are within your organization's parameters \nTerminal Method: \nRun the following commands to verify the Siri settings: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \ncom.apple.assistant.support.plist 'Assistant Enabled' \nThe output will be either 0, Siri is disabled, or 1, Siri is enabled. \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.Siri.plist \nThe output will be either 0, disabled, or 1 for the following Siri options: \n1. LockscreenEnabled - Is Siri enabled when the system is locked? \n2. StatusMenuVisible - Is Siri visible in the menu bar? \n3. TypeToSiriEnabled - Is Siri enabled to accept typed requests versus spoken \nones \n4. VoiceTriggerUserEnabled - Is \"Hey Siri\" enabled? \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \ncom.apple.assistant.support.plist 'Assistant Enabled' \n \n0 \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read com.apple.Siri.plist \n \n{ \n    LockscreenEnabled = 0; \n    StatusMenuVisible = 0; \n    TypeToSiriEnabled = 0; \n \n    VoiceTriggerUserEnabled = 0; \n} \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read \ncom.apple.assistant.support.plist 'Assistant Enabled' \n \n1 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.Siri.plist \n \n{ \n    LockscreenEnabled = 0; \n    StatusMenuVisible = 1; \n    TypeToSiriEnabled = 0; \n    VoiceTriggerUserEnabled = 1; \n} \n \n$ /usr/bin/sudo -u thirduser /usr/bin/defaults read \ncom.apple.assistant.support.plist 'Assistant Enabled' \n \n1 \n \n$ /usr/bin/sudo -u thirduser /usr/bin/defaults read com.apple.Siri.plist \n \n{ \n    LockscreenEnabled = 1; \n    StatusMenuVisible = 0; \n    TypeToSiriEnabled = 1; \n    VoiceTriggerUserEnabled = 1; \n} \nRemediation: \nGraphical Method: \nPerform the following steps to set Siri to your organization's parameters: \n1. Open System Preferences  \n2. Select Siri  \n3. Select the settings that are within your organization's requirements \n4. Select Show All  \n5. Select Accessibility  \n6. Select Siri  \n7. Select Enable Type to Siri to your organization's requirements \n \nInternal Only - General \nTerminal Method: \nRun the following commands to enable or disable Siri settings: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \ncom.apple.assistant.support.plist 'Assistant Enabled' -bool <true/false> \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.Siri.plist \nLockscreenEnabled -bool <true/false> \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.Siri.plist \nStatusMenuVisible -bool <true/false> \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.Siri.plist \nTypeToSiriEnabled -bool <true/false> \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.Siri.plist \nVoiceTriggerUserEnabled -bool <true/false> \nAfter running the default writes, the WindowServer needs to be restarted and the \ncaches cleared. Run the following commands to perform that action: \n$ /usr/bin/sudo /usr/bin/killall -HUP cfprefsd \n \n$ /usr/bin/sudo /usr/bin/killall SystemUIServer \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \ncom.apple.assistant.support.plist 'Assistant Enabled' -bool true \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write com.apple.Siri.plist \nStatusMenuVisible -bool true \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write com.apple.Siri.plist \nLockscreenEnabled -bool false \n \n$ /usr/bin/sudo /usr/bin/killall -HUP cfprefsd \n \n$ /usr/bin/sudo /usr/bin/killall SystemUIServer \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write \ncom.apple.assistant.support.plist 'Assistant Enabled' -bool false \n \n$ /usr/bin/sudo /usr/bin/killall -HUP cfprefsd \n \n$ /usr/bin/sudo /usr/bin/killall SystemUIServer \n \n$ /usr/bin/sudo -u thirduser /usr/bin/defaults write com.apple.Siri.plist \nVoiceTriggerUserEnabled -bool false \n \n$ /usr/bin/sudo -u thirduser /usr/bin/defaults write com.apple.Siri.plist \nTypeToSiriEnabled -bool false \n \n$ /usr/bin/sudo /usr/bin/killall -HUP cfprefsd \n \n$ /usr/bin/sudo /usr/bin/killall SystemUIServer",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.5.2 Ensure Listen for (Siri) Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "macOS includes the Siri digital assistant and, if enabled, it is always listening in case it \nis needed. In Sonoma a user may choose either \"Hey Siri\" or either \"Siri\" and \"Hey Siri.\" \nIn either case, Siri is using the microphone at all times to listen for instructions and then \ncan record questions once activated. In an organizational environment where people \nare talking and listening on video/voice calls, there are too many opportunities for \nunauthorized information disclosure to have a live microphone at all times. If Siri will be \nused it may be on, with \"Listen for\" Off and a keyboard shortcut selected.",
        "Rationale": "In most environments there is too much unbounded risk of data spillage with a \nmicrophone always on, listening for instruction, and if attention is obtained, listening for \nquestions, relying on cloud compute to answer them. There are many examples of data \nleakage for technology in this space. Future vulnerabilities and bugs are certainly \npossible. \nImpact: \nSiri will not be available for hands free usage, or not available at all if turned off \ncompletely.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the a login banner is configured: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has VoiceTriggerUserEnabled set to 0 \nTerminal Method: \nRun the following command to verify that a custom message on the login screen is \nconfigured: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.Siri')\\ \n.objectForKey('VoiceTriggerUserEnabled').js \nEOS \n \nfalse",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.Siri \n2. The key to include is set to VoiceTriggerUserEnabled \n3. The key must be set to <false/> \nNote: After testing, this profile will disable Hey Siri but only for the first input, not \nadditional inputs. This issues seems to only occur using the Apple Studio Display (and \npossibly the Pro Display XDR, but no testing has occurred with that device) and it is not \nthe primary input source. We are going to continue testing, but this seems to be an \nedge case.",
        "References": "1. https://support.apple.com/guide/mac-help/use-siri-\nmchl6b029310/mac#:~:text=Turn%20on%20Siri,may%20need%20to%20scroll%\n20down.)&text=On%20the%20right%2C%20turn%20on,already%20on%2C%20t\nhen%20click%20Enable. \n2. https://clario.co/blog/is-siri-always-listening/ \n3. https://www.siriuserguide.com/how-to-use-siri-macos/",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.6 Privacy & Security"
    },
    {
        "Title": "2.6.1 Location Services"
    },
    {
        "Title": "2.6.1.1 Ensure Location Services Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "macOS uses location information gathered through local Wi-Fi networks to enable \napplications to supply relevant information to users. With the operating system verifying \nthe location, users do not need to change the time or the time zone. The computer will \nchange them based on the user's location. They do not need to specify their location for \nweather or travel times, and they will receive alerts on travel times to meetings and \nappointments where location information is supplied. \nLocation Services simplify some processes with mobile computers, such as asset \nmanagement and time or log management. \nThere are some use cases where it is important that the computer not be able to report \nits exact location. While the general use case is to enable Location Services, it should \nnot be allowed if the physical location of the computer and the user should not be public \nknowledge.",
        "Rationale": "Location Services are helpful in most use cases and can simplify log and time \nmanagement where computers change time zones.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Location Services is enabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Location Services \n4. Verify Location Services is enabled \nTerminal Method: \nRun the following command to verify that Location Services are enabled: \n \nInternal Only - General \n$ /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c com.apple.locationd \n \n1 \n \n$ /usr/bin/sudo -u _locationd /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.locationd').objectForKey(\n'LocationServicesEnabled').js \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to enable Location Services: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Location Services \n4. Set Location Services to enabled \nTerminal Method: \nRun the following command to enable Location Services: \n$ /usr/bin/sudo /bin/launchctl load -w \n/System/Library/LaunchDaemons/com.apple.locationd.plist \nIf the com.apple.locationd.plist outputs 0, run the following command to also \nensure Location Services is running: \n$ /usr/bin/sudo /usr/bin/defaults write \n/var/db/locationd/Library/Preferences/ByHost/com.apple.locationd \nLocationServicesEnabled -bool true  \n \n$ /usr/bin/sudo /bin/launchctl kickstart -k system/com.apple.locationd \nNote: In some use cases, organizations may not want Location Services running. To \ndisable Location Services, run the command: /usr/bin/sudo /usr/bin/defaults \nwrite /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd \nLocationServicesEnabled -bool false",
        "References": "1. https://support.apple.com/en-us/HT204690 \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.6.1.2 Ensure 'Show Location Icon in Control Center when System Services Request Your Location' Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "This setting provides the user an understanding of the current status of Location \nServices and which applications are using it.",
        "Rationale": "Apple has fully integrated location services into macOS. When user applications access \nlocation an arrow is displayed next to the Control Center in the menu bar to give users \nan indication when their location is being accessed. By default system services like \nTime zones, weather, travel times, geolocation, \"Find my Mac,\" and advertising services \ndo not indicate the location is accessed. \nEnabling the \u201cShow location icon in the menu bar when System Services request your \nlocation\u201d setting will show an arrow in the control center when a system service \naccesses the location. Although an indication that location was accessed, Control \nCenter will only say that it was accessed by \"System Services\" and not the individual \nservice. Looking in System Settings > Location Services > System Services > Details\u2026 \nwill expose exactly which system services have accessed Location Services in the last \n24 hours. Third-party tools will be shown individually when they access location \nservices. \nImpact: \nUsers may be provided visibility to a setting they cannot control if organizations control \nLocation Services globally by policy.",
        "Audit": "Graphical Method: \nPerform the following steps to verify the settings for location services icon to be in the \nmenu bar: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Location Services \n4. Select Details... \n5. Verify Show location icon in menu bar when System Services request \nyour location is set to True \n \nInternal Only - General \nTerminal Method: \nRun the following commands to verify that the location services icon is in the menu bar: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.locationmenu')\\      \n.objectForKey('ShowSystemServices').js                \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to set whether the location services icon is in the menu bar: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Location Services \n4. Select Details... \n5. Set Show location icon in menu bar when System Services request \nyour location to enabled \nTerminal Method: \nRun the following commands to set the option of the location services icon being in the \nmenu bar: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.locationmenu.plist ShowSystemServices -bool \ntrue",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.6.1.3 Audit Location Services Access (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "macOS uses location information gathered through local Wi-Fi networks to enable \napplications to supply relevant information to users. While Location Services may be \nvery useful, it may not be desirable to allow all applications that can use Location \nServices to use your location for Internet queries in order to provide tailored content \nbased on your current location. \nEnsure applications that can use Location Services are authorized and provide that \ninformation where the application interacts with external systems. Apple offers feedback \nwithin System Preferences and may be enabled to supply information on the menu bar \nwhen Location Services are used. \nSafari can deny access from websites or prompt for access. \nApplications that support Location Services can be individually controlled in the Privacy \ntab in Security & Privacy under System Preferences. \nAccess should be evaluated to ensure that privacy controls are as expected.",
        "Rationale": "Privacy controls should be monitored for appropriate settings. \nImpact: \nMany macOS features rely on Location Services for tailored information. Users expect \ntheir time zone and weather to be relevant to where they are without manual \nintervention. Find my Mac needs to know where your Mac is actually located. Where \npossible, the tolerance between location privacy and convenience may be best left to \nthe user when the location itself is not sensitive. If facility locations are not public, \nlocation information should be tightly controlled.",
        "Audit": "Graphical Method: \nPerform the following steps to verify what applications are enabled for Location \nServices: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Location Services \n4. Verify that the applications allowed to access Location Services are set to your \norganization's requirements \n \nInternal Only - General \nPerform the following steps to verify what websites are enabled to ask for access to \nLocation Services: \n1. Open Safari \n2. Select Safari from the menu bar \n3. Select Settings \n4. Select Websites \n5. Select Location \n6. Verify that When visiting other websites is set to your organization's \nrequirements \nTerminal Method: \nRun the following command to evaluate the applications that are enabled to use \nLocation Services: \n$ /usr/bin/sudo /usr/bin/defaults read /var/db/locationd/clients.plist \nEnsure that all applications listed have been authorized to access location information.",
        "Remediation": "Graphical Method: \nPerform the following steps to disable unnecessary applications from accessing \nLocation Services: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Location Services \n4. Set any applications listed to your organization's requirements \nPerform the following steps to set websites to ask for permission to access Location \nServices: \n1. Open Safari \n2. Select Safari from the menu bar \n3. Select Settings \n4. Select Websites \n5. Select Location \n6. Set When visiting other websites to your organization's requirements",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n2.3 Address Unauthorized Software \n \nEnsure that unauthorized software is either removed from use on enterprise \nassets or receives a documented exception. Review monthly, or more frequently. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n2.6 Address unapproved software \n \nEnsure that unauthorized software is either removed or the inventory is updated \nin a timely manner \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \n \n \nInternal Only - General \n2.6.2 Full Disk Access"
    },
    {
        "Title": "2.6.2.1 Audit Full Disk Access for Applications (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Starting with macOS 10.13, Apple enforces GUI access to the entire File System \nthrough System Preferences. Only Applications from known developers with mission \nrequirements for Full Disk Access, such as security monitoring tools, should have Full \nDisk Access. Applications that have Full Disk Access can access restricted files and \nbypass macOS security controls. Any applications with that access should be \norganizationally authorized.",
        "Rationale": "Any applications with Full Disk Access can bypass MacOS security controls and must \nbe reviewed as organizationally accepted risk.",
        "Audit": "Graphical Method: \nPerform the following steps to verify what applications have full disk access: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Full Disk Access \n4. Verify that the applications are set to your organization's requirements \nTerminal Method: \nRun the following command to verify that Location Services are enabled: \n$ /usr/bin/sudo /usr/bin/sqlite3 /Library/Application\\ \nSupport/com.apple.TCC/TCC.db 'select client from access where auth_value and \nservice = \"kTCCServiceSystemPolicyAllFiles\"' \nThe output will be what applications have full disk access enabled.",
        "Remediation": "Graphical Method: \nPerform the following steps to set full disk access for applications that meet your \norganization's requirements: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Full Disk Access \n4. Set any listed applications to your organization's requirements \n5. (Optional) Select the + to add applications to the list, or - to remove them \n \nInternal Only - General",
        "References": "1. https://support.apple.com/guide/security/controlling-app-access-to-files-\nsecddd1d86a6/web \n2. https://lapcatsoftware.com/articles/FullDiskAccess.html \n3. https://www.techrepublic.com/article/secure-mac-data-full-disk-access/ \n4. https://support.intego.com/hc/en-us/articles/360016683471-Enable-Full-Disk-\nAccess-in-macOS \n5. https://jumpcloud.com/support/grant-full-disk-access-permissions-to-the-\njumpcloud-agent-for-macos \n6. https://docs.metallic.io/metallic/enabling_full_disk_access_for_macos.html \n7. https://knowledge.broadcom.com/external/article/176368/configuring-mdm-\nprofiles-for-full-disk-a.html",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n16.7 Use Standard Hardening Configuration Templates for \nApplication Infrastructure \n \nUse standard, industry-recommended hardening configuration templates for \napplication infrastructure components. This includes underlying servers, databases, \nand web servers, and applies to cloud containers, Platform as a Service (PaaS) \ncomponents, and SaaS components. Do not allow in-house developed software to \nweaken configuration hardening. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.6.3 Ensure Sending Diagnostic and Usage Data to Apple Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Apple provides a mechanism to send diagnostic and analytics data back to Apple to \nhelp them improve the platform. Information sent to Apple may contain internal \norganizational information that should be controlled and not available for processing by \nApple. Turn off all Analytics and Improvements sharing. \nShare Mac Analytics (Share with App Developers dependent on Mac Analytic sharing) \n\u2022 \nIncludes diagnostics, usage and location data \nShare iCloud Analytics \n\u2022 \nIncludes iCloud data and usage information",
        "Rationale": "Organizations should have knowledge of what is shared with the vendor and that this \nsetting automatically forwards information to Apple.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that diagnostic data is not being send to Apple: \n1. Open System Settings \n2. Open Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Allow Diagnostic Submission set to False \n5. Also verify that an installed profile has Auto Submit set to False \n6. Also verify that an installed profile has Siri Data Sharing Opt-In Status set \nto 2 \nTerminal Method: \nRun the following command to verify that a profile is installed that disables sending \ndiagnostic and usage data to Apple: \n \nInternal Only - General \n/usr/bin/osascript -l JavaScript << EOS \nfunction run() { \nlet pref1 = \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SubmitDiagInfo')\\ \n.objectForKey('AutoSubmit').js \nlet pref2 = \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowDiagnosticSubmission').js \nlet pref3 = \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('Siri Data Sharing Opt-In Status').js \n \nif ( pref1 == false && pref2 == false && pref3 == 2){ \n    return(\"true\") \n} else { \n    return(\"false\") \n} \n} \nEOS \n \ntrue \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowDiagnosticSubmission \n3. The key must be set to <false/> \n4. There must also be a second PayloadType string of \ncom.apple.SubmitDiagInfo \n5. The key to include is AutoSubmit \n6. The key must be set to <false/> \n7. There must also be a third PayloadType string of com.apple. \napplicationaccess  \n8. The key to also include is Siri Data Sharing Opt-In Status \n9. The key must be set to <integer>2<integer/>",
        "References": "1. https://support.apple.com/en-ca/guide/mac-help/mh27990/mac \nAdditional Information: \nTo verify individual users: \n \nInternal Only - General \nAudit: \nGraphical Method: \nPerform the following steps to verify that diagnostic data is not being send to Apple: \n1. Open System Settings  \n2. Select Privacy & Security  \n3. Select Analytics & Improvements  \n4. Select Analytics & Improvements \n5. Verify that Share Mac Analytics is not enabled \n6. Verify that Share with App Developers is not enabled \n7. Verify that Improve Siri & Dictation is not enabled \nTerminal Method: \nRun the following command to verify that sending diagnostic and usage data to Apple is \ndisabled: \n$ /usr/bin/sudo /usr/bin/defaults read /Library/Application\\ \nSupport/CrashReporter/DiagnosticMessagesHistory.plist AutoSubmit \n \n0 \n \n$ /usr/bin/sudo /usr/bin/defaults read /Library/Application\\ \nSupport/CrashReporter/DiagnosticMessagesHistory.plist ThirdPartyDataSubmit \n \n0 \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Preferences/com.apple.assistant.support \"Siri Data \nSharing Opt-In Status\" \n \n2 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Preferences/com.apple.assistant.support \"Siri Data \nSharing Opt-In Status\" \n \n2 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read \n/Users/seconduser/Library/Preferences/com.apple.assistant.support \"Siri Data \nSharing Opt-In Status\" \n \n1 \nRemediation: \nGraphical Method: \nPerform the following steps to disable diagnostic data being sent to Apple: \n \nInternal Only - General \n1. Open System Settings  \n2. Select Privacy & Security  \n3. Select Analytics & Improvements  \n4. Select Analytics & Improvements \n5. Set Share Mac Analytics to disabled \n6. Set Share with App Developers to disabled \n7. Set Improve Siri & Dictation to disabled \nTerminal Method: \nRun the following commands to disable the sending of diagnostic data to Apple: \n$ /usr/bin/sudo /usr/bin/defaults write /Library/Application\\ \nSupport/CrashReporter/DiagnosticMessagesHistory.plist AutoSubmit -bool false \n \n/usr/bin/sudo /usr/bin/defaults write /Library/Application\\ \nSupport/CrashReporter/DiagnosticMessagesHistory.plist ThirdPartyDataSubmit -\nbool false \n \n$ /usr/bin/sudo /bin/chmod 644 /Library/Application\\ \nSupport/CrashReporter/DiagnosticMessagesHistory.plist \n \n$ /usr/bin/sudo /usr/bin/chgrp admin /Library/Application\\ \nSupport/CrashReporter/DiagnosticMessagesHistory.plist \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Preferences/com.apple.assistant.support \"Siri Data \nSharing Opt-In Status\" -int 2 \nexample: \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write \n/Users/seconduser/Library/Preferences/com.apple.assistant.support \"Siri Data \nSharing Opt-In Status\" -int 2",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.6.4 Ensure Limit Ad Tracking Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple provides a framework that allows advertisers to target Apple users and end-users \nwith advertisements. While many people prefer to see advertising that is relevant to \nthem and their interests, the detailed information that is collected, correlated, and \navailable to advertisers in repositories via data mining is often disconcerting. This \ninformation is valuable to both advertisers and attackers, and has been used with other \nmetadata to reveal users' identities. \nOrganizations should manage advertising settings on computers rather than allow users \nto configure the settings. \nApple Information \nAd tracking should be limited on 10.15 and prior.",
        "Rationale": "Organizations should manage user privacy settings on managed devices to align with \norganizational policies and user data protection requirements. \nImpact: \nUses will see generic advertising rather than targeted advertising. Apple warns that this \nwill reduce the number of relevant ads.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that limited ad tracking is set: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has allowApplePersonalizedAdvertising set to \n0 \nTerminal Method: \nRun the following command to verify that a profile is installed that enables Limit Ad \nTracking: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowApplePersonalizedAdvertising').js \nEOS \n \nfalse \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowApplePersonalizedAdvertising \n3. The key must be set to <false/> \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify that limited ad tracking is set: \n1. Open Privacy & Security  \n2. Select Apple Advertising  \n3. Verify that Personalized Ads is not enabled \nor \n1. Open System Settings  \n2. Select Privacy & Security  \n3. Select Profiles  \n4. Verify that an installed profile has allowApplePersonalizedAdvertising set to \n0  \nTerminal Method: \nFor each user, run the following command to verify that ad tracking is limited: \n \nInternal Only - General \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Preferences/com.apple.AdLib.plist \nallowApplePersonalizedAdvertising \n \n0 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Preferences/com.apple.AdLib.plist \nallowApplePersonalizedAdvertising \n \n0 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read \n/Users/seconduser/Library/Preferences/com.apple.AdLib.plist \nallowApplePersonalizedAdvertising \n \n1 \nIn this example, firstuser is compliant and seconduser is not. \nRemediation: \nGraphical Method: \nPerform the following steps to set limited ad tracking: \n1. Open Privacy & Security  \n2. Select Apple Advertising  \n3. Set Personalized Ads to disabled \nTerminal Method: \nFor each needed user, run the following command to enable limited ad tracking: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Preferences/com.apple.Adlib.plist \nallowApplePersonalizedAdvertising -bool false \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write \n/Users/seconduser/Library/Preferences/com.apple.Adlib.plist \nallowApplePersonalizedAdvertising -bool false",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.6.5 Ensure Gatekeeper Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Gatekeeper is Apple\u2019s application that utilizes allowlisting to restrict downloaded \napplications from launching. It functions as a control to limit applications from unverified \nsources from running without authorization. In an update to Gatekeeper in macOS 13 \nVentura, Gatekeeper checks every application on every launch, not just quarantined \napps.",
        "Rationale": "Disallowing unsigned software will reduce the risk of unauthorized or malicious \napplications from running on the system.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Gatekeeper is enabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Verify that 'Allow apps downloaded from' is set to 'App Store and identified \ndevelopers' \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Policies set to Enable \n5. Verify that an installed profile has Identified Developers set to Allow \nTerminal Method: \nRun the following command to verify that Gatekeeper is enabled: \n$ /usr/bin/sudo /usr/sbin/spctl --status \n \nassessments enabled",
        "Remediation": "Graphical Method: \nPerform the following steps to enable Gatekeeper: \n1. Open System Settings \n \nInternal Only - General \n2. Select Privacy & Security \n3. Set 'Allow apps downloaded from' to 'App Store and identified developers' \nTerminal Method: \nRun the following command to enable Gatekeeper to allow applications from App Store \nand identified developers: \n$ /usr/bin/sudo /usr/sbin/spctl --master-enable \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.systempolicy.control \n2. The key to include is AllowIdentifiedDevelopers \n3. The key must be set to <true/> \n4. The key to also include is EnableAssessment \n5. The key must be set to <true/>",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n10.1 Deploy and Maintain Anti-Malware Software \n \nDeploy and maintain anti-malware software on all enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv8 \n10.2 Configure Automatic Anti-Malware Signature \nUpdates \n \nConfigure automatic updates for anti-malware signature files on all enterprise \nassets. \n\u25cf \n\u25cf \n\u25cf \nv8 \n10.5 Enable Anti-Exploitation Features \n \nEnable anti-exploitation features on enterprise assets and software, where \npossible, such as Microsoft\u00ae Data Execution Prevention (DEP), Windows\u00ae \nDefender Exploit Guard (WDEG), or Apple\u00ae System Integrity Protection (SIP) and \nGatekeeper\u2122. \n \n\u25cf \n\u25cf \nv7 \n8.2 Ensure Anti-Malware Software and Signatures are \nUpdated \n \nEnsure that the organization's anti-malware software updates its scanning \nengine and signature database on a regular basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n8.4 Configure Anti-Malware Scanning of Removable \nDevices \n \nConfigure devices so that they automatically conduct an anti-malware scan of \nremovable media when inserted or connected. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.6.6 Ensure FileVault Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "FileVault secures a system's data by automatically encrypting its boot volume and \nrequiring a password or recovery key to access it. \nFileVault should be used with a saved escrow key to ensure that the owner can decrypt \ntheir data if the password is lost. \nFileVault may also be enabled using command line using the fdesetup command. To \nuse this functionality, consult the Der Flounder blog for more details (see link below \nunder References).",
        "Rationale": "Encrypting sensitive data minimizes the likelihood of unauthorized users gaining access \nto it. \nImpact: \nMounting a FileVault encrypted volume from an alternate boot source will require a valid \npassword to decrypt it. Apple has also implemented an escalating policy for failed \npasswords. To find out more about that, read here: Passcodes and passwords",
        "Audit": "Graphical Method: \nPerform the following steps to verify that FileVault is enabled: \n1. Open System Settings \n2. Select Privacy & Privacy \n3. Verify that FileVault states FileVault is turned on for the disk \n\"<disk name>\" \n4. Select Privacy & Security \n5. Select Profile \n6. Verify that an installed profile has FileVault Can't Disable set to True \nTerminal Method: \nRun the following command to verify that FileVault is enabled and cannot be disabled: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/fdesetup status \n \nFileVault is On \n \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\ \n.objectForKey('dontAllowFDEDisable').js \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to enable FileVault: \n1. Open System Settings \n2. Select Security & Privacy \n3. Select Turn On... \nNote: This will allow you to create a recovery key for FileVault. Keep the key saved \nsecurely in case it is needed at a later date. \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.MCX \n2. The key to include is dontAllowFDEDisable \n3. The key must be set to <true/> \nNote: This profile is required to pass the audit.",
        "References": "1. https://derflounder.wordpress.com/2015/02/02/managing-yosemites-filevault-2-\nwith-fdesetup/ \n2. https://derflounder.wordpress.com/2019/01/15/unlock-or-decrypt-your-filevault-\nencrypted-boot-drive-from-the-command-line-on-macos-mojave/ \n3. https://derflounder.wordpress.com/2021/10/29/use-of-filevault-institutional-\nrecovery-keys-no-longer-recommended-by-apple/ \n4. https://support.apple.com/guide/security/passcodes-and-passwords-\nsec20230a10d/1/web/1 \nAdditional Information: \nFileVault may not be desirable on a virtual OS. As long as the hypervisor and file \nstorage are encrypted, the virtual OS does not need to be. Rather than checking if the \nOS is virtual and passing the control regardless of the encryption of the host system, the \nnormal check will be run. Security officials can evaluate the comprehensive controls \noutside of the OS being tested. \n \nInternal Only - General \nPart of FileVault management in an Enterprise environment is to ensure key \nmanagement if technical staff need to decrypt encrypted volumes. More information \nhere: https://derflounder.wordpress.com/2021/10/29/use-of-filevault-institutional-\nrecovery-keys-no-longer-recommended-by-apple/",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.6 Encrypt Data on End-User Devices \n \nEncrypt data on end-user devices containing sensitive data. Example \nimplementations can include: Windows BitLocker\u00ae, Apple FileVault\u00ae, Linux\u00ae dm-\ncrypt. \n\u25cf \n\u25cf \n\u25cf \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv7 \n13.6 Encrypt the Hard Drive of All Mobile Devices. \n \nUtilize approved whole disk encryption software to encrypt the hard drive of all \nmobile devices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.8 Encrypt Sensitive Information at Rest \n \nEncrypt all sensitive information at rest using a tool that requires a secondary \nauthentication mechanism not integrated into the operating system, in order to \naccess the information. \n \n \n\u25cf"
    },
    {
        "Title": "2.6.7 Audit Lockdown Mode (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Apple introduced Lockdown Mode as a security feature in their 2022 OS releases that \nprovides additional security protection Apple describes as extreme. Users and \norganizations that suspect some users are targets of advanced attacks must consider \nusing this control. \nWhen lockdown mode is enabled, specific trusted websites can be excluded from \nLockdown protection if necessary.",
        "Rationale": "Lockdown Mode was designed by Apple as an aggressive approach to commonly \nattacked OS features where additional controls could reduce the attack surface. IT \nsystems and devices, including their users, are subject to continuous exploit attempts. \nMost of that activity is not from an advanced attacker and can be considered \nbackground noise to a patched, hardened device. Advanced attackers are of more \nconcern and a risk review to understand organizational targets and use Lockdown Mode \nwhere appropriate is necessary. \nImpact: \nLockdown Mode must be tested appropriately for real-world impact on users prior to \nuse. As a new feature there is not sufficient technical reporting on user impacts.",
        "Audit": "Graphical Method: \nPerform the following steps to verify the settings for Lockdown Mode: \n1. Open System Settings \n2. Select Privacy & Security \n3. Verify Lockdown Mode is set to your organization's parameters \nTerminal Method: \nRun the following command to verify that Lockdown mode is enabled for the user: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read .GlobalPreferences.plist \nLDMGlobalEnabled 2>/dev/null \nWhen Lockdown mode has been enabled, it will return 1 and when disabled return 0. If \nLockdown has never been enabled, it will return no value. \nNOTE: Lockdown mode is set per local user, therefore you must iterate through each \nlocal user to verify the settings. \n \nInternal Only - General",
        "Remediation": "Graphical Method: \nPerform the following steps to set Lockdown Mode to your organization's requirements: \n1. Open System Settings \n2. Select Privacy & Security \n3. Set Lockdown Mode to your organization's parameters",
        "References": "1. https://support.apple.com/en-us/HT212650 \n2. https://www.lifewire.com/use-lockdown-mode-on-mac-6454923",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.6 Securely Manage Enterprise Assets and Software \n \nSecurely manage enterprise assets and software. Example implementations \ninclude managing configuration through version-controlled-infrastructure-as-code \nand accessing administrative interfaces over secure network protocols, such as \nSecure Shell (SSH) and Hypertext Transfer Protocol Secure (HTTPS). Do not use \ninsecure management protocols, such as Telnet (Teletype Network) and HTTP, \nunless operationally essential. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.2 Configure Centralized Point of Authentication \n \nConfigure access for all accounts through as few centralized points of \nauthentication as possible, including network, security, and cloud systems. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.6.8 Ensure an Administrator Password Is Required to Access System-Wide Preferences (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "System Preferences controls system and user settings on a macOS Computer. System \nPreferences allows the user to tailor their experience on the computer as well as \nallowing the System Administrator to configure global security settings. Some of the \nsettings should only be altered by the person responsible for the computer.",
        "Rationale": "By requiring a password to unlock system-wide System Preferences, the risk of a user \nchanging configurations that affect the entire system is mitigated and requires an admin \nuser to re-authenticate to make changes. \nImpact: \nUsers will need to enter their password to unlock some additional preference panes that \nare unlocked by default like Network, Startup and Printers & Scanners.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that an administrator password is required to \naccess system-wide preferences: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Advanced \n4. Verify that Require an administrator password to access system-wide \nsettings is enabled \nTerminal Method: \nRun the following command to verify that accessing system-wide preferences requires \nan administrator password: \n \nInternal Only - General \n$ authDBs=(\"system.preferences\" \"system.preferences.energysaver\" \n\"system.preferences.network\" \"system.preferences.printing\" \n\"system.preferences.sharing\" \"system.preferences.softwareupdate\" \n\"system.preferences.startupdisk\" \"system.preferences.timemachine\") \n  result=\"1\" \n  for section in ${authDBs[@]}; do \n    if [[ $(/usr/bin/security -q authorizationdb read \"$section\" | \n/usr/bin/xmllint -xpath 'name(//*[contains(text(), \"shared\")]/following-\nsibling::*[1])' -) != \"false\" ]]; then \n      result=\"0\" \n    fi \n    if [[ $(security -q authorizationdb read \"$section\" | /usr/bin/xmllint -\nxpath '//*[contains(text(), \"group\")]/following-sibling::*[1]/text()' - ) != \n\"admin\" ]]; then \n      result=\"0\" \n    fi \n    if [[ $(/usr/bin/security -q authorizationdb read \"$section\" | \n/usr/bin/xmllint -xpath 'name(//*[contains(text(), \"authenticate-\nuser\")]/following-sibling::*[1])' -) != \"true\" ]]; then \n      result=\"0\" \n    fi \n    if [[ $(/usr/bin/security -q authorizationdb read \"$section\" | \n/usr/bin/xmllint -xpath 'name(//*[contains(text(), \"session-\nowner\")]/following-sibling::*[1])' -) != \"false\" ]]; then \n      result=\"0\" \n    fi \n  done \n  echo $result \nNote: Every audit and remediation incudes sudo before all commands. This is an \nexception because authdb is a variable and using sudo causes an error in the output.",
        "Remediation": "Graphical Method: \nPerform the following steps to verify that an administrator password is required to \naccess system-wide preferences: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Advanced \n4. Set Require an administrator password to access system-wide \nsettings to enabled \nTerminal Method: \nThe authorizationdb settings cannot be written to directly, so the plist must be exported \nout to a temporary file. Changes can be made to the temporary plist, then imported back \ninto the authorizationdb settings. \nRun the following commands to enable that an administrator password is required to \naccess system-wide preferences: \n \nInternal Only - General \n$ authDBs=(\"system.preferences\" \"system.preferences.energysaver\" \n\"system.preferences.network\" \"system.preferences.printing\" \n\"system.preferences.sharing\" \"system.preferences.softwareupdate\" \n\"system.preferences.startupdisk\" \"system.preferences.timemachine\") \n \n  for section in ${authDBs[@]}; do \n    /usr/bin/security -q authorizationdb read \"$section\" > \n\"/tmp/$section.plist\" \n \n    class_key_value=$(usr/libexec/PlistBuddy -c \"Print :class\" \n\"/tmp/$section.plist\" 2>&1) \n    if [[ \"$class_key_value\" == *\"Does Not Exist\"* ]]; then \n      /usr/libexec/PlistBuddy -c \"Add :class string user\" \n\"/tmp/$section.plist\" \n    else \n      /usr/libexec/PlistBuddy -c \"Set :class user\" \"/tmp/$section.plist\" \n    fi \n \n    key_value=$(/usr/libexec/PlistBuddy -c \"Print :shared\" \n\"/tmp/$section.plist\" 2>&1)    \n    if [[ \"$key_value\" == *\"Does Not Exist\"* ]]; then \n      /usr/libexec/PlistBuddy -c \"Add :shared bool false\" \n\"/tmp/$section.plist\" \n    else \n      /usr/libexec/PlistBuddy -c \"Set :shared false\" \"/tmp/$section.plist\" \n    fi \n \n    auth_user_key=$(/usr/libexec/PlistBuddy -c \"Print :authenticate-user\" \n\"/tmp/$section.plist\" 2>&1)    \n    if [[ \"$auth_user_key\" == *\"Does Not Exist\"* ]]; then \n      /usr/libexec/PlistBuddy -c \"Add :authenticate-user bool true\" \n\"/tmp/$section.plist\" \n    else \n      /usr/libexec/PlistBuddy -c \"Set :authenticate-user true\" \n\"/tmp/$section.plist\" \n    fi \n \n    session_owner_key=$(/usr/libexec/PlistBuddy -c \"Print :session-owner\" \n\"/tmp/$section.plist\" 2>&1)    \n    if [[ \"$session_owner_key\" == *\"Does Not Exist\"* ]]; then \n      /usr/libexec/PlistBuddy -c \"Add :session-owner bool false\" \n\"/tmp/$section.plist\" \n    else \n      /usr/libexec/PlistBuddy -c \"Set :session-owner false\" \n\"/tmp/$section.plist\" \n    fi \n \n    group_key=$(usr/libexec/PlistBuddy -c \"Print :group\" \n\"/tmp/$section.plist\" 2>&1) \n    if [[ \"$group_key\" == *\"Does Not Exist\"* ]]; then \n      /usr/libexec/PlistBuddy -c \"Add :group string admin\" \n\"/tmp/$section.plist\" \n    else \n      /usr/libexec/PlistBuddy -c \"Set :group admin\" \"/tmp/$section.plist\" \n    fi \n \n    /usr/bin/security -q authorizationdb write \"$section\" < \n \nInternal Only - General \n\"/tmp/$section.plist\" \n  done \nNote: Every audit and remediation incudes sudo before all commands. This is an \nexception because authdb is a variable and using sudo causes an error in the output.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.7 Desktop & Dock"
    },
    {
        "Title": "2.7.1 Ensure Screen Saver Corners Are Secure (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Hot Corners can be configured to disable the screen saver by moving the mouse cursor \nto a corner of the screen.",
        "Rationale": "Setting a hot corner to disable the screen saver poses a potential security risk since an \nunauthorized person could use this to bypass the login screen and gain access to the \nsystem.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that a Hot Corner is not set to Disable Screen \nSaver: \n1. Open System Settings \n2. Select General \n3. Select Privacy & Security \n4. Verify that an installed profile has <wvous-tl-corner>, <wvous-bl-corner>, \n<wvous-tr-corner>, and <wvous-br-corner> is not set to 6 \nTerminal Method: \nRun the following command to verify that a profile is installed secures screen saver \ncorners: \n$ /usr/bin/profiles -P -o stdout | /usr/bin/grep -Ec '\"wvous-bl-corner\" = \n6|\"wvous-br-corner\" = 6|\"wvous-tl-corner\" = 6|\"wvous-tr-corner\" = 6' \n \n0 \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.dock \n2. The key to include is Forced \n3. The key must be set to the following: \n \nInternal Only - General \n<array> \n \n<dict> \n \n \n<key>mcx_preference_settings</key> \n \n \n \n<dict> \n \n \n \n \n<key>wvous-bl-corner</key> \n \n \n \n \n<integer><\u22606></integer> \n \n \n \n \n<key>wvous-br-corner</key> \n \n \n \n \n<integer><\u22606></integer> \n \n \n \n \n<key>wvous-tl-corner</key> \n \n \n \n \n<integer><\u22606></integer> \n \n \n \n \n<key>wvous-tr-corner</key> \n \n \n \n \n<integer><\u22606></integer> \n \n \n \n</dict> \n \n \n</dict> \n</array> \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to ensure that a Hot Corner is not set to Disable Screen \nSaver: \n1. Open System Settings  \n2. Select Desktop & Dock  \n3. Select `Hot Corners... \n4. Verify that Disable Screen Saver is not set to any of the corners \nor \n1. Open System Settings  \n2. Select General  \n3. Select Privacy & Security  \n4. Verify that an installed profile has <wvous-tl-corner>, <wvous-bl-corner>, \n<wvous-tr-corner>, and <wvous-br-corner> set to and value that is not 6  \nTerminal Method: \nFor all users, run the following commands to verify that Disable Screen Saver is not set \nas a Hot Corner: \n \nInternal Only - General \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.dock wvous-tl-\ncorner \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.dock wvous-bl-\ncorner \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.dock wvous-tr-\ncorner \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.dock wvous-br-\ncorner \nVerify that the output does not have 6 as a key value. Any other number, or an output \nthat includes does not exist, is compliant. \nexample: \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tl-\ncorner \n \n10 \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-bl-\ncorner \n \n2020-07-31 14:32:29.018 defaults[39521:1276494]  \nThe domain/default pair of (com.apple.dock, wvous-bl-corner) does not exist \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tr-\ncorner \n \n2020-07-31 14:32:32.403 defaults[39523:1276515]  \nThe domain/default pair of (com.apple.dock, wvous-tr-corner) does not exist \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-br-\ncorner \n \n2020-07-31 14:32:36.045 defaults[39525:1276529]  \nThe domain/default pair of (com.apple.dock, wvous-br-corner) does not exist \nRemediation: \nGraphical Method: \nPerform the following steps to disable a Hot Corner set to Disable Screen Saver: \n1. Open System Settings  \n2. Select Desktop & Dock  \n3. Select `Hot Corners... \n4. Set any corners set to Disable Screen Saver to any other selection to meets \nyour organization's parameters \n5. Select Done  \nTerminal Method: Run the following command to turn off Disable Screen Saver for a \nHot Corner: \n \nInternal Only - General \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.dock <corner \nthat is set to '6'> -int 0 \nexample: \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write com.apple.dock wvous-\ntl-corner -int 0 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tl-\ncorner \n \n0",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.3 Configure Automatic Session Locking on Enterprise \nAssets \n \nConfigure automatic session locking on enterprise assets after a defined period \nof inactivity. For general purpose operating systems, the period must not exceed \n15 minutes. For mobile end-user devices, the period must not exceed 2 minutes. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.8 Displays"
    },
    {
        "Title": "2.8.1 Audit Universal Control Settings (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Universal Control is an Apple feature that allows Mac users to control multiple other \nMacs and iPads with the same keyboard, mouse, and trackpad using the same Apple \nID. The technology relies on already available iCloud services, particularly Handoff. \nUniversal Control simplifies the use of iCloud connectivity of multiple computers using \nthe same Apple ID. This may simplify data transfer from organizationally-managed and \npersonal devices. The use of the same iCloud account and Handoff is the underlying \nconcern that should be evaluated. The use of the same keyboard or mouse across \nmultiple devices does not by itself decrease organizational security. \nUniversal Clipboard, a feature of Universal Control, allows any device using the same \nApple ID to access the clipboard of any other devices using the same Apple ID.",
        "Rationale": "The use of devices together when some are organizational and some are not may \ncomplicate device management standards. \nUniversal control settings may also enable a user to share their clipboard across \nmultiple devices authenticated to the same Apple ID, so disabling that should be \ndiscussed by the organization. \nImpact: \nThe user should not be impacted if Universal Control is set either way.",
        "Audit": "Graphical Method: \nPerform the following steps to verify a profile is installed that configures Universal \nControl: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has with com.apple.universalcontrol in \nSettings and has Disable set to your organization's parameters. \nTerminal Method: \nRun the following command to verify that a profile is installed that sets Universal Control \nto your organization's parameters: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.universalcontrol')\\ \n.objectForKey('Disable').js \nEOS \nIf the output is true, Universal Control is disabled. If it is false, then Universal Control \nis enabled.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.universalcontrol \n2. The key to include is Disable \n3. Set the key to <true/> or <false/> based on your organization's requirements \nNote: Since the profile method sets a system-wide setting and not a user-level one, the \nprofile method is the preferred method. It is always better to set system-wide than per \nuser. \nNote: If your organization is allowing Universal Control, your organization can still \ndisable Universal Clipboard via a profile. To disable Universal Clipboard, create or edit a \nconfiguration profile with the following information: \n1. The PayloadType string is com.apple.coreservices.useractivityd \n2. The key to include is ClipboardSharingEnabled \n3. Set the key to <false/>",
        "References": "1. https://support.apple.com/en-us/HT212757 \n2. https://support.apple.com/en-us/102459 \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify the Universal Control settings: \n1. Open System Settings  \n2. Select Displays  \n3. Select Advanced...  \n4. Verify that the settings meet your organization's requirements \nTerminal Method: \n \nInternal Only - General \nRun the following command to verify the settings for Universal Control: \n$ /usr/bin/sudo -u <user> /usr/bin/defaults -currentHost read \ncom.apple.universalcontrol Disable \nIf the output is The domain/default pair of (com.apple.universalcontrol, \nDisable) does not exist then Universal Control is enabled. If the output is 1, it is \ndisabled \n$ /usr/bin/sudo -u <user> /usr/bin/defaults -currentHost read \ncom.apple.universalcontrol DisableMagicEdges \nIf the output is The domain/default pair of (com.apple.universalcontrol, \nDisableMagicEdges) does not exist then Push through the edge of the \ndisplay to connect a nearby Mac or iPad is enabled. If the output is 1, it is \ndisabled \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read \ncom.apple.universalcontrol Disable \n \nThe domain/default pair of (com.apple.universalcontrol, Disable) does not \nexist     \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read \ncom.apple.universalcontrol DisableMagicEdges \n \nThe domain/default pair of (com.apple.universalcontrol, Disable) does not \nexist \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read \ncom.apple.universalcontrol Disable \n \n1 \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read \ncom.apple.universalcontrol DisableMagicEdges \n \n1 \nRemediation: \nGraphical Method: \nPerform the following steps to set Universal Control to your organization's requirements: \n1. Open System Preferences  \n2. Select Display  \n3. Select Advanced...  \n4. Set the options that meet your organization's requirements \nTerminal Method: \nRun the following command to enable or disable Universal Control:"
    },
    {
        "Title": "2.9 Battery (Energy Saver)",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \n2.9 Battery (Energy Saver) \nThis section is for energy use controls. Prior to Big Sur (Mac OS 11) it was known only \nas Energy Saver. \n \nInternal Only - General \nOn desktop Macs, this preference pane is still named Energy Saver and not Battery. \nMac Energy Saver preferences explained"
    },
    {
        "Title": "2.9.1 OS Resuming From Sleep"
    },
    {
        "Title": "2.9.1.1 Ensure the OS Is Not Active When Resuming from Standby (Intel) (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep \nencryption keys in memory to allow the use of the disk that has been FileVault \nprotected. The storage volume has been unlocked and acts as if it were not encrypted. \nWhen the system is not in use, the volume is protected through encryption. When the \nsystem is sleeping and available to quickly resume, the encryption keys remain in \nmemory. \nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/ \nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. \nThe default value for \"standbydelay\" is three hours (10800 seconds). This value is likely \nappropriate for most desktops. If Mac desktops are deployed in unmonitored, less \nphysically secure areas with confidential data, this value might be adjusted. The \ndesktop would have to retain power, however, so that the running OS or physical RAM \ncould be attacked. \nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. \nThis setting should allow laptop users in most cases to stay within physically secured \nareas while going to a conference room, auditorium, or other internal location without \nhaving to unlock the encryption. When the user goes home at night, the laptop will auto-\nhibernate after 15 minutes and require the FileVault password to unlock prior to logging \nback into the system when it resumes. \nMacBooks should also be set to a hibernate mode that removes power from the RAM. \nThis will stop the possibility of cold boot attacks on the system. \nMacs running Apple silicon chips, rather than Intel chips, do not require the same \nconfiguration as Intel-based Macs.",
        "Rationale": "To mitigate the risk of data loss, the system should power down and lock the encrypted \ndrive after a specified time. Laptops should hibernate 15 minutes or less after sleeping. \nImpact: \nThe laptop will take additional time to resume normal operation if only sleeping rather \nthan hibernating. \nSetting hibernatemode to 25 will disable the \"always-on\" feature of the Apple Silicon \nMacs. \n \nInternal Only - General",
        "Audit": "Terminal Method: \nRun the following command to verify the hibernation settings and that FileVault keys are \ndestroyed on standby: \n$ /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | /usr/bin/grep \n-e MacBook  \nIf there is an output, run the following: \n$ /usr/bin/sudo /usr/bin/pmset -b -g | | /usr/bin/grep -e standby  \nThe output should include a standbydelaylow value \u2264 900, a standbydelayhigh \nvalue \u2264 900, and a highstandbythreshold value \u2265 90. \n$ /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep hibernatemode \n \n hibernatemode        25 \nexample: \n \n$ /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | /usr/bin/grep \n-e MacBook  \n \n      Model Name: MacBook Pro \n      Model Identifier: MacBookPro13,1 \n \n$ /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e standby \n \n standbydelaylow      600 \n standby              1 \n standbydelayhigh     600 \n highstandbythreshold 50 \n \n$ /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep hibernatemode \n \n hibernatemode        25 \nNote: To verify if you are running an Intel processor, run /usr/sbin/sysctl -n \nmachdep.cpu.brand_string. The output will include Intel.",
        "Remediation": "Terminal Method: \nRun the following command to set the hibernate delays and to ensure the FileVault keys \nare set to be destroyed on standby: \n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow <value\u2264900> \n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh <value\u2264900> \n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold <value\u226590> \n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1 \n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25 \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500 \n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500 \n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100 \n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1 \n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
        "References": "1. https://www.lifewire.com/change-mac-sleep-settings-2260804 \n2. https://www.zdziarski.com/blog/?p=6705 \n3. https://www.howtogeek.com/260478/how-to-choose-when-your-mac-hibernates-\nor-enters-standby/ \nAdditional Information: \nThe Ensure FileVault is Locked on Sleep recommendation has been removed. If your \norganization wants to continue setting filevault lock, create or edit a configuration profile \nwith the following information: \n1. The PayloadType string is com.apple.MCX  \n2. The key to include is DestroyFVKeyOnStandby  \n3. The key must be set to",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.9.1.2 Ensure the OS Is Not Active When Resuming from Sleep and Display Sleep (Apple Silicon) (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep \nencryption keys in memory to allow the use of the disk that has been FileVault \nprotected. The storage volume has been unlocked and acts as if it were not encrypted. \nWhen the system is not in use, the volume is protected through encryption. When the \nsystem is sleeping and available to quickly resume, the encryption keys remain in \nmemory. \nIf an unauthorized party has possession of the computer and the computer is only slept, \nthere are known attack vectors that can be attempted against the RAM that has the \nencryption keys or the running operating system protected by a login screen. Network \nattacks if network interfaces are on, as well as USB or other open device ports, are \npossible. Most of these attacks require knowledge of unpatched vulnerabilities or a high \nlevel of sophistication if all the other controls function as intended. \nThere is little impact on hibernating the system rather than sleeping after an appropriate \ntime period to remediate the risk of OS level attacks. Hibernation writes the keys to disk \nand requires FileVault to be unlocked prior to the OS being available. In the case of \nunauthorized personnel with access to the computer, encryption would have to be \nbroken prior to attacking the operating system in order to recover data from the system. \nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/ \nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. \nMacBooks should be set so that the sleep is 15 minutes (900 seconds) or less. This \nsetting should allow laptop users in most cases to stay within physically secured areas \nwhile going to a conference room, auditorium, or other internal location without having \nto unlock the encryption. When the user goes home at night, the laptop will auto-\nhibernate after 15 minutes and require the FileVault password to unlock prior to logging \nback into the system when it resumes. \nMacBooks should also be set to a hibernate mode that removes power from the RAM. \nThis will stop the possibility of cold boot attacks on the system. \nMacs running Apple silicon chips, rather than Intel chips, do not require the same \nconfiguration as Intel-based Macs.",
        "Rationale": "To mitigate the risk of data loss, the system should power down and lock the encrypted \ndrive after a specified time. Laptops should hibernate 15 minutes or less after sleeping. \n \nInternal Only - General \nImpact: \nThe laptop will take additional time to resume normal operation if only sleeping rather \nthan hibernating.",
        "Audit": "Terminal Method: \nRun the following command to verify sleep and hibernation settings: \n$ /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | /usr/bin/grep \n-e MacBook  \nIf there is an output, run the following: \n$ /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | /usr/bin/grep \n-e MacBook  \nIf there is an output, run the following: \n$ /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e \"^ sleep\"  \nThe output should be sleep with a value \u2264 15. \n$ /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e \"displaysleep\" \nThe output should be displaysleep with a value \u2264 10 and \u2264 the value of sleep. \nexample: \n \n$ /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | grep -e \nMacBook  \n \n      Model Name: MacBook Pro \n      Model Identifier: MacBookPro18,3 \n \n$ /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e \"^ sleep\"  \n \n sleep               10 (sleep prevented by sharingd, powerd, bluetoothd, \ncom.apple.PassKit.PaymentAuthor) \n \n$ /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e \"displaysleep\" \n \n displaysleep         15 \nNote: To verify if you are running an Apple Silicon processor, run /usr/sbin/sysctl -\nn machdep.cpu.brand_string. The output will include Apple.",
        "Remediation": "Terminal Method: \nRun the following command to set the sleep time and hibernate mode: \n$ /usr/bin/sudo /usr/bin/pmset -a sleep <value\u226410> \n$ /usr/bin/sudo /usr/bin/pmset -a displaysleep <value\u226415 & >value of sleep> \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/pmset -a sleep 10 \n$ /usr/bin/sudo /usr/bin/pmset -a displaysleep 15",
        "References": "1. https://www.lifewire.com/change-mac-sleep-settings-2260804 \n2. https://www.zdziarski.com/blog/?p=6705 \n3. https://www.howtogeek.com/260478/how-to-choose-when-your-mac-hibernates-\nor-enters-standby/ \nAdditional Information: \nThe Ensure FileVault is Locked on Sleep recommendation has been removed. If your \norganization wants to continue setting filevault lock, create or edit a configuration profile \nwith the following information: \n1. The PayloadType string is com.apple.MCX  \n2. The key to include is DestroyFVKeyOnStandby  \n3. The key must be set to  \nHibernate mode has also been removed from this recommendation. Setting hibernate \nmode will require the user to log into the machine after sleep and disable any wake \noptions. hibernatemode must be set to 25 or it will not force the computer into a pre-\nboot state. Organizations may still use this if there is a security need (ex. international \ntravel), but it can cause kernel panics in Apple Silicon Macs. To enable hibernate mode, \nrun the following command: \n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25 \nNote:",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf \n \n \nInternal Only - General \n2.9.2 Ensure Power Nap Is Disabled for Intel Macs (Automated) \nProfile Applicability: \n\u2022  Level 1 \nDescription: \nPower Nap allows the system to stay in low power mode, especially while on battery \npower, and periodically connect to previously known networks with stored credentials \nfor user applications to phone home and get updates. This capability requires FileVault \nto remain unlocked and the use of previously joined networks to be risk accepted based \non the SSID without user input. \nThis control has been updated to check the status on both battery and AC Power. The \npresence of an electrical outlet does not completely correlate with logical and physical \nsecurity of the device or available networks. \nRationale: \nDisabling this feature mitigates the risk of an attacker remotely waking the system and \ngaining access. \nThe use of Power Nap adds to the risk of compromised physical and logical security. \nThe user should be able to decrypt FileVault and have the applications download what \nis required when the computer is actively used. \nThe control to prevent computer sleep has been retired for this version of the \nBenchmark. Forcing the computer to stay on and use energy in case a management \npush is needed is contrary to most current management processes. Only keep \ncomputers unslept if after hours pushes are required on closed LANs. \nImpact: \nPower Nap exists for unattended user application updates like email and social media \nclients. With Power Nap disabled, the computer will not wake and reconnect to known \nwireless SSIDs intermittently when slept. \nAudit: \nGraphical Method: \nPerform the following to verify that Power Nap is not enabled: \nDesktop Instructions: \n1. Open System Settings \n2. Select Energy Saver \n3. Verify that Power Nap is disabled \n4. Select UPS (if applicable) \n5. Verify that Power Nap is disabled \n \nInternal Only - General \nLaptop Instructions: \n1. Open System Settings \n2. Select Battery \n3. Select Power Adapter \n4. Verify that Power Nap is disabled \n5. Select Battery \n6. Verify that Power Nap is disabled \n7. Select UPS (if applicable) \n8. Verify that Power Nap is disabled \nNote: To verify if you are running an Intel processor, perform the following steps: \n1. Select  in the Menu Bar \n2. Select About This Mac \n3. Verify that the Chip field included Intel \nTerminal Method: \nRun the following command to verify if Power Nap is disabled: \n$ /usr/bin/sudo /usr/bin/pmset -g custom | /usr/bin/grep -c \"powernap'\\s+'1\" \n \n0 \nNote: To verify if you are running an Intel processor, run /usr/sbin/sysctl -n \nmachdep.cpu.brand_string. The output will include Intel. \nRemediation: \nGraphical Method: \nPerform the following steps to disable Power Nap: \nDesktop Instructions: \n1. Open System Settings \n2. Select Energy Saver \n3. Set Power Nap to disabled \n4. Select UPS (if applicable) \n5. Set Power Nap to disabled \nLaptop Instructions: \n1. Open System Settings \n2. Select Battery \n3. Select Power Adapter (for laptops only) \n4. Set Power Nap to disabled \n5. Select Battery \n6. Set Power Nap to disabled \n7. Select UPS (if applicable) \n \nInternal Only - General \n8. Set Power Nap to disabled \nTerminal Method: \nRun the following command to disable Power Nap: \n$ /usr/bin/sudo /usr/bin/pmset -a powernap 0 \nAdditional Information: \n/usr/bin/man pmset \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.9.3 Ensure Wake for Network Access Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "This feature allows the computer to take action when the user is not present and the \ncomputer is in energy saving mode. These tools require FileVault to remain unlocked \nand fully rejoin known networks. This macOS feature is meant to allow the computer to \nresume activity as needed regardless of physical security controls. \nThis feature allows other users to be able to access your computer\u2019s shared resources, \nsuch as shared printers or Apple Music playlists, even when your computer is in sleep \nmode. In a closed network when only authorized devices could wake a computer, it \ncould be valuable to wake computers in order to do management push activity. Where \nmobile workstations and agents exist, the device will more likely check in to receive \nupdates when already awake. Mobile devices should not be listening for signals on any \nunmanaged network or where untrusted devices exist that could send wake signals.",
        "Rationale": "Disabling this feature mitigates the risk of an attacker remotely waking the system and \ngaining access. \nImpact: \nManagement programs like Apple Remote Desktop Administrator use wake-on-LAN to \nconnect with computers. If turned off, such management programs will not be able to \nwake a computer over the LAN. If the wake-on-LAN feature is needed, do not turn off \nthis feature. \nThe control to prevent computer sleep has been retired for this version of the \nBenchmark. Forcing the computer to stay on and use energy in case a management \npush is needed is contrary to most current management processes. Only keep \ncomputers unslept if after hours pushes are required on closed LANs. \nTurning off Wake for Network Access will also not allow Find My to work when the \ncomputer is asleep. It will also give this warning \"You won\u2019t be able to locate, lock, or \nerase this Mac while it\u2019s asleep because Wake for network access is turned off.\"",
        "Audit": "Graphical Method: \nPerform the following steps to verify that Wake for network access is disabled: \nDesktop Instructions: \n1. Open System Settings \n2. Select Energy Saver \n \nInternal Only - General \n3. Verify that Wake for network access is disabled \nLaptop Instructions: \n1. Open System Settings \n2. Select Battery \n3. Select Options... \n4. Verify that Wake for network access is set to Never \nTerminal Method: \nRun the following command verify if Wake for network access is not enabled: \n$ /usr/bin/sudo /usr/bin/pmset -g custom | /usr/bin/grep -e womp   \n \nwomp                 0 \nor \nRun the following command to verify that a profile is installed that disables Wake On \nLan is installed: \n$ /usr/bin/sudo /usr/bin/profiles -P -o stdout | /usr/bin/grep \"Wake On LAN\" \n \n                            \"Wake On LAN\" = 0; \n                            \"Wake On LAN\" = 0; \n                            \"Wake On LAN\" = 0; \n \n$ /usr/bin/sudo /usr/bin/profiles -P -o stdout | /usr/bin/grep \"Wake On Modem \nRing\" \n \n                            \"Wake On Modem Ring\" = 0; \n                            \"Wake On Modem Ring\" = 0; \n                            \"Wake On Modem Ring\" = 0;",
        "Remediation": "Graphical Method: \nPerform the following steps to disable Wake for network access: \nDesktop Instructions: \n1. Open System Settings \n2. Select Energy Saver \n3. Set Wake for network access to disabled \nLaptop Instructions: \n1. Open System Settings \n2. Select Battery \n3. Select Options... \n4. Set Wake for network access to Never \n \nInternal Only - General \nTerminal Method: \nRun the following command to disable Wake for network access: \n$ /usr/bin/sudo /usr/bin/pmset -a womp 0   \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.MCX \n2. The key to include is com.apple.EnergySaver.desktop.ACPower \n3. The key must be set to: \n<dict> \n \n<key>Wake On LAN</key> \n \n<integer>0</integer> \n \n<key>Wake On Modem Ring</key> \n \n<integer>0</integer> \n</dict> \n \n4. The key to also include is com.apple.EnergySaver.portable.ACPower \n5. The key must be set to: \n<dict> \n \n<key>Wake On LAN</key> \n \n<integer>0</integer> \n \n<key>Wake On Modem Ring</key> \n \n<integer>0</integer> \n</dict> \n \n6. The key to also include is com.apple.EnergySaver.portable.BatteryPower \n7. The key must be set to: \n<dict> \n \n<key>Wake On LAN</key> \n \n<integer>0</integer> \n \n<key>Wake On Modem Ring</key> \n \n<integer>0</integer> \n</dict> \nNote: Both Wake on LAN and Wake on Modem Ring need to be set. Only setting Wake \nOn LAN will allow the profile to install but not set any settings. This profile will only apply \nthe setting at installation and is not sticky. \nAdditional Information: \n/usr/bin/man pmset \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.10 Lock Screen"
    },
    {
        "Title": "2.10.1 Ensure an Inactivity Interval of 20 Minutes Or Less for the Screen Saver Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "A locking screen saver is one of the standard security controls to limit access to a \ncomputer and the current user's session when the computer is temporarily unused or \nunattended. In macOS, the screen saver starts after a value is selected in the drop-\ndown menu. 20 minutes or less is an acceptable value. Any value can be selected \nthrough the command line or script, but a number that is not reflected in the GUI can be \nproblematic. 20 minutes is the default for new accounts.",
        "Rationale": "Setting an inactivity interval for the screen saver prevents unauthorized persons from \nviewing a system left unattended for an extensive period of time. \nImpact: \nIf the screen saver is not set, users may leave the computer available for an \nunauthorized person to access information.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that the screen saver is set activate after less than \nor equal to 20 minutes of inactivity: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Idle Time set to \u22641200 \nTerminal Method: \nRun the following command to verify that a profile is installed that enables a system-\nwide screensaver idle time of less than or equal to 20 minutes: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let timeout = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.screensaver')\n\\ \n.objectForKey('idleTime')) \n  if ( timeout <= 1200 ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue",
        "Remediation": "Profile Method: \n1. The PayloadType string is com.apple.screensaver \n2. The key to include is idleTime \n3. The key must be set to <integer><\u22641200></integer> \nNote: Since the profile method sets a system-wide setting and not a user-level one, the \nprofile method is the preferred method. It is always better to set system-wide than per \nuser. \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify that the screen saver is set to activate after less \nthan or equal to 20 minutes of inactivity: \n1. Open System Settings  \n2. Select Lock Screen  \n3. Verify that Start Screen Saver when inactive is set for 20 minutes or less \n(\u22641200 seconds) \nor \n1. Open System Settings  \n2. Select Privacy & Security  \n3. Select Profiles  \n4. Verify that an installed profile has Idle Time set to \u22641200  \n \nInternal Only - General \nTerminal Method: \nRun the following command to verify that the screen saver idle time of individual users \nis set to less than or equal to 20 minutes: \n$ /usr/bin/sudo -u <username> /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.screensaver')\n\\ \n  .objectForKey('idleTime')) \n  if ( pref1 <= 1200 ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue \nNote: If there is no output, then the setting has not been changed from the default and \nis considered not in compliance. Follow the remediation instructions to set the idle time \nto match your organization's policy. \nRemediation: \nGraphical Method: \nPerform the following to set the screen saver to activate in 20 minutes or less: \n1. Open System Settings  \n2. Select Lock Screen  \n3. Set Start Screen Saver when inactive to a selection that is 20 minutes or \nless (\u22641200) \nTerminal Method: \nRun the following command to set individual users to an idle time of the screen saver is \nset to 20 minutes or less (\u22641200): \n$ /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost write \ncom.apple.screensaver idleTime -int <value \u22641200> \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults -currentHost write \ncom.apple.screensaver idleTime -int 600 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults -currentHost read \ncom.apple.screensaver idleTime \n \n600 \nNote: Issues arise if the command line is used to make the setting something other than \nwhat is available in the GUI Menu. Choose either 1 (60), 2 (120), 5 (300), 10 (600), or \n20 (1200) minutes to avoid any issues.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.3 Configure Automatic Session Locking on Enterprise \nAssets \n \nConfigure automatic session locking on enterprise assets after a defined period \nof inactivity. For general purpose operating systems, the period must not exceed \n15 minutes. For mobile end-user devices, the period must not exceed 2 minutes. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.10.2 Ensure Require Password After Screen Saver Begins or Display Is Turned Off Is Enabled for 5 Seconds or Immediately (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Sleep and screen saver modes are low power modes that reduce electrical \nconsumption while the system is not in use.",
        "Rationale": "Prompting for a password when waking from sleep or screen saver mode mitigates the \nthreat of an unauthorized person gaining access to a system in the user's absence. \nImpact: \nWithout a screenlock in place, anyone with physical access to the computer would be \nlogged in and able to use the active user's session.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that a password is required to wake from sleep or \nscreen saver: \n1. Open System Settings \n2. Select Lock Screen \n3. Verify that Require password after screensaver begins or display is \nturned off is set with After 0 seconds or After 5 seconds \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Ask For Password set to True \n5. Verify that the same installed profile has Ask For Password Delay set to <0,5> \nTerminal Method: \nRun the following command to verify that a password is required to wake the computer \nfrom sleep or from the screen saver after 5 seconds of less: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/sysadminctl -screenLock status \nThe output should include either screenLock delay is immediate or screenLock \ndelay is 5 seconds. \nRun the following command to verify that a profile is installed that requires a password \nto wake the computer from sleep or from the screen saver: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.screensaver')\n\\ \n  .objectForKey('askForPassword')) \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.screensaver')\n\\ \n  .objectForKey('askForPasswordDelay')) \n  if ( pref1 == 1 && pref2 <= 5 ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to enable a password for unlock after a screen saver begins \nor after sleep: \n1. Open System Settings \n2. Select Lock Screen \n3. Set Require password after screensaver begins or display is turned \noff to either After 0 seconds or After 5 seconds \nTerminal Method: \nRun the following command to require a password to unlock the computer after the \nscreen saver engages or the computer sleeps: \n$ /usr/bin/sudo /usr/sbin/sysadminctl -screenLock immediate -password \n<administrator password> \nor \n$ /usr/bin/sudo /usr/sbin/sysadminctl -screenLock 5 seconds -password \n<administrator password> \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.screensaver \n \nInternal Only - General \n2. The key to include is askForPassword \n3. The key must be set to <true/> \n4. The key to also include is askForPasswordDelay \n5. The key must be set to <integer><0,5></integer>",
        "References": "1. https://blog.kolide.com/screensaver-security-on-macos-10-13-is-broken-\na385726e2ae2 \n2. https://github.com/rtrouton/profiles/blob/master/SetDefaultScreensaver/SetDefaul\ntScreensaver.mobileconfig \nAdditional Information: \nThis only protects the system when the screen saver is running. \nNote: The command line check in previous versions of the Benchmark does not work \nas expected here. The use of a profile is recommended for both implementation and \nauditing on a 10.13 system or later.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.7 Manage Default Accounts on Enterprise Assets and \nSoftware \n \nManage default accounts on enterprise assets and software, such as root, \nadministrator, and other pre-configured vendor accounts. Example \nimplementations can include: disabling default accounts or making them \nunusable. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.2 Change Default Passwords \n \nBefore deploying any new asset, change all default passwords to have values \nconsistent with administrative level accounts. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.10.3 Ensure a Custom Message for the Login Screen Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "An access warning informs the user that the system is reserved for authorized use only, \nand that the use of the system may be monitored.",
        "Rationale": "An access warning may reduce a casual attacker's tendency to target the system. \nAccess warnings may also aid in the prosecution of an attacker by evincing the \nattacker's knowledge of the system's private status, acceptable use policy, and \nauthorization requirements. \nImpact: \nIf users are not informed of their responsibilities, unapproved activities may occur. \nUsers that are not approved for access may take the lack of a warning banner as \nimplied consent to access.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the a login banner is configured: \n1. Open System Settings \n2. Select Lock Screen \n3. Verify Show message when locked is enabled \n4. Select Set \n5. Verify that the message displayed is configured to your organization's required \ntext \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Banner Text is configured to your \norganization's required text \nTerminal Method: \nRun the following command to verify that a custom message on the login screen is \nconfigured: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\ \n.objectForKey('LoginwindowText').js \nEOS \nThe output should be a message that is configured to your organization's required text. \nexample: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\ \n.objectForKey('LoginwindowText').js \nEOS \n \nCenter for Internet Security Test Message",
        "Remediation": "Graphical Method: \nPerform the following steps to enable a login banner set to your organization's required \ntext: \n1. Open System Settings \n2. Select Lock Screen \n3. Set Show message when locked to enabled \n4. Select Set \n5. Insert text in the Set a message to appear on the lock screen that \nmatches your organization's required text \n6. Select Done \nTerminal Method: \nRun the following command to enable a custom login screen message: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.loginwindow LoginwindowText \"<custom message>\" \nexample: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.loginwindow LoginwindowText \"Center for \nInternet Security Test Message\" \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.loginwindow \n2. The key to include is LoginwindowText \n3. The key must be set to <string><Your organization's required \ntext></string> \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.10.4 Ensure Login Window Displays as Name and Password Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The login window prompts a user for his/her credentials, verifies their authorization \nlevel, and then allows or denies the user access to the system.",
        "Rationale": "Prompting the user to enter both their username and password makes it twice as hard \nfor unauthorized users to gain access to the system since they must discover two \nattributes.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that the login window displays name and password: \n1. Open System Settings \n2. Select Lock Screen \n3. Verify that Login window shows is set to Name and Password \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Show Full Name set to True \nTerminal Method: \nRun the following command to verify the login window displays name and password: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\ \n.objectForKey('SHOWFULLNAME').js \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to ensure the login window display name and password: \n1. Open System Settings \n \nInternal Only - General \n2. Select Lock Screen \n3. Set 'Login window showstoName and Password` \nTerminal Method: \nRun the following command to enable the login window to display name and password: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.loginwindow SHOWFULLNAME -bool true \nNote: The GUI will not display the updated setting until the current user(s) logs out. \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.loginwindow \n2. The key to include is SHOWFULLNAME \n3. The key must be set to <true/>",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.10.5 Ensure Show Password Hints Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Password hints are user-created text displayed when an incorrect password is used for \nan account.",
        "Rationale": "Password hints make it easier for unauthorized persons to gain access to systems by \ndisplaying information provided by the user to assist in remembering the password. This \ninfo could include the password itself or other information that might be readily \ndiscerned with basic knowledge of the end user. \nImpact: \nThe user can set the hint to any value, including the password itself or clues that allow \ntrivial social engineering attacks.",
        "Audit": "Graphical Method: \nPerform the following steps to verify if password hints are shown: \n1. Open System Settings \n2. Select Lock Screen \n3. Verify that Show password hints is disabled \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Retires Before Hint Shown set to 0 \nTerminal Method: \nRun the following command to verify that password hints are not displayed: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\ \n.objectForKey('RetriesUntilHint').js \nEOS \n \n0 \nNote: The default setting is not auditable through the command line. Please turn off the \ncheck and re-enable when the GUI does not reflect the audited results, or run the \nTerminal command(s).",
        "Remediation": "Graphical Method: \nPerform the following steps to disable password hints from being shown: \n1. Open System Settings \n2. Select Lock Screen \n3. Set 'Show password hints` to disabled \nTerminal Method: \nRun the following command to disable password hints: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.loginwindow RetriesUntilHint -int 0 \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.loginwindow \n2. The key to include is RetriesUntilHint \n3. The key must be set to <integer>0</integer>",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.11 Touch ID & Password (Login Password)"
    },
    {
        "Title": "2.11.1 Ensure Users' Accounts Do Not Have a Password Hint (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Password hints help the user recall their passwords for various systems and/or \naccounts. In most cases, password hints are simple and closely related to the user's \npassword.",
        "Rationale": "Password hints that are closely related to the user's password are a security \nvulnerability, especially in the social media age. Unauthorized users are more likely to \nguess a user's password if there is a password hint. The password hint is very \nsusceptible to social engineering attacks and information exposure on social media \nnetworks.",
        "Audit": "Terminal Method: \nRun the following command to verify that no users have a password hint: \n$ /usr/bin/sudo /usr/bin/dscl . -list /Users hint \nThe output will list all users. If there are any text listed with the user, then the machine is \nnot compliant. \nexample: \n$ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -list /Users hint \n \nfirstuser    passwordhint \nseconduser   passwordhint2 \nthirduser \nfourthuser      \nGuest",
        "Remediation": "Graphical Method: \nPerform the following steps to remove a user's password hint: \n1. Open System Settings \n2. Select Touch ID & Passwords (or Login Password on non-Touch ID Macs) \n3. Select Change... \n4. Change the password and ensure that no text is entered in the Password hint \nbox \n \nInternal Only - General \nNote: This will only change the currently logged-in user's password, and not any others \nthat are not compliant on the Mac. Use the terminal method if multiple users are not in \ncompliance. \nTerminal Method: \nRun the following command to remove a user's password hint: \n$ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/<username> \nhint \nexample: \n$ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/firstuser \nhint \n \n$ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/seconduser \nhint \nAdditional Information: \nOrganizations might consider entering an organizational help desk phone number or \nother text (such as a warning to the user). A help desk number is only appropriate for \norganizations with trained help desk personnel that are validating user identities for \npassword resets.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.11.2 Audit Touch ID (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple has integrated Touch ID with macOS and allows fingerprint use for many \ncommon operations. All use of Touch ID requires the presence of a password and the \nuse of that password after every reboot, or when more than 48 hours has elapsed since \nthe device was last unlocked. Touch ID is not a password replacement. The use of \nTouch ID can, however, make the use of passwords more secure for authorized users \nwith physical access to a Mac. Normal day-to-day work operations can eliminate the \nuse of console password entry unless a reboot is required other than on Monday \nmorning. The infrequency of password screen unlock can enable a more complicated \npass phrase that is seldom used. When Touch ID is used it remediates the risk of \nshoulder surfing (including video surveillance) to capture console credentials. There \nhave been many reported shoulder surfing password captures on iOS devices. Reports \nhave not been widespread on Macs, but shoulder surfing password capture is simpler \nthan the other methods of breaking in to an encrypted Mac. \nWhen a SmartCard or YubiKey is provisioned by an organization and is available for \nConsole authentication, that is a much more secure option than the use of Touch ID and \nis preferred.",
        "Rationale": "Touch ID allows for an account-enrolled fingerprint to access a key that uses a \npreviously provided password. \nImpact: \nTouch ID is more convenient for use with aggressive screen lock controls.",
        "Audit": "Graphical Method: \nPerform the following to verify Touch ID settings: \n1. Open System Settings \n2. Select Touch ID & Password \n3. Verify the Touch ID settings match your organization's requirements \nTerminal Method: \nFor each user, run the following commands to verify that the TouchID settings are within \nyour organization's parameters: \n \nInternal Only - General \n$ /usr/bin/sudo -u <username> /usr/bin/bioutil -r     \n \nUser Touch ID configuration: \n \nTouch ID for unlock: <0,1> \n \nTouch ID for ApplePay: <0,1> \n \nEffective Touch ID for unlock: <0,1> \n \nEffective Touch ID for ApplePay: <0,1> \n \n$ /usr/bin/sudo /usr/bin/bioutil -r -s | /usr/bin/awk '/timeout/' \n \n \nTouch ID timeout (in seconds): <value\u2264172800> \nNote: The -s notates a system configuration and does not need to be ran for each user. \nNote: The output for unlock and ApplePay is 0 for disabled and 1 for enabled. The \ntimeout value is seconds and can be set to any value. \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/bioutil -r     \n \nUser Touch ID configuration: \n \nTouch ID for unlock: 1 \n \nTouch ID for ApplePay: 1 \n \nEffective Touch ID for unlock: 1 \n \nEffective Touch ID for ApplePay: 1 \n \n$ /usr/bin/sudo usr/bin/bioutil -r -s | /usr/bin/awk '/timeout/' \n \n \nTouch ID timeout (in seconds): 172800 \nIn the above example, the user has TouchID enabled for both unlocking the system and \nfor ApplePay. The timeout for TouchID is set to the maximum of 48 hours (172800 \nseconds).",
        "Remediation": "Graphical Method: \nPerform the following steps to set Touch ID to your organization's settings: \n1. Open System Settings \n2. Select Touch ID & Password \n3. Set the Touch ID settings to your organization's requirements \nTerminal Method: \nFor each user, run the following commands to set TouchID to your organization's \nparameters: \nUse this command for TouchID to unlock the system. Use 0 to disable unlock or 1 to \nenable unlock: \n$ /usr/bin/sudo -u <username> /usr/bin/bioutil -w -u <0,1> \nUse this command for TouchID to use ApplePay. Use 0 to disable ApplePay or 1 to \nenable ApplePay: \n \nInternal Only - General \n$ /usr/bin/sudo -u <username> /usr/bin/bioutil -w -a <0,1> \nUse this command to set the timeout at the system level: \n$ /usr/bin/sudo usr/bin/bioutil -w -s -o <value\u2264172800> \nexample: \n$ /usr/bin/sudo -u <username> /usr/bin/bioutil -w -u 1 \n \n$ /usr/bin/sudo -u <username> /usr/bin/bioutil -w -a 1 \n \n$ /usr/bin/sudo usr/bin/bioutil -w -s -o 86400 \nNote: The -s notates a system configuration and does not need to be ran for each user.",
        "References": "1. https://support.apple.com/guide/mac-help/touch-id-mchl16fbf90a/mac",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a 14-\ncharacter password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.12 Users & Groups"
    },
    {
        "Title": "2.12.1 Ensure Guest Account Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The guest account allows users access to the system without having to create an \naccount or password. Guest users are unable to make setting changes and cannot \nremotely login to the system. All files, caches, and passwords created by the guest user \nare deleted upon logging out.",
        "Rationale": "Disabling the guest account mitigates the risk of an untrusted user doing basic \nreconnaissance and possibly using privilege escalation attacks to take control of the \nsystem. \nImpact: \nA guest user can use that access to find out additional information about the system \nand might be able to use privilege escalation vulnerabilities to establish greater access.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the guest account is not available: \n1. Open System Settings \n2. Select Users & Groups \n3. Select the i next to the Guest User \n4. Verify that Allow guests to log in to this computer is disabled \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Disable Guest Account set to True \n5. Verify that an installed profile has Enable Guest Account set to False \nTerminal Method: \nRun the following command to verify if the guest account is enabled: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\ \n  .objectForKey('DisableGuestAccount')) \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\ \n  .objectForKey('EnableGuestAccount')) \n  let pref3 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\n\\ \n  .objectForKey('GuestEnabled')) \n  if (( pref1 == 1 && pref2 == 0 ) || ( pref3 == 0 )) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to disable guest account availability: \n1. Open System Settings \n2. Select Users & Groups \n3. Select the i next to the Guest User \n4. Set Allow guests to log in to this computer to disabled \nTerminal Method: \nRun the following command to disable the guest account: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.loginwindow GuestEnabled -bool false \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.MCX \n2. The key to include is DisableGuestAccount \n3. The key must be set to <true/> \n4. The key to include is EnableGuestAccount \n5. The key must be set to <false/> \nAdditional Information: \nBy default, the guest account is enabled for access to sharing services but is not \nallowed to log into the computer. \n \nInternal Only - General \nThe guest account does not need a password when it is enabled to log into the \ncomputer.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a 14-\ncharacter password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv8 \n6.2 Establish an Access Revoking Process \n \nEstablish and follow a process, preferably automated, for revoking access to \nenterprise assets, through disabling accounts immediately upon termination, rights \nrevocation, or role change of a user. Disabling accounts, instead of deleting \naccounts, may be necessary to preserve audit trails. \n\u25cf \n\u25cf \n\u25cf \nv8 \n6.8 Define and Maintain Role-Based Access Control \n \nDefine and maintain role-based access control, through determining and \ndocumenting the access rights necessary for each role within the enterprise to \nsuccessfully carry out its assigned duties. Perform access control reviews of \nenterprise assets to validate that all privileges are authorized, on a recurring \nschedule at a minimum annually, or more frequently. \n \n \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.12.2 Ensure Guest Access to Shared Folders Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Allowing guests to connect to shared folders enables users to access selected shared \nfolders and their contents from different computers on a network.",
        "Rationale": "Not allowing guests to connect to shared folders mitigates the risk of an untrusted user \ndoing basic reconnaissance and possibly using privilege escalation attacks to take \ncontrol of the system. \nImpact: \nUnauthorized users could access shared files on the system.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that guests cannot connect to shared folders: \n1. Open System Settings \n2. Select Users & Groups \n3. Select the i next to the Guest User \n4. Verify that Allow guests to connect to shared folders is disabled \nTerminal Method: \nRun the following commands to verify that shared folders are not accessible to guest \nusers: \n$ /usr/bin/sudo /usr/sbin/sysadminctl -smbGuestAccess status \nThe output should include SMB guest access disabled.",
        "Remediation": "Graphical Method: \nPerform the following steps to no longer allow guest user access to shared folders: \n1. Open System Settings \n2. Select Users & Groups \n3. Select the i next to the Guest User \n4. Set Allow guests to connect to shared folders to disabled \n \nInternal Only - General \nTerminal Method: \nRun the following commands to verify that shared folders are not accessible to guest \nusers: \n$ /usr/bin/sudo /usr/sbin/sysadminctl -smbGuestAccess off",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.12.3 Ensure Automatic Login Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The automatic login feature saves a user's system access credentials and bypasses the \nlogin screen. Instead, the system automatically loads to the user's desktop screen.",
        "Rationale": "Disabling automatic login decreases the likelihood of an unauthorized person gaining \naccess to a system. \nImpact: \nIf automatic login is not disabled, an unauthorized user could gain access to the system \nwithout supplying any credentials.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that automatic login is not enabled: \n1. Open System Settings \n2. Select Users & Groups \n3. Verify that Automatic login in as... is set to Off \nor \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Disable Autologin set to True \nTerminal Method: \nRun the following command to verify that automatic login has not been enabled: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\n\\ \n  .objectForKey('com.apple.login.mcx.DisableAutoLoginClient')) \n  let pref2 = \nObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\n\\ \n  .objectForKey('autoLoginUser')) \n  if ( pref1 == 1 || pref2 == null ) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue",
        "Remediation": "Graphical Method: \nPerform the following steps to set automatic login to off: \n1. Open System Settings \n2. Select Users & Groups \n3. Set Automatic login in as... to Off \nTerminal Method: \nRun the following command to disable automatic login: \n$ /usr/bin/sudo /usr/bin/defaults delete \n/Library/Preferences/com.apple.loginwindow autoLoginUser \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.loginwindow \n2. The key to include is com.apple.login.mcx.DisableAutoLoginClient \n3. The key must be set to <true/> \nNote: If both the profile is enabled and a user is set to autologin, the profile will take \nprecedent. In this case, the graphical or terminal remediation method should also be \napplied in case the profile is ever removed. \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.7 Manage Default Accounts on Enterprise Assets and \nSoftware \n \nManage default accounts on enterprise assets and software, such as root, \nadministrator, and other pre-configured vendor accounts. Example \nimplementations can include: disabling default accounts or making them \nunusable. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.2 Change Default Passwords \n \nBefore deploying any new asset, change all default passwords to have values \nconsistent with administrative level accounts. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.13 Passwords"
    },
    {
        "Title": "2.13.1 Audit Passwords System Preference Setting (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple has provided a new interface in macOS Monterey for managing passwords that \nmirrors the interfaced capability already available in iOS. Password management in \nmacOS was previously available in both Safari Preferences and in Keychain Access. \nApple is attempting to simplify password management for macOS and make the user \nexperience more similar to iOS. Organizations are justifiably concerned about the risk of \npassword managers, particularly as a possible backdoor to improved credential \nmanagement regimes and greater use of Multi-Factor-Authentication (MFA). \nApple has information posted on this system preference with additional information. \nChange Passwords preferences on Mac \nA warning icon is shown next to a website for any of the following reasons: \n\u2022 \nEasily guessed \n\u2022 \nAppeared in a data leak \n\u2022 \nReused on another website",
        "Rationale": "Organizations should remove what passwords can be saved on user computers, thus \nlimiting the ability of attackers to potentially steal organizational credentials. Limits on \npassword storage must be evaluated based on both user risk and Enterprise risk. \nImpact: \nOrganizations using passwords are constantly reported as having their password \ndatabases leaked to the Internet so every password a user has should be unique. \nLocking down secure password management solutions so that it cannot be used pushes \nusers to password reuse, sticky notes, or always open text files with long lists of \ncredentials.",
        "Audit": "Graphical Method: \nPerform the following steps to audit the Password system settings: \n1. Open System Settings \n2. Select Passwords \n3. Enter the user's password \n4. Select Security Recommendations \n \nInternal Only - General \n5. Verify that any recommendations or compromised passwords are set to match \nyour organization's settings \n6. Review applications with stored passwords to ensure that Enterprise managed \npasswords are not stored inappropriately. Application interfaces may need to be \nconsidered as well, as they allow the opportunity to store passwords that should \nnot be saved.",
        "Remediation": "Graphical Method: \nPerform the following steps to set Password system settings to your organization's \nsettings: \n1. Open System Settings \n2. Select Passwords \n3. Enter the user's password \n4. Select the Security Recommendations \n5. Remove stored passwords that should not be saved.",
        "References": "1. https://support.apple.com/guide/security/password-monitoring-\nsec78e79fc3b/1/web/1",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv8 \n5.6 Centralize Account Management \n \nCentralize account management through a directory or identity service. \n \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.14 Game Center"
    },
    {
        "Title": "2.14.1 Audit Game Center Settings (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "With macOS 10.13, Apple has introduced a separate section for Game Center in \nSystem Settings. It is possible to log in with the Apple ID and use the iCloud-based \nGame Center services. \nGame Center is a feature from Apple that allows users to engage in game-related \nactivities with friends when playing multiplayer games online on the Game Center social \nnetwork. User profile data such as nickname, contact discovery, and also nearby \nplayers may be shared through iCloud. \nApple collects information here, such as the games users play and when they play \nthem, all scores and achievements, and the challenges users send and receive. This \ninformation is used to track users' high scores, achievements, and challenges and to \nimprove Game Center. \nThe automatic sign in to Game Center with AppleID should be disabled if not aligned \nwith organizational rules \nPersonal profile visibility, Finding by Friends, requests from Contacts, Nearby Player \ndetection and Connecting with Friends are all visibility options that should be risk \naccepted through an organizational policy before use. \nUsers should not sign in to Game Center on organizational managed devices if not \ncovered under acceptable use. For personal devices Game Center should not be \nsigned in if the user is not using Apple's gaming service.",
        "Rationale": "Ensure Game Center service is used consistently with organizational requirements. \nImpact: \nGame Center is designed as a social network to use Apple's gaming service and \nincludes capabilities to discover players in the service as through local network \ndiscovery. If the Apple feature is not needed it should not be on, and should not be \nsigned in.",
        "Audit": "Graphical Method: \nPerform the following steps to verify the status of iCloud Game Center service: \n1. Open System Settings \n2. Select Privacy & Security \n \nInternal Only - General \n3. Select Profiles \n4. Verify that an installed profile has Allow GameCenter set to your organization's \nrequirements \nTerminal Method: \nRun the following command to verify that a profile is installed that sets iCloud allow \nGameCenter setting to your organization's settings: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n.objectForKey('allowGameCenter').js \nEOS \nIf the output is false, Game Center is disabled. If the output is true Game Center is \nenabled. \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. We have included the individual user information \nin the additional information section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is allowGameCenter \n3. The key should be set <true/>, to allow Game Center, or <false/>, to disable \nit, based on your organization's requirements",
        "References": "1. https://support.apple.com/en-us/HT210401 \n2. https://developer.apple.com/documentation/devicemanagement/restrictions \n3. https://developer.apple.com/game-center/ \nAdditional Information: \nhttps://github.com/usnistgov/macos_security/pull/195 \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify the status of iCloud Game Center service: \n1. Open System Settings  \n2. Select Game Center  \n3. Verify that Game Center is set to your organization's requirements \n \nInternal Only - General \nRemediation: \nGraphical Method: \nPerform the following steps to set iCloud Game Center based on your organization's \nrequirements: \n1. Open System Settings  \n2. Select Game Center  \n3. Set Game Center to meet your organization's requirements"
    },
    {
        "Title": "2.15 Notifications"
    },
    {
        "Title": "2.15.1 Audit Notification & Focus Settings (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Notification capabilities are designed to allow users to receive updates from applications \nthat are not currently in use. These can be background applications or even notices \nfrom processes running on a computer that is not currently being actively used. Where \nthe screen of a computer is visible to others other than the logged-in user due to shared \nworking spaces or public spaces, consideration should be given to the exposure of \nsensitive data in notifications. Applications that use the system-wide application service \nmay be individually managed, and applications that might expose confidential \ninformation to unauthorized users should not expose notifications except to the current \nuser, especially on the locked screen when the computer may be unattended.",
        "Rationale": "Some work environments will handle sensitive or confidential information with \napplications that can provide notifications to anyone who can see the computer screen. \nOrganizations must review the likelihood that information may be exposed \ninappropriately and suppress notifications where risk is not organizationally accepted. \nImpact: \nComputer users are often juggling too much information through too many applications \nthat want their attention and are often designed to get attention and never let it go. \nNotifications are a mechanism that can be used to cut through the deluge and allow \nimportant issues to be resolved in a timely way. Global controls on limiting user \nnotifications, even for certain applications, could impact productivity and the timely \nremediation of issues.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that Notifications are set to your organization's \nrequirements: \n1. Open System Settings \n2. Select Notifications \n3. Verify that Show previews for each application is set to your organization's \nrequirements \nNote: If the exposure of controlled information or data leakage is possible with \napplication notifications, the acceptable notification level should be established through \na risk analysis of what unauthorized leaks may occur. \n \nInternal Only - General",
        "Remediation": "Graphical Method: \nPerform the following steps to set Notifications to your organization's requirements: \n1. Open System Settings \n2. Select Notifications \n3. Select any applications that are not in compliance with your organization's \nrequirements \n4. Turn off or mute notifications that may expose information to unauthorized people \nthat might be able to view screens of organizational computers.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.16 Wallet & Apple Pay"
    },
    {
        "Title": "2.16.1 Audit Wallet & Apple Pay Settings (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Touch ID is a prerequisite for using Apple Pay and Wallet on macOS. Apple Pay allows \nan Apple account holder to enroll their credit cards in Apple Pay and pay enrolled \nvendors without using the physical card or number. Apple's service eliminates the \nrequirement to send the credit card number itself to the vendor. Apple Pay on a Mac \nallows the use of credit cards the user has already enrolled and reduces user risk for \ncredit card purchases.",
        "Rationale": "Some environments may have rules around purchases from organizationally managed \ncomputers and may want to discourage shopping from them. It is difficult to block \naccess to websites that allow purchases, and Apple Pay has more controls for user \nprotection than the manual entry of credit card information.",
        "Audit": "Graphical Method: \nPerform the following to verify Wallet & Apple Pay settings: \n1. Open System Settings \n2. Select Wallet & Apple Pay \n3. Verify the Wallet & Apple Pay settings match your organization's requirements",
        "Remediation": "Graphical Method: \nPerform the following steps to set Wallet & Apple Pay to your organization's settings: \n1. Open System Settings \n2. Select Wallet & Apple Pay \n3. Set the Wallet & Apple Pay settings to your organization's requirements",
        "References": "1. https://www.apple.com/apple-pay/ \n2. https://support.apple.com/guide/mac-help/use-wallet-apple-pay-on-mac-\nmchl4773988b/mac"
    },
    {
        "Title": "2.17 Internet Accounts"
    },
    {
        "Title": "2.17.1 Audit Internet Accounts for Authorized Use (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple provides a section in System Settings to create and display Internet Accounts. \nSetting up an Internet Account allows the user to configure access to pre-existing \naccounts that are Internet Accessible. The Internet Accounts section is not managing \nnetwork access to firewall rules, it only provides a location to manage credentials and \naudit external accounts for applications that make use of the \"Internet Accounts.\" Some \napplications, like Thunderbird and Firefox, do not natively use Internet Accounts and \nstore credentials with the application settings. Disabling the Internet Accounts section \ndoes not block access if network reachable, it just makes auditing and use more \ndifficult. Depending on the maturity of network controls, auditing the providers listed in \nInternet Accounts is part of managing acceptable use.",
        "Rationale": "Internet provided services may be restricted in your organization and should be \nreviewed. Even with an advanced application firewall. the user may not always be using \nan internal trusted network subject to the organizational firewall. An audit will document \nwhich services a user has configured. \nImpact: \nReputationaly risky services may be identified that are not authorized and will require a \nrecess to work with the user to no longer connect form a managed Mac.",
        "Audit": "Graphical Method: \nPerform the following steps to verify what accounts have been added to Internet \nAccounts: \n1. Open System Settings \n2. Select Internet Accounts \n3. Verify that all accounts are set to your organization's requirements",
        "Remediation": "Graphical Method: \nPerform the following steps to set accounts in Internet Accounts to your organization's \nrequirements: \n1. Open System Settings \n2. Select Internet Accounts \n \nInternal Only - General \n3. For each account, select the account \n4. Verify that each sync option is set to yout organizations requirements \n5. (Optional) Select Delete Account... to remove the account \n6. (Optional) Select Add Account... to add an account to the system",
        "References": "1. https://support.apple.com/guide/mac-help/add-your-email-and-other-accounts-\nmh35565/mac#:~:text=Add%20an%20account%20in%20Internet%20Accounts%\n20settings&text=On%20your%20Mac%2C%20choose%20Apple,may%20need%\n20to%20scroll%20down.)&text=Click%20Add%20Account%20on%20the,name%\n20of%20an%20account%20provider.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv8 \n15.3 Classify Service Providers \n \nClassify service providers. Classification consideration may include one or more \ncharacteristics, such as data sensitivity, data volume, availability requirements, \napplicable regulations, inherent risk, and mitigated risk. Update and review \nclassifications annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "2.18 Keyboard"
    },
    {
        "Title": "2.18.1 Ensure On-Device Dictation Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "In macOS 14.0 Sonoma, Apple released the ability to limit dictation to staying on-device \nand not sending data to the Siri servers. The use of dictation is likely to include editing \ndocuments with confidential information. While Apple does have controls to obfuscate \nvoice data that exists on their servers, it is recommended that Dictation-collected \ninformation does not leave the local Mac.",
        "Rationale": "Sending data from dictation to the Siri servers could allow data spillage to occur. From a \ncontrol perspective, it is much safer to ensure information of various levels of \nconfidentiality is retained locally. \nImpact: \nKeeping all dictation on-device does not allow the system to better understand and \nlearn, through machine learning, from the user.",
        "Audit": "Terminal Method: \nRun the following command to verify that a profile is installed to allow on-device \ndictation only: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n  $.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ \n  .objectForKey('forceOnDeviceOnlyDictation').js \n  EOS \n \ntrue",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.applicationaccess \n2. The key to include is forceOnDeviceOnlyDictation \n3. The key must be set to <true/> \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "3 Logging and Auditing"
    },
    {
        "Title": "3.1 Ensure Security Auditing Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "macOS's audit facility, auditd, receives notifications from the kernel when certain \nsystem calls, such as open, fork, and exit, are made. These notifications are captured \nand written to an audit log. \nApple has deprecated auditd as of macOS 11.0 Big Sur. In macOS 14.0 Sonoma it is \nno longer enabled by default.",
        "Rationale": "Logs generated by auditd may be useful when investigating a security incident as they \nmay help reveal the vulnerable application and the actions taken by a malicious actor.",
        "Audit": "Terminal Method: \nPerform the following to verify that security auditing is enabled: \nRun the following command to verify auditd: \n$ /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -i auditd  \n \n- \n0 \ncom.apple.auditd",
        "Remediation": "Terminal Method: \nPerform the following to enable security auditing: \nRun the following command to load auditd and create the audit_control file: \n$ /usr/bin/sudo /bin/launchctl load -w \n/System/Library/LaunchDaemons/com.apple.auditd.plist \n \n$ /usr/bin/sudo /bin/cp /etc/security/audit_control.example \n/etc/security/audit_control",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n4.9 Log and Alert on Unsuccessful Administrative Account \nLogin \n \nConfigure systems to issue a log entry and alert on unsuccessful logins to an \nadministrative account. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "3.2 Ensure Security Auditing Flags For User-Attributable Events Are Configured Per Local Organizational Requirements (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Auditing is the capture and maintenance of information about security-related events.",
        "Rationale": "Maintaining an audit trail of system activity logs can help identify configuration errors, \ntroubleshoot service disruptions, and analyze compromises or attacks that have \noccurred, have begun, or are about to begin. Audit logs are necessary to provide a trail \nof evidence in case the system or network is compromised. \nDepending on the governing authority, organizations can have vastly different auditing \nrequirements. In this control we have selected a minimal set of audit flags that should \nbe a part of any organizational requirements. The flags selected below may not \nadequately meet organizational requirements for users of this benchmark. The auditing \nchecks for the flags proposed here will not impact additional flags that are selected.",
        "Audit": "Terminal Method: \nRun the following command to verify the Security Auditing Flags that are enabled: \n$ /usr/bin/sudo /usr/bin/grep -e \"^flags:\" /etc/security/audit_control \nThe output should include the following flags: \n\u2022 \n \n-fm - audit failed file attribute modification events \n\u2022 \n \nad - audit successful/failed administrative events \n\u2022 \n \n-ex - audit failed program execution \n\u2022 \n \naa - audit all authorization and authentication events \n\u2022 \n \n-fr - audit all failed read actions where enforcement stops a read of a file \n\u2022 \n \nlo - audit successful/failed login/logout events \n \nInternal Only - General \n\u2022 \n \n-fw - audit all failed write actions where enforcement stopped a file write \nThe -all flag will capture all failed events across all audit classes and can be used to \nsupersede the individual flags for failed events. \nNote: Excluding potentially noisy audit events may be ideal, depending on your use-\ncase. \nNote: Historical audit flags are listed below as preliminary guidance.",
        "Remediation": "Terminal Method: \nPerform the following to set the required Security Auditing Flags: \nEdit the /etc/security/audit_control file and add -fm, ad, -ex, aa, -fr, lo, and -\nfw to flags. You can also substitute -all for -fm, -ex, -fr, and -fw.",
        "References": "1. https://derflounder.wordpress.com/2012/01/30/openbsm-auditing-on-mac-os-x/ \n2. https://csrc.nist.gov/CSRC/media/Publications/sp/800-179/rev-\n1/draft/documents/sp800-179r1-draft.pdf \n3. https://www.scip.ch/en/?labs.20150108 \n4. https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-171r2.pdf \n5. https://www.whitehouse.gov/wp-content/uploads/2021/08/M-21-31-Improving-\nthe-Federal-Governments-Investigative-and-Remediation-Capabilities-Related-\nto-Cybersecurity-Incidents.pdf \nAdditional Information: \nFlag settings are currently based on the guidance provided by the NIST through the \nmacOS Security guidance they are providing in their GitHub repository. You can find \nthat guidance here.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.14 Log Sensitive Data Access \n \nLog sensitive data access, including modification and disposal.  \n \n \n\u25cf \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.9 Enforce Detail Logging for Access or Changes to \nSensitive Data \n \nEnforce detailed audit logging for access to sensitive data or changes to \nsensitive data (utilizing tools such as File Integrity Monitoring or Security \nInformation and Event Monitoring). \n \n \n\u25cf"
    },
    {
        "Title": "3.3 Ensure install.log Is Retained for 365 or More Days and No Maximum Size (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "macOS writes information pertaining to system-related events to the file \n/var/log/install.log and has a configurable retention policy for this file. The default \nlogging setting limits the file size of the logs and the maximum size for all logs. The \ndefault allows for an errant application to fill the log files and does not enforce sufficient \nlog retention. The Benchmark recommends a value based on standard use cases. The \nvalue should align with local requirements within the organization. \nThe default value has an \"all_max\" file limitation, no reference to a minimum retention, \nand a less precise rotation argument. \nThe all_max flag control will remove old log entries based only on the size of the log \nfiles. Log size can vary widely depending on how verbose installing applications are in \ntheir log entries. The decision here is to ensure that logs go back a year, and depending \non the applications a size restriction could compromise the ability to store a full year. \nWhile this Benchmark is not scoring for a rotation flag, the default rotation is sequential \nrather than using a timestamp. Auditors may prefer timestamps in order to simply review \nspecific dates where event information is desired. \nPlease review the File Rotation section in the man page for more information. \nman asl.conf \n\u2022 \nThe maximum file size limitation string should be removed \"all_max=\" \n\u2022 \nAn organization appropriate retention should be added \"ttl=\" \n\u2022 \nThe rotation should be set with timestamps \"rotate=utc\" or \"rotate=local\"",
        "Rationale": "Archiving and retaining install.log for at least a year is beneficial in the event of an \nincident as it will allow the user to view the various changes to the system along with the \ndate and time they occurred. \nImpact: \nWithout log files system maintenance and security forensics cannot be properly \nperformed. \n \nInternal Only - General",
        "Audit": "Terminal Method: \nRun the following command to verify that log files are retained for at least 365 days with \nno maximum size: \n$ /usr/bin/sudo /usr/bin/grep -i ttl /etc/asl/com.apple.install   \nThe output must include ttl\u2265365 \n$ /usr/bin/sudo /usr/bin/grep -i all_max= /etc/asl/com.apple.install \nNo results should be returned.",
        "Remediation": "Terminal Method: \nPerform the following to ensure that install logs are retained for at least 365 days: \nEdit the /etc/asl/com.apple.install file and add or modify the ttl value to 365 or \ngreater on the file line. Also, remove the all_max= setting and value from the file \nline.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.1 Establish and Maintain an Audit Log Management \nProcess \n \nEstablish and maintain an audit log management process that defines the \nenterprise\u2019s logging requirements. At a minimum, address the collection, review, \nand retention of audit logs for enterprise assets. Review and update documentation \nannually, or when significant enterprise changes occur that could impact this \nSafeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with the \nenterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.4 Ensure adequate storage for logs \n \nEnsure that all systems that store logs have adequate storage space for the logs \ngenerated. \n \n\u25cf \n\u25cf \nv7 \n6.7 Regularly Review Logs \n \nOn a regular basis, review logs to identify anomalies or abnormal events. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "3.4 Ensure Security Auditing Retention Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The macOS audit capability contains important information to investigate security or \noperational issues. This resource is only completely useful if it is retained long enough \nto allow technical staff to find the root cause of anomalies in the records. \nRetention can be set to respect both size and longevity. To retain as much as possible \nunder a certain size, the recommendation is to use the following: \nexpire-after:60d OR 5G \nThis recomendation is based on minimum storage for review and investigation. When a \nthird party tool is in use to allow remote logging or the store and forwarding of logs, this \nlocal storage requirement is not required.",
        "Rationale": "The audit records need to be retained long enough to be reviewed as necessary. \nImpact: \nThe recommendation is that at least 60 days or 5 gigabytes of audit records are \nretained. Systems that have very little remaining disk space may have issues retaining \nsufficient data.",
        "Audit": "Terminal Method: \nRun the following command to verify audit retention: \n$ /usr/bin/sudo /usr/bin/grep -e \"^expire-after\" /etc/security/audit_control \nThe output value for expire-after: should be \u2265 60d OR 5G \nNote: If your organization is offloading your security logs, we recommend following the \nsame guidance (at minimum) for your off-site log storage. Your local storage limit (or \ntime frame) may fail if they are set to lower in this case, but are following the guidance.",
        "Remediation": "Terminal Method: \nPerform the following to set the audit retention length: \nEdit the /etc/security/audit_control file so that expire-after: is at least 60d OR \n5G \n \nInternal Only - General \nDefault Value: \nMore info in the man page. To reference the man page use the command $ man \naudit_control",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n8.1 Establish and Maintain an Audit Log Management \nProcess \n \nEstablish and maintain an audit log management process that defines the \nenterprise\u2019s logging requirements. At a minimum, address the collection, review, \nand retention of audit logs for enterprise assets. Review and update documentation \nannually, or when significant enterprise changes occur that could impact this \nSafeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.3 Ensure Adequate Audit Log Storage \n \nEnsure that logging destinations maintain adequate storage to comply with the \nenterprise\u2019s audit log management process. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.4 Ensure adequate storage for logs \n \nEnsure that all systems that store logs have adequate storage space for the logs \ngenerated. \n \n\u25cf \n\u25cf \nv7 \n6.7 Regularly Review Logs \n \nOn a regular basis, review logs to identify anomalies or abnormal events. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "3.5 Ensure Access to Audit Records Is Controlled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The audit system on macOS writes important operational and security information that \ncan be both useful for an attacker and a place for an attacker to attempt to obfuscate \nunwanted changes that were recorded. As part of defense-in-depth, the \n/etc/security/audit_control configuration and the files in /var/audit should be owned only \nby root with group wheel with read-only rights and no other access allowed. macOS \nACLs should not be used for these files.",
        "Rationale": "Audit records should never be changed except by the system daemon posting events. \nRecords may be viewed or extracts manipulated, but the authoritative files should be \nprotected from unauthorized changes. \nImpact: \nThis control is only checking the default configuration to ensure that unwanted access to \naudit records is not available.",
        "Audit": "Terminal Method: \nRun the following commands to check file access rights: \n \nInternal Only - General \n$ /usr/bin/sudo /bin/ls -n $(/usr/bin/sudo /usr/bin/grep '^dir' \n/etc/security/audit_control | /usr/bin/awk -F: '{print $2}') | /usr/bin/awk \n'{s+=$3} END {print s}' \n \n0 \n \n$ /usr/bin/sudo /bin/ls -n $(/usr/bin/sudo /usr/bin/grep '^dir' \n/etc/security/audit_control | /usr/bin/awk -F: '{print $2}') | /usr/bin/awk \n'{s+=$4} END {print s}' \n \n0 \n \n$ /usr/bin/sudo /bin/ls -l $(/usr/bin/sudo /usr/bin/grep '^dir' \n/etc/security/audit_control | /usr/bin/awk -F: '{print $2}') | /usr/bin/awk \n'!/-r--r-----|current|total/{print $1}' | /usr/bin/wc -l | /usr/bin/tr -d ' ' \n \n0 \n \n$ /usr/bin/sudo /bin/ls -n $(/usr/bin/sudo /usr/bin/grep '^dir' /var/audit/ | \n/usr/bin/awk -F: '{print $2}') | /usr/bin/awk '{s+=$3} END {print s}' \n \n0 \n \n$ /usr/bin/sudo /bin/ls -n $(/usr/bin/sudo /usr/bin/grep '^dir' /var/audit/ | \n/usr/bin/awk -F: '{print $2}') | /usr/bin/awk '{s+=$4} END {print s}' \n \n0 \n \n$ /usr/bin/sudo /bin/ls -l $(/usr/bin/sudo /usr/bin/grep '^dir' /var/audit/ | \n/usr/bin/awk -F: '{print $2}') | /usr/bin/awk '!/-r--r-----\n|current|total/{print $1}' | /usr/bin/wc -l | /usr/bin/tr -d ' ' \n \n0",
        "Remediation": "Terminal Method: \nRun the following to commands to set the audit records to the root user and wheel \ngroup: \n$ /usr/bin/sudo /usr/sbin/chown -R root:wheel /etc/security/audit_control \n \n$ /usr/bin/sudo /bin/chmod -R o-rw /etc/security/audit_control \n \n$ /usr/bin/sudo /usr/sbin/chown -R root:wheel /var/audit/ \n \n$ /usr/bin/sudo /bin/chmod -R o-rw /var/audit/ \nNote: It is recommended to do a thorough verification process on why the audit logs \nhave been changed before following the remediation steps. If the system has different \naccess controls on the audit logs, and the changes cannot be traced, a new install may \nbe prudent. Check for signs of file tampering as well as unapproved OS changes. \n \nInternal Only - General \nAdditional Information: \nFrom ls man page \n-e      Print the Access Control List (ACL) associated with the file, if \n             present, in long (-l) output. \nMore info: \nhttps://www.techrepublic.com/blog/apple-in-the-enterprise/introduction-to-os-x-access-\ncontrol-lists-acls/ \nhttp://ahaack.net/technology/OS-X-Access-Control-Lists-ACL.html",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "3.6 Ensure Firewall Logging Is Enabled and Configured (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The socketfilter Firewall is what is used when the Firewall is turned on in the Security & \nPrivacy Preference Pane. In order to appropriately monitor what access is allowed and \ndenied, logging must be enabled. The logging level must be set to \"detailed\" to be \nuseful in monitoring connection attempts that the firewall detects. Throttled login is not \nsufficient for examining Firewall connection attempts. \nIn-depth log monitoring on macOS may require changes to the \"Enable-Private-Data\" \nkey in SystemLogging.System to ensure more complete logging. \nReviewing macOS Unified Logs",
        "Rationale": "In order to troubleshoot the successes and failures of a Firewall, detailed logging should \nbe enabled. \nImpact: \nDetailed logging may result in excessive storage.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Firewall updates install automatically: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Firewall set to Enabled \n5. Verify that the same installed profile has Logging set to Enabled \n6. Verify that the same installed profile has Logging option set to Detailed \nTerminal Method: \nRun the following command to verify that the Firewall log is enabled: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \nfunction run() { \n  let pref1 = \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\\ \n  .objectForKey('EnableLogging').js \n  let pref2 = \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\\ \n  .objectForKey('LoggingOption').js \n  let pref3 = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.alf')\\ \n  .objectForKey('loggingenabled').js \n  let pref4 = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.alf')\\ \n  .objectForKey('loggingoption').js \n  if ( ( pref1 == true && pref2 == \"detail\" ) || ( pref3 == 1 && pref4 == 2 ) \n) { \n    return(\"true\") \n  } else { \n    return(\"false\") \n  } \n} \nEOS \n \ntrue",
        "Remediation": "Terminal Method: \nRun the following command to enable logging of the firewall: \n$ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --\nsetloggingmode on \n \nTurning on log mode \n \n$ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --\nsetloggingopt detail \n \nSetting detail log option  \nNote: If the Firewall settings are set through a configuration profile, then modifications \ncannot be done through the command line. If attempted, you will receive the message \nFirewall settings cannot be modified from command line on managed Mac \ncomputers. \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.security.firewall \n2. The key to include is EnableFirewall \n3. The key must be set to <true/> \n4. The key to also include is EnableLogging \n5. The key must be set to <true/> \n6. The key to also include is LoggingOption \n7. The key must be set to <string>detail</string> \n \nInternal Only - General \nNote: Firewall Logging must be enabled with this profile. It can either be set with the \nFirewall and Stealth Mode (2.5.2.2 and 2.5.2.3) or as a separate profile. Setting logging \nwith its own profile will not cause a conflict.",
        "References": "1. https://developer.apple.com/documentation/devicemanagement/firewall?languag\ne=objc \nAdditional Information: \nMore info http://krypted.com/tag/socketfilterfw/",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.5 Implement and Manage a Firewall on End-User \nDevices \n \nImplement and manage a host-based firewall or port-filtering tool on end-user \ndevices, with a default-deny rule that drops all traffic except those services and \nports that are explicitly allowed. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.2 Collect Audit Logs \n \nCollect audit logs. Ensure that logging, per the enterprise\u2019s audit log \nmanagement process, has been enabled across enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv8 \n8.5 Collect Detailed Audit Logs \n \nConfigure detailed audit logging for enterprise assets containing sensitive data. \nInclude event source, date, username, timestamp, source addresses, destination \naddresses, and other useful elements that could assist in a forensic investigation. \n \n\u25cf \n\u25cf \nv7 \n6.2 Activate audit logging \n \nEnsure that local logging has been enabled on all systems and networking \ndevices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n6.3 Enable Detailed Logging \n \nEnable system logging to include detailed information such as an event source, \ndate, user, timestamp, source addresses, destination addresses, and other useful \nelements. \n \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "3.7 Audit Software Inventory (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "With the introduction of Mac OS X 10.6.6, Apple added a new application, App Store, \nwhich resides in the Applications directory. This application allows a user with admin \nprivileges and an Apple ID to browse Apple's online App Store, purchase (including no-\ncost purchases), and install new applications, bypassing Enterprise software inventory \ncontrols. Any admin user can install software in the /Applications directory whether from \ninternet downloads, thumb drives, optical media, cloud storage, or even binaries \nthrough email. Even standard users can run executables downloaded to their home \nfolder by default. The source of the software is not nearly as important as a consistent \naudit of all installed software for patch compliance and appropriateness. \nA single user desktop where the user, administrator, and the person approving software \nare all the same person probably does not need to audit software inventory to this \nextent. It is helpful in the case of stability problems or malware, however. \nScan systems on a monthly basis and determine the number of unauthorized pieces of \nsoftware that are installed. Verify that if an unauthorized piece of software is found one \nmonth, it is removed from the system the next. \nExport System Information through the built-in System Information Application or other \nthird-party tools on an organizationally defined timetable.",
        "Rationale": "Part of comprehensive IT security involves device management and ensuring that all \nsoftware is authorized and patched. Checking for macOS updates and app updates are \nrelatively simple for the end user, and can even be updated with minimal privileges from \ntrusted sources, if enabled. Remote monitoring of the patch status for software \nmaintained through Apple is very well supported by management applications. Neither \nApple capabilities nor third-party patch management solutions will cover all mission-\nnecessary software for most organizations. Full visibility into software present on the \nsystem enables vulnerability and risk management. \nP.S. Don't forget about browser plugins/extensions for all installed software.",
        "Audit": "Graphical Mode: \nPerform the following steps to access System Information: \n1. Open /Applications/Utilities/System Information \n2. Select Software \n3. Select System Report \n \nInternal Only - General \n4. Select Applications \n5. Verify that no Applications listed are against your organization's requirements \n6. Select Installations \n7. Verify that no Installations listed are against your organization's requirements \nTerminal Method: \nRun the following command to view all System Profiler details \n$ /usr/bin/sudo /usr/sbin/system_profiler SPApplicationsDataType",
        "Remediation": "Delete any unnecessary applications from the system.",
        "References": "1. https://support.apple.com/en-us/HT203001 \n2. https://www.cisecurity.org/controls/inventory-and-control-of-software-assets/ \nAdditional Information: \n$ /usr/bin/sudo /usr/bin/man system_profiler",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n2.1 Establish and Maintain a Software Inventory \n \nEstablish and maintain a detailed inventory of all licensed software installed on \nenterprise assets. The software inventory must document the title, publisher, initial \ninstall/use date, and business purpose for each entry; where appropriate, include \nthe Uniform Resource Locator (URL), app store(s), version(s), deployment \nmechanism, and decommission date. Review and update the software inventory bi-\nannually, or more frequently. \n\u25cf \n\u25cf \n\u25cf \nv7 \n2.1 Maintain Inventory of Authorized Software \n \nMaintain an up-to-date list of all authorized software that is required in the \nenterprise for any business purpose on any business system. \n\u25cf \n\u25cf \n\u25cf \n \n \nInternal Only - General \n4 Network Configurations \nThis section contains guidance on configuring the networking-related aspects of macOS \nthat have been removed from System Settings but still can be set through Terminal."
    },
    {
        "Title": "4.1 Ensure Bonjour Advertising Services Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Bonjour is an auto-discovery mechanism for TCP/IP devices which enumerates devices \nand services within a local subnet. DNS on macOS is integrated with Bonjour and \nshould not be turned off, but the Bonjour advertising service can be disabled.",
        "Rationale": "Bonjour can simplify device discovery from an internal rogue or compromised host. An \nattacker could use Bonjour's multicast DNS feature to discover a vulnerable or poorly-\nconfigured service or additional information to aid a targeted attack. Implementing this \ncontrol disables the continuous broadcasting of \"I'm here!\" messages. Typical end-user \nendpoints should not have to advertise services to other computers. This setting does \nnot stop the computer from sending out service discovery messages when looking for \nservices on an internal subnet, if the computer is looking for a printer or server and \nusing service discovery. To block all Bonjour traffic except to approved devices, the pf \nor other firewall would be needed. \nImpact: \nSome applications may not operate properly if Bonjour advertising (discoverable) is \nturned off. In AirDrop, having this discoverability feature disabled makes the system \nunavailable to receive files in AirDrop on the local network.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that Bonjour Advertising is disabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has NoMulticastAdvertisements set to 1 \nTerminal Method: \nRun the following command to verify that Bonjour Advertising is not enabled: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.mDNSResponder')\\ \n.objectForKey('NoMulticastAdvertisements').js \nEOS \n \ntrue",
        "Remediation": "Terminal Method: \nRun the following command to disable Bonjour Advertising services: \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements \n-bool true \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.mDNSResponder \n2. The key to include is NoMulticastAdvertisements \nAdditional Information: \nAnything Bonjour discovers is already available on the network and probably \ndiscoverable with network scanning tools. The security benefit of disabling Bonjour for \nthat reason is minimal.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "4.2 Ensure HTTP Server Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "macOS used to have a graphical front-end to the embedded Apache web server in the \nOperating System. Personal web sharing could be enabled to allow someone on \nanother computer to download files or information from the user's computer. Personal \nweb sharing from a user endpoint has long been considered questionable, and Apple \nhas removed that capability from the GUI. Apache, however, is still part of the Operating \nSystem and can be easily turned on to share files and provide remote connectivity to an \nend-user computer. Web sharing should only be done through hardened web servers \nand appropriate cloud services.",
        "Rationale": "Web serving should not be done from a user desktop. Dedicated webservers or \nappropriate cloud storage should be used. Open ports make it easier to exploit the \ncomputer. \nImpact: \nThe web server is both a point of attack for the system and a means for unauthorized \nfile transfers.",
        "Audit": "Terminal Method: \nRun the following command to verify that the HTTP server services are not currently \nenabled. This check does not reflect any auto-start settings, only whether the web \nserver is currently enabled: \n$ /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c \"org.apache.httpd\" \n \n0",
        "Remediation": "Terminal Method: \nRun the following command to disable the HTTP server services: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/apachectl stop \n \n$ /usr/bin/sudo /bin/launchctl unload -w \n/System/Library/LaunchDaemons/org.apache.httpd.plist",
        "References": "1. https://www.stigviewer.com/stig/apple_macos_11_big_sur/2021-06-16/finding/V-\n230793 \n2. https://httpd.apache.org/security/vulnerabilities_24.html",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "4.3 Ensure NFS Server Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "macOS can act as an NFS fileserver. NFS sharing could be enabled to allow someone \non another computer to mount shares and gain access to information from the user's \ncomputer. File sharing from a user endpoint has long been considered questionable, \nand Apple has removed that capability from the GUI. NFSD is still part of the Operating \nSystem and can be easily turned on to export shares and provide remote connectivity to \nan end-user computer. \nThe etc/exports file contains the list of NFS shared directories. If the file exists, it is likely \nthat NFS sharing has been enabled in the past or may be available periodically. As an \nadditional check, the audit verifies that there is no /etc/exports file.",
        "Rationale": "File serving should not be done from a user desktop. Dedicated servers should be used. \nOpen ports make it easier to exploit the computer. \nImpact: \nThe nfs server is both a point of attack for the system and a means for unauthorized file \ntransfers.",
        "Audit": "Terminal Method: \nRun the following commands to verify that the NFS fileserver service is not enabled: \n$ /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c com.apple.nfsd \n \n0 \n \n$ /usr/bin/sudo /bin/cat /etc/exports  \n \ncat: /etc/exports: No such file or directory",
        "Remediation": "Terminal Method: \nRun the following command to disable the nfsd fileserver services: \n$ /usr/bin/sudo /sbin/nfsd stop \n \n$ /usr/bin/sudo /bin/launchctl disable system/com.apple.nfsd \nRemove the exported Directory listing."
    },
    {
        "Title": "5 System Access, Authentication and Authorization",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service function. \n \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf \n \n5 System Access, Authentication and Authorization \nThe controls in this section are a combination of hardening controls that are not \nspecifically in a System Settings pane. Many of these controls are only accessible using \nthe Command Line or a Device Profile and not available in the Graphical User Interface. \nThe Benchmark does contain simple, easy to follow instructions for technical staff to \naudit and implement recommended controls."
    },
    {
        "Title": "5.1 File System Permissions and Access Controls"
    },
    {
        "Title": "5.1.1 Ensure Home Folders Are Secure (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "By default, macOS allows all valid users into the top level of every other user's home \nfolder and restricts access to the Apple default folders within. Another user on the same \nsystem can see you have a \"Documents\" folder but cannot see inside it. This \nconfiguration does work for personal file sharing but can expose user files to standard \naccounts on the system. \nThe best parallel for Enterprise environments is that everyone who has a Dropbox \naccount can see everything that is at the top level but can't see your pictures. Similarly \nwith macOS, users can see into every new Directory that is created because of the \ndefault permissions. \nHome folders should be restricted to access only by the user. Sharing should be used \non dedicated servers or cloud instances that are managing access controls. Some \nenvironments may encounter problems if execute rights are removed as well as read \nand write. Either no access or execute only for group or others is acceptable.",
        "Rationale": "Allowing all users to view the top level of all networked users' home folder may not be \ndesirable since it may lead to the revelation of sensitive information. \nImpact: \nIf implemented, users will not be able to use the \"Public\" folders in other users' home \nfolders. \"Public\" folders with appropriate permissions would need to be set up in the \n/Shared folder.",
        "Audit": "Terminal Method: \nRun the following command to ensure that all home folders are secure: \n$ /usr/bin/sudo /usr/bin/find /System/Volumes/Data/Users -mindepth 1 -\nmaxdepth 1 -type d -not -perm 700 | /usr/bin/grep -v \"Shared\" | /usr/bin/grep \n-v \"Guest\" \nThe output will show what user folders are not secure. \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/find /System/Volumes/Data/Users -mindepth 1 -\nmaxdepth 1 -type d -not -perm 700 | /usr/bin/grep -v \"Shared\" | /usr/bin/grep \n-v \"Guest\"  \n \n/System/Volumes/Data/Users/firstuser \n/System/Volumes/Data/Users/thirduser",
        "Remediation": "Terminal Method: \nFor each user, run the following command to secure all home folders: \n$ /usr/bin/sudo /bin/chmod -R og-rwx /Users/<username> \nAlternately, run the following command if there needs to be executable access for a \nhome folder: \n$ /usr/bin/sudo /bin/chmod -R og-rw /Users/<username> \nexample: \n$ /usr/bin/sudo /bin/chmod -R og-rw /Users/firstuser/ \n \n$ /usr/bin/sudo /bin/chmod -R og-rwx /Users/thirduser/",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.1.2 Ensure System Integrity Protection Status (SIP) Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "System Integrity Protection is a security feature introduced in OS X 10.11 El Capitan. \nSystem Integrity Protection restricts access to System domain locations and restricts \nruntime attachment to system processes. Any attempt to inspect or attach to a system \nprocess will fail. Kernel Extensions are now restricted to /Library/Extensions and are \nrequired to be signed with a Developer ID.",
        "Rationale": "Running without System Integrity Protection on a production system runs the risk of the \nmodification of system binaries or code injection of system processes that would \notherwise be protected by SIP. \nImpact: \nSystem binaries and processes could become compromised.",
        "Audit": "Terminal Method: \nRun the following command to verify that System Integrity Protection is enabled: \n$ /usr/bin/sudo /usr/bin/csrutil status \n \n`System Integrity Protection status: enabled.`",
        "Remediation": "Terminal Method: \nPerform the following steps to enable System Integrity Protection: \n1. Reboot into the Recovery Partition (reboot and hold down Command (\u2318) + \nR) \n2. Select Utilities \n3. Select Terminal \n4. Run the following command: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/csrutil enable \n \nSuccessfully enabled System Integrity Protection. Please restart the machine \nfor the changes to take effect. \n \n5. Reboot the computer \nNote: You should research why the system had SIP disabled. It might be a better option \nto erase the Mac and reinstall the operating system. That is at your discretion. \nNote: You cannot enable System Integrity Protection from the booted operating system. \nIf the remediation is attempted in the booted OS and not the Recovery Partition the \noutput will give the error csrutil: failed to modify system integrity \nconfiguration. This tool needs to be executed from the Recovery OS.",
        "References": "1. https://developer.apple.com/documentation/security/disabling_and_enabling_syst\nem_integrity_protection \n2. https://support.apple.com/en-us/HT204899 \nAdditional Information: \nRelated to SIP controls, Library Validation is a security feature introduced in macOS \n10.10 Yosemite. Library Validation protects processes from loading arbitrary libraries. \nThis stops root from loading arbitrary libraries into any process (depending on SIP \nstatus), and keeps root from becoming more powerful. Security is strengthened, \nbecause some user processes can no longer be fooled to run additional code without \nroot's explicit request, which may grant access to daemons that depend on Library \nValidation for secure validation of code identity. \nWith SIP enabled, Library Validation cannot be disabled. To test against a non-validated \nlibrary, you will need to disabled SIP AND disable Library Validation.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n2.3 Address Unauthorized Software \n \nEnsure that unauthorized software is either removed from use on enterprise \nassets or receives a documented exception. Review monthly, or more frequently. \n\u25cf \n\u25cf \n\u25cf \nv8 \n2.6 Allowlist Authorized Libraries \n \n Use technical controls to ensure that only authorized software libraries, such \nas specific .dll, .ocx, .so, etc., files, are allowed to load into a system process. \nBlock unauthorized libraries from loading into a system process. Reassess bi-\nannually, or more frequently. \n \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n10.5 Enable Anti-Exploitation Features \n \nEnable anti-exploitation features on enterprise assets and software, where \npossible, such as Microsoft\u00ae Data Execution Prevention (DEP), Windows\u00ae \nDefender Exploit Guard (WDEG), or Apple\u00ae System Integrity Protection (SIP) and \nGatekeeper\u2122. \n \n\u25cf \n\u25cf \nv7 \n2.6 Address unapproved software \n \nEnsure that unauthorized software is either removed or the inventory is updated \nin a timely manner \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.1.3 Ensure Apple Mobile File Integrity (AMFI) Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple Mobile File Integrity (AMFI) was first released in macOS 10.12. The daemon and \nservice block attempts to run unsigned code. AMFI uses launchd, code signatures, \ncertificates, entitlements, and provisioning profiles to create a filtered entitlement \ndictionary for an app. AMFI is the macOS kernel module that enforces code-signing and \nlibrary validation.",
        "Rationale": "Apple Mobile File Integrity validates that application code is validated. \nImpact: \nApplications could be compromised with malicious code.",
        "Audit": "Terminal Method: \nRun the following command to verify that Apple Mobile File Integrity is enabled: \n$ /usr/bin/sudo /usr/sbin/nvram -p | /usr/bin/grep -c \n\"amfi_get_out_of_my_way=1\" \n \n0 \nNote: AMFI cannot be disabled with SIP enabled, but a change attempt can be made \nthat will appear successful, and report incorrectly as successful. If the AMFI audit fails, \nand the SIP audit passes, this is still an issue the admin should research.",
        "Remediation": "Terminal Method: \nRun the following command to enable the Apple Mobile File Integrity service: \n$ /usr/bin/sudo /usr/sbin/nvram boot-args=\"\"",
        "References": "1. https://eclecticlight.co/2018/12/29/amfi-checking-file-integrity-on-your-mac/ \n2. https://github.com/usnistgov/macos_security/issues/39 \n3. https://github.com/usnistgov/macos_security/issues/40 \n4. https://www.naut.ca/blog/2020/11/13/forbidden-commands-to-liberate-macos/ \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n2.3 Address Unauthorized Software \n \nEnsure that unauthorized software is either removed from use on enterprise \nassets or receives a documented exception. Review monthly, or more frequently. \n\u25cf \n\u25cf \n\u25cf \nv8 \n2.6 Allowlist Authorized Libraries \n \n Use technical controls to ensure that only authorized software libraries, such \nas specific .dll, .ocx, .so, etc., files, are allowed to load into a system process. \nBlock unauthorized libraries from loading into a system process. Reassess bi-\nannually, or more frequently. \n \n\u25cf \n\u25cf \nv7 \n2.6 Address unapproved software \n \nEnsure that unauthorized software is either removed or the inventory is updated \nin a timely manner \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.1.4 Ensure Signed System Volume (SSV) Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Signed System Volume is a security feature introduced in macOS 11.0 Big Sur. \nDuring system installation, a SHA-256 cryptographic hash is calculated for all immutable \nsystem files and stored in a Merkle tree which itself is hashed as the Seal. Both are \nstored in the metadata of the snapshot created of the System volume. \nThe seal is verified by the boot loader at startup. macOS will not boot if system files \nhave been tampered with. If validation fails, the user will be instructed to reinstall the \noperating system. \nDuring read operations for files located in the Signed System Volume, a hash is \ncalculated and compared to the value stored in the Merkle tree.",
        "Rationale": "Running without Signed System Volume on a production system could run the risk of \nApple software that integrates directly with macOS being modified. \nImpact: \nApple Software that integrates with the operating system could become compromised.",
        "Audit": "Terminal Method: \nRun the following command to verify that Signed System Volume is enabled: \n$ /usr/bin/sudo /usr/bin/csrutil authenticated-root status \n \nAuthenticated Root status: enabled",
        "Remediation": "If SSV has been disabled, assume that the operating system has been compromised. \nBack up any files, and do a clean install to a known good Operating System.",
        "References": "1. https://developer.apple.com/news/?id=3xpv8r2m \n2. https://eclecticlight.co/2020/11/30/is-big-surs-system-volume-sealed/ \n3. https://eclecticlight.co/2020/06/25/big-surs-signed-system-volume-added-\nsecurity-protection/ \n \nInternal Only - General \n4. https://support.apple.com/guide/security/signed-system-volume-security-\nsecd698747c9/web \n5. https://support.apple.com/guide/mac-help/what-is-a-signed-system-volume-\nmchl0f9af76f/mac",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.6 Encrypt Data on End-User Devices \n \nEncrypt data on end-user devices containing sensitive data. Example \nimplementations can include: Windows BitLocker\u00ae, Apple FileVault\u00ae, Linux\u00ae dm-\ncrypt. \n\u25cf \n\u25cf \n\u25cf \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv7 \n13.6 Encrypt the Hard Drive of All Mobile Devices. \n \nUtilize approved whole disk encryption software to encrypt the hard drive of all \nmobile devices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.8 Encrypt Sensitive Information at Rest \n \nEncrypt all sensitive information at rest using a tool that requires a secondary \nauthentication mechanism not integrated into the operating system, in order to \naccess the information. \n \n \n\u25cf"
    },
    {
        "Title": "5.1.5 Ensure Appropriate Permissions Are Enabled for System Wide Applications (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Applications in the System Applications Directory (/Applications) should be world-\nexecutable since that is their reason to be on the system. They should not be world-\nwritable and allow any process or user to alter them for other processes or users to then \nexecute modified versions.",
        "Rationale": "Unauthorized modifications of applications could lead to the execution of malicious \ncode. \nImpact: \nApplications changed will no longer be world-writable. Depending on the environment, \nthere will be different risk tolerances on each non-conforming application. Global \nchanges should not be performed where mission-critical applications are misconfigured.",
        "Audit": "Terminal Method: \nRun the following command to verify that all applications have the correct permissions: \n$ /usr/bin/sudo /usr/bin/find /System/Volumes/Data/Applications -iname \n\"*\\.app\" -type d -perm -2 -ls | grep -v Xcode.app | /usr/bin/wc -l | \n/usr/bin/xargs \n \n0",
        "Remediation": "Terminal Method: \nRun the following command to change the permissions for each application that does \nnot meet the requirements: \n$ /usr/bin/sudo IFS=$'\\n' \nfor apps in $( /usr/bin/find /System/Volumes/Data/Applications -iname \n\"*\\.app\" -type d -perm -2 | grep -v Xcode.app ); do \n  /bin/chmod -R o-w \"$apps\" \ndone \nNote: Global changes should not be performed where mission-critical applications are \npart of the improperly permissioned applications. \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.1.6 Ensure No World Writable Folders Exist in the System Folder (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Software sometimes insists on being installed in the /System/Volumes/Data/System \nDirectory and has inappropriate world-writable permissions. \nMacs with writable files in System should be investigated forensically. A file with open \nwritable permissions is a sign of at best a rogue application. It could also be a sign of a \ncomputer compromise and a persistent presence on the system.",
        "Rationale": "Folders in /System/Volumes/Data/System should not be world-writable. The audit \ncheck excludes the downloadDir and locks folders that are part of Apple's default user \ntemplate. \nImpact: \nChanging file permissions could disrupt the use of applications that rely on files in the \nSystem Folder with vulnerable permissions.",
        "Audit": "Terminal Method: \nRun the following command to check for directories in the /System folder that are world-\nwritable: \n$ /usr/bin/sudo /usr/bin/find /System/Volumes/Data/System -type d -perm -2 -\nls | /usr/bin/grep -vE \"downloadDir|locks\" | /usr/bin/wc -l | /usr/bin/xargs \n \n0",
        "Remediation": "Terminal Method: \nRun the following command to set permissions so that folders are not world-writable in \nthe /System folder: \n \nInternal Only - General \n$ /usr/bin/sudo IFS=$'\\n' \n  for sysPermissions in $( /usr/bin/find /System/Volumes/Data/System -type d \n-perm -2 | /usr/bin/grep -vE \"downloadDir|locks\" ); do \n    /bin/chmod -R o-w \"$sysPermissions\" \n  done",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.1.7 Ensure No World Writable Folders Exist in the Library Folder (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Software sometimes insists on being installed in the /System/Volumes/Data/Library \nDirectory and has inappropriate world-writable permissions.",
        "Rationale": "Folders in /System/Volumes/Data/Library should not be world-writable. The audit \ncheck excludes the /System/Volumes/Data/Library/Caches and \n/System/Volumes/Data/Library/Preferences/Audio/Data folders where the sticky \nbit is set.",
        "Audit": "Terminal Method: \nRun the following to verify that no directories in the /System/Volumes/Data/Library \nfolder are world-writable: \n$ /usr/bin/sudo /usr/bin/find /System/Volumes/Data/Library -type d -perm -2 -\nls 2>&1 | /usr/bin/grep -v Caches | /usr/bin/grep -v /Preferences/Audio/Data \n| /usr/bin/wc -l | /usr/bin/xargs \n \n0",
        "Remediation": "Terminal Method: \nRun the following command to set permissions so that folders are not world-writable in \nthe /System/Volumes/Data/Library folder: \n \nInternal Only - General \n$ /usr/bin/sudo IFS=$'\\n' \nfor libPermissions in $( /usr/bin/find /System/Volumes/Data/Library -type d -\nperm -2 2>&1 | /usr/bin/grep -v Caches | /usr/bin/grep -v \n/Preferences/Audio/Data ); do \n  /bin/chmod -R o-w \"$libPermissions\" \ndone",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.3 Configure Data Access Control Lists \n \nConfigure data access control lists based on a user\u2019s need to know. Apply data \naccess control lists, also known as access permissions, to local and remote file \nsystems, databases, and applications. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.6 Protect Information through Access Control Lists \n \nProtect all information stored on systems with file system, network share, \nclaims, application, or database specific access control lists. These controls will \nenforce the principle that only authorized individuals should have access to the \ninformation based on their need to access the information as a part of their \nresponsibilities. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.2 Password Management"
    },
    {
        "Title": "5.2.1 Ensure Password Account Lockout Threshold Is Configured (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The account lockout threshold specifies the amount of times a user can enter an \nincorrect password before a lockout will occur. \nEnsure that a lockout threshold is part of the password policy on the computer.",
        "Rationale": "The account lockout feature mitigates brute-force password attacks on the system. \nImpact: \nThe number of incorrect log on attempts should be reasonably small to minimize the \npossibility of a successful password attack, while allowing for honest errors made during \na normal user log on. \nThe locked account will auto-unlock after a few minutes when bad password attempts \nstop. The computer will accept the still-valid password if remembered or recovered.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the Password Account Threshold is set to \nless than or equal to 5 and the lockout time is greater than or equal to 15: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Max Failed Attempts set to \u2264 5 \n5. Verify that an installed profile also has Failed Login Reset (minutes) set to \n\u2265 15 \nTerminal Method: \nRun the following command to verify that the number of failed attempts is less than or \nequal to 5: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies 2> /dev/null | \n/usr/bin/tail +2 | /usr/bin/xmllint --xpath \n'//dict/key[text()=\"policyAttributeMaximumFailedAuthentications\"]/following-\nsibling::integer[1]/text()' - \nThe output should be \u2264 5 \nRun the following command to verify that the lockout time in minutes is greater than or \nequal to 15: \n$ /usr/bin/sudo pref1=$(/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep \n-A1 \"policyAttributeMinutesUntilFailedAuthenticationReset\" | /usr/bin/tail -1 \n| /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && pref2=$(pwpolicy -\ngetaccountpolicies 2> /dev/null | /usr/bin/tail +2 | /usr/bin/xmllint --xpath \n'//dict/key[text()=\"autoEnableInSeconds\"]/following-\nsibling::integer[1]/text()' - ) && if [[ \"$pref1\" != \"\" && pref1 -ge 15 ]]; \nthen echo \"true\"; elif [[ \"$pref2\" != \"\" && pref2 -ge 900 ]]; then echo \n\"true\"; else echo \"false\"; fi \n \ntrue",
        "Remediation": "Terminal Method: \nRun the following command to set the maximum number of failed login attempts to less \nthan or equal to 5: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"maxFailedLoginAttempts=<value\u22645>\" \n \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"policyAttributeMinutesUntilFailedAuthenticationReset=<value\u226415>\" \nexample: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"maxFailedLoginAttempts=5\" \n \n/usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"policyAttributeMinutesUntilFailedAuthenticationReset=15\" \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.mobiledevice.passwordpolicy \n2. The key to include is maxFailedAttempts \n3. The key must be set to <integer><value\u22645></integer> \n4. The key to include is minutesUntilFailedLoginReset \n5. The key must be set to <integer><value\u226415></integer> \nNote: The profile method is the preferred method for setting password policy since -\nsetglobalpolicy in pwpolicy is deprecated and will likely be removed in a future \nmacOS release. \nNote: This is for the login password only and does not affect the timeout of FileVault. \n \nInternal Only - General",
        "References": "1. CIS Password Policy - https://workbench.cisecurity.org/communities/113",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n6.2 Establish an Access Revoking Process \n \nEstablish and follow a process, preferably automated, for revoking access to \nenterprise assets, through disabling accounts immediately upon termination, rights \nrevocation, or role change of a user. Disabling accounts, instead of deleting \naccounts, may be necessary to preserve audit trails. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.7 Establish Process for Revoking Access \n \nEstablish and follow an automated process for revoking system access by \ndisabling accounts immediately upon termination or change of responsibilities of an \nemployee or contractor . Disabling these accounts, instead of deleting accounts, \nallows preservation of audit trails. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.2.2 Ensure Password Minimum Length Is Configured (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "A minimum password length is the fewest number of characters a password can contain \nto meet a system's requirements. \nEnsure that a minimum of a 15-character password is part of the password policy on the \ncomputer. \nWhere the confidentiality of encrypted information in FileVault is more of a concern, \nrequiring a longer password or passphrase may be sufficient rather than imposing \nadditional complexity requirements that may be self-defeating.",
        "Rationale": "Information systems that are not protected with strong password schemes including \npasswords of minimum length provide a greater opportunity for attackers to crack the \npassword and gain access to the system. \nImpact: \nShort passwords can be easily attacked.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the Password Account Threshold is set to \ngreater than or equal to 15: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Min Password Length set to \u2265 15 \nTerminal Method: \nRun the following command to verify that the password length is greater than or equal to \n15: \n$ /usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -e \n\"policyAttributePassword matches\" | /usr/bin/cut -b 46-53 | /usr/bin/cut -\nd',' -f1 | /usr/bin/cut -d'{' -f2 \nThe output value should be \u2265 15 \n \nInternal Only - General",
        "Remediation": "Terminal Method: \nRun the following command to set the password length to greater than or equal to 15: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"minChars=<value\u226515>\" \nexample: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"minChars=15\" \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.mobiledevice.passwordpolicy \n2. The key to include is minLength \n3. The key must be set to <integer><value\u226515></integer> \nNote: The profile method is the preferred method for setting password policy since -\nsetglobalpolicy in pwpolicy is deprecated and will likely be removed in a future \nmacOS release.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.2.3 Ensure Complex Password Must Contain Alphabetic Characters Is Configured (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Complex passwords contain one character from each of the following classes: English \nuppercase letters, English lowercase letters, Westernized Arabic numerals, and non-\nalphanumeric characters. \nEnsure that an Alphabetic character is part of the password policy on the computer.",
        "Rationale": "The more complex a password, the more resistant it will be against persons seeking \nunauthorized access to a system. \nImpact: \nPassword policy should be in effect to reduce the risk of exposed services being \ncompromised easily through dictionary attacks or other social engineering attempts.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the passwords must contain at least 1 \nalphabetic character: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Requires Alphanumeric set to True \nTerminal Method: \nRun the following command to verify that the password requires at least one letter: \n \nInternal Only - General \n$ pref1=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep \n-e \"Contain at least one number and one alphabetic character.\" | cut -b 13-\n68) && pref2=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | \n/usr/bin/grep -A1 minimumLetters | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 \n| /usr/bin/cut -d '<' -f1) && if [ \"$pref1\" = \"Contain at least one number \nand one alphabetic character\" ]; then echo \"true\"; elif [[ \"$pref2\" != \"\" && \npref2 -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi \n \ntrue",
        "Remediation": "Terminal Method: \nRun the following command to set that passwords must contain at least one letter: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -\nsetaccountpolicies \"requiresAlpha=<value\u22651>\" \nexample: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"requiresAlpha=1\" \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.mobiledevice.passwordpolicy \n2. The key to include is requireAlphanumeric \n3. The key must be set to <true/> \nNote: This profile sets a requirement of both an alphabetical and a numeric character. \nNote: The profile method is the preferred method for setting password policy since -\nsetglobalpolicy in pwpolicy is deprecated and will likely be removed in a future \nmacOS release. \nAdditional Information: \nNote: The CIS macOS community has decided to not require the additional password \ncomplexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the \ncomplexity recommendations as a manual assessment. Since there are a large amount \nof admins in the greater macOS world that do need these settings, we include both the \nguidance for the proper setting as well as probes for CIS-CAT to test.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf \n \n \nInternal Only - General \n5.2.4 Ensure Complex Password Must Contain Numeric \nCharacter Is Configured (Manual) \nProfile Applicability: \n\u2022  Level 2 \nDescription: \nComplex passwords contain one character from each of the following classes: English \nuppercase letters, English lowercase letters, Westernized Arabic numerals, and non-\nalphanumeric characters. \nEnsure that a number or numeric value is part of the password policy on the computer. \nRationale: \nThe more complex a password, the more resistant it will be against persons seeking \nunauthorized access to a system. \nImpact: \nPassword policy should be in effect to reduce the risk of exposed services being \ncompromised easily through dictionary attacks or other social engineering attempts. \nAudit: \nGraphical Method: \nPerform the following steps to ensure that the passwords must contain at least 1 \nnumeric character: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Requires Alphanumeric set to True \nTerminal Method: \nRun the following command to verify that passwords require at least one number: \n \nInternal Only - General \n$  pref1=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | \n/usr/bin/grep -e \"Contain at least one number and one alphabetic character.\" \n| cut -b 13-68) && pref2=$(/usr/bin/sudo /usr/bin/pwpolicy -\ngetaccountpolicies | /usr/bin/grep -A1 minimumNumericCharacters | \n/usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [ \n\"$pref1\" = \"Contain at least one number and one alphabetic character\" ]; then \necho \"true\"; elif [[ \"$pref2\" != \"\" && pref2 -ge 1 ]]; then echo \"true\"; else \necho \"false\"; fi \n \ntrue  \nRemediation: \nTerminal Method: \nRun the following command to set passwords to require at least one number: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -\nsetaccountpolicies \"requiresNumeric=<value\u22651>\" \nexample: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"requiresNumeric=2\" \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.mobiledevice.passwordpolicy \n2. The key to include is requireAlphanumeric \n3. The key must be set to <true/> \nNote: This profile sets a requirement of both an alphabetical and a numeric character. \nNote: The profile method is the preferred method for setting password policy since -\nsetglobalpolicy in pwpolicy is deprecated and will likely be removed in a future \nmacOS release. \nAdditional Information: \nNote: The CIS macOS community has decided to not require the additional password \ncomplexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the \ncomplexity recommendations as a manual assessment. Since there are a large amount \nof admins in the greater macOS world that do need these settings, we include both the \nguidance for the proper setting as well as probes for CIS-CAT to test. \n \nInternal Only - General \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.2.5 Ensure Complex Password Must Contain Special Character Is Configured (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Complex passwords contain one character from each of the following classes: English \nuppercase letters, English lowercase letters, Westernized Arabic numerals, and non-\nalphanumeric characters. Ensure that a special character is part of the password policy \non the computer.",
        "Rationale": "The more complex a password, the more resistant it will be against persons seeking \nunauthorized access to a system. \nImpact: \nPassword policy should be in effect to reduce the risk of exposed services being \ncompromised easily through dictionary attacks or other social engineering attempts.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the passwords must contain at least 1 special \ncharacter: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Min Complex Length set to \u2265 1 \nTerminal Method: \nRun the following command to verify that the password requires at least one special \ncharacter: \n \nInternal Only - General \n$  pref1=$(/usr/bin/sudo  /usr/bin/pwpolicy -getaccountpolicies | \n/usr/bin/grep -e \"policyAttributePassword matches '(.*[^a-zA-Z0-9].*){1,}'\" | \ncut -b 12-67) && pref2=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies \n| /usr/bin/grep -A1 minimumSymbols | /usr/bin/tail -1 | /usr/bin/cut -d'>' -\nf2 | /usr/bin/cut -d '<' -f1) && if [ \"$pref1\" = \"policyAttributePassword \nmatches '(.*[^a-zA-Z0-9].*){1,}'\" ]; then echo \"true\"; elif [[ \"$pref2\" != \"\" \n&& pref2 -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi \n \ntrue",
        "Remediation": "Terminal Method: \nRun the following command to set passwords to require at least one special character: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -\nsetaccountpolicies \"requiresSymbol=<value\u22651>\" \nexample: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"requiresSymbol=1\" \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.mobiledevice.passwordpolicy \n2. The key to include is minComplexChars \n3. The key must be set to <integer><value\u22651></integer> \nNote: The profile method is the preferred method for setting password policy since -\nsetglobalpolicy in pwpolicy is deprecated and will likely be removed in a future \nmacOS release. \nAdditional Information: \nNote: The CIS macOS community has decided to not require the additional password \ncomplexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the \ncomplexity recommendations as a manual assessment. Since there are a large amount \nof admins in the greater macOS world that do need these settings, we include both the \nguidance for the proper setting as well as probes for CIS-CAT to test.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.2.6 Ensure Complex Password Must Contain Uppercase and Lowercase Characters Is Configured (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Complex passwords contain one character from each of the following classes: English \nuppercase letters, English lowercase letters, Westernized Arabic numerals, and non-\nalphanumeric characters. \nEnsure that both uppercase and lowercase letters are part of the password policy on the \ncomputer.",
        "Rationale": "The more complex a password, the more resistant it will be against persons seeking \nunauthorized access to a system. \nImpact: \nPassword policy should be in effect to reduce the risk of exposed services being \ncompromised easily through dictionary attacks or other social engineering attempts.",
        "Audit": "Terminal Method: \nRun the following command to verify that the password requires an upper and lower \ncase letter: \n$ pref=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep \n-A1 minimumMixedCaseCharacters | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | \n/usr/bin/cut -d '<' -f1) && if [[ \"$pref\" != \"\" && pref -ge 1 ]]; then echo \n\"true\"; else echo \"false\"; fi \n \ntrue",
        "Remediation": "Terminal Method: \nRun the following command to set passwords to require an upper and lower case letter: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"requiresMixedCase=<value\u22651>\" \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"requiresMixedCase=1\" \nAdditional Information: \nNote: The CIS macOS community has decided to not require the additional password \ncomplexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the \ncomplexity recommendations as a manual assessment. Since there are a large amount \nof admins in the greater macOS world that do need these settings, we include both the \nguidance for the proper setting as well as probes for CIS-CAT to test.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.2.7 Ensure Password Age Is Configured (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Over time, passwords can be captured by third parties through mistakes, phishing \nattacks, third-party breaches, or merely brute-force attacks. To reduce the risk of \nexposure and to decrease the incentives of password reuse (passwords that are not \nforced to be changed periodically generally are not ever changed), users should reset \npasswords periodically. This control uses 365 days as the acceptable value. Some \norganizations may be more or less restrictive. This control mainly exists to mitigate \nagainst password reuse of the macOS account password in other realms that may be \nmore prone to compromise. Attackers take advantage of exposed information to attack \nother accounts.",
        "Rationale": "Passwords should be changed periodically to reduce exposure. \nImpact: \nRequired password changes will lead to some locked computers requiring admin \nassistance.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the passwords expire after at most 365 days: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Max Age (days) set to \u2264 365 \nTerminal Method: \nRun the following command to verify that the password expires after at most 365 days: \n \nInternal Only - General \n$ pref1=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep \n-A1 policyAttributeExpiresEveryNDays | /usr/bin/tail -1 | /usr/bin/cut -d'>' \n-f2 | /usr/bin/cut -d '<' -f1) && pref2=$(/usr/bin/sudo /usr/bin/pwpolicy -\ngetaccountpolicies | /usr/bin/grep -A1 policyAttributeDaysUntilExpiration | \n/usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [[ \n\"$pref1\" != \"\" && pref1 -le 365 ]]; then echo \"true\"; elif [[ \"$pref2\" != \"\" \n&& pref2 -le 365 ]]; then echo \"true\"; else echo \"false\"; fi \n \ntrue",
        "Remediation": "Terminal Method: \nRun the following command to require that passwords expire after at most 365 days: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"maxMinutesUntilChangePassword=<value\u2264525600>\" \nexample: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"maxMinutesUntilChangePassword=43200\" \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.mobiledevice.passwordpolicy \n2. The key to include is maxPINAgeInDays \n3. The key must be set to <integer><value\u2265365></integer> \nNote: The profile method is the preferred method for setting password policy since -\nsetglobalpolicy in pwpolicy is deprecated and will likely be removed in a future \nmacOS release.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.3 Disable Dormant Accounts \n \nDelete or disable any dormant accounts after a period of 45 days of \ninactivity, where supported. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.9 Disable Dormant Accounts \n \nAutomatically disable dormant accounts after a set period of inactivity. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.2.8 Ensure Password History Is Configured (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Over time, passwords can be captured by third parties through mistakes, phishing \nattacks, third-party breaches, or merely brute-force attacks. To reduce the risk of \nexposure and to decrease the incentives of password reuse (passwords that are not \nforced to be changed periodically generally are not ever changed), users must reset \npasswords periodically. This control ensures that previous passwords are not reused \nimmediately by keeping a history of previous password hashes. Ensure that password \nhistory checks are part of the password policy on the computer. This control checks \nwhether a new password is different than the previous 15. The latest NIST guidance \nbased on exploit research referenced in this section details how one of the greatest \nrisks is password exposure rather than password cracking. Passwords should be \nchanged to a new unique value whenever a password might have been exposed to \nanyone other than the account holder. Attackers have maintained persistent control \nbased on predictable password change patterns and substantially different patterns \nshould be used in case of a leak.",
        "Rationale": "Old passwords should not be reused. \nImpact: \nRequired password changes will lead to some locked computers requiring admin \nassistance.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the password is not the same as at least the \nlast 15 passwords: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has Max History Kept set to \u2265 15 \nTerminal Method: \nRun the following command to verify that the password is required to be different from \nat least the last 15 passwords: \n \nInternal Only - General \n$ pref=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep \n-A1 policyAttributePasswordHistoryDepth | /usr/bin/tail -1 | /usr/bin/cut -\nd'>' -f2 | /usr/bin/cut -d '<' -f1) && if [[ \"$pref\" != \"\" && pref -ge 1 ]]; \nthen echo \"true\"; else echo \"false\"; fi \n \ntrue",
        "Remediation": "Terminal Method: \nRun the following command to require that the password must be different from at least \nthe last 15 passwords: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"usingHistory=<value\u226515>\" \nexample: \n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \n\"usingHistory=15\" \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.mobiledevice.passwordpolicy \n2. The key to include is pinHistory \n3. The key must be set to <integer><value\u226515></integer> \nNote: The profile method is the preferred method for setting password policy since -\nsetglobalpolicy in pwpolicy is deprecated and will likely be removed in a future \nmacOS release.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.2 Use Unique Passwords \n \nUse unique passwords for all enterprise assets. Best practice implementation \nincludes, at a minimum, an 8-character password for accounts using MFA and a \n14-character password for accounts not using MFA.  \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.4 Use Unique Passwords \n \nWhere multi-factor authentication is not supported (such as local administrator, \nroot, or service accounts), accounts will use passwords that are unique to that \nsystem. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.3 Encryption"
    },
    {
        "Title": "5.3.1 Ensure all user storage APFS volumes are encrypted (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple developed a new file system which was first made available in 10.12 and then \nbecame the default in 10.13. The file system is optimized for Flash and Solid-State \nstorage and encryption. https://en.wikipedia.org/wiki/Apple_File_System macOS \ncomputers generally have several volumes created as part of APFS formatting, \nincluding Preboot, Recovery and Virtual Memory (VM), as well as traditional user disks. \nAll APFS volumes that do not have specific roles and do not require encryption should \nbe encrypted. \"Role\" disks include Preboot, Recovery and VM. User disks are labelled \nwith \"(No specific role)\" by default.",
        "Rationale": "In order to protect user data from loss or tampering volumes, carrying data should be \nencrypted. \nImpact: \nWhile FileVault protects the boot volume, data may be copied to other attached storage \nand reduce the protection afforded by FileVault. Ensure all user volumes are encrypted \nto protect data.",
        "Audit": "Terminal Method: \nRun the following command to list the APFS Volumes: \n$ /usr/bin/sudo /usr/sbin/diskutil ap list \nEnsure all user data disks are encrypted. \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/diskutil ap list \n \nAPFS Volume Disk (Role):   disk1s1 (No specific role) \nName:                      Macintosh HD (Case-insensitive) \nMount Point:               / \nCapacity Consumed:         188514598912 B (188.5 GB) \nFileVault:                 Yes (Unlocked) \n \nAPFS Containers (2 found) \n| \n+-- Container disk1 XXXX \n|   ==================================================== \n|   APFS Container Reference:     disk1 \n|   Size (Capacity Ceiling):      249152200704 B (249.2 GB) \n|   Minimum Size:                 249152200704 B (249.2 GB) \n|   Capacity In Use By Volumes:   195635597312 B (195.6 GB) (78.5% used) \n|   Capacity Not Allocated:       53516603392 B (53.5 GB) (21.5% free) \n|   | \n|   +-< Physical Store disk0s4 XXXXXY \n|   |   ----------------------------------------------------------- \n|   |   APFS Physical Store Disk:   disk0s4 \n|   |   Size:                       249152200704 B (249.2 GB) \n|   | \n|   +-> Volume disk1s1 XXXXXZ \n|   |   --------------------------------------------------- \n|   |   APFS Volume Disk (Role):   disk1s1 (No specific role) \n|   |   Name:                      HighSierra (Case-insensitive) \n|   |   Mount Point:               / \n|   |   Capacity Consumed:         188514598912 B (188.5 GB) \n|   |   FileVault:                 Yes (Unlocked) \n|   | \n|   +-> Volume disk1s2 XXXXXZZ \n|   |   --------------------------------------------------- \n|   |   APFS Volume Disk (Role):   disk1s2 (Preboot) \n|   |   Name:                      Preboot (Case-insensitive) \n|   |   Mount Point:               Not Mounted \n|   |   Capacity Consumed:         23961600 B (24.0 MB) \n|   |   FileVault:                 No \n|   | \n|   +-> Volume disk1s3 XXXXXYY \n|   |   --------------------------------------------------- \n|   |   APFS Volume Disk (Role):   disk1s3 (Recovery) \n|   |   Name:                      Recovery (Case-insensitive) \n|   |   Mount Point:               Not Mounted \n|   |   Capacity Consumed:         518127616 B (518.1 MB) \n|   |   FileVault:                 No \n|   | \n|   +-> Volume disk1s4 XXXXXYYY \n|       --------------------------------------------------- \n|       APFS Volume Disk (Role):   disk1s4 (VM) \n|       Name:                      VM (Case-insensitive) \n|       Mount Point:               /private/var/vm \n|       Capacity Consumed:         6442704896 B (6.4 GB) \n|       FileVault:                 No \n| \n+-- Container disk4 XXXXXYYYY \n    ==================================================== \n \nInternal Only - General \n    APFS Container Reference:     disk4 \n    Size (Capacity Ceiling):      119824367616 B (119.8 GB) \n    Minimum Size:                 143192064 B (143.2 MB) \n    Capacity In Use By Volumes:   126492672 B (126.5 MB) (0.1% used) \n    Capacity Not Allocated:       119697874944 B (119.7 GB) (99.9% free) \n    | \n    +-< Physical Store disk3s2 XXXXXYYYYYY \n    |   ----------------------------------------------------------- \n    |   APFS Physical Store Disk:   disk3s2 \n    |   Size:                       119824371200 B (119.8 GB) \n    | \n    +-> Volume disk4s1 C4D99580-1FDA-43BF-BB62-B21BF7EE568C \n        --------------------------------------------------- \n        APFS Volume Disk (Role):   disk4s1 (No specific role) \n        Name:                      Passport (Case-insensitive) \n        Mount Point:               /Volumes/Passport \n        Capacity Consumed:         839680 B (839.7 KB) \n        FileVault:                 Yes (Unlocked)",
        "Remediation": "Use Disk Utility to erase a user disk and format as APFS (Encrypted). \nNote: APFS Encrypted disks will be described as \"FileVault\" whether they are the boot \nvolume or not in the ap list.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.6 Encrypt Data on End-User Devices \n \nEncrypt data on end-user devices containing sensitive data. Example \nimplementations can include: Windows BitLocker\u00ae, Apple FileVault\u00ae, Linux\u00ae dm-\ncrypt. \n\u25cf \n\u25cf \n\u25cf \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv7 \n13.6 Encrypt the Hard Drive of All Mobile Devices. \n \nUtilize approved whole disk encryption software to encrypt the hard drive of all \nmobile devices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.8 Encrypt Sensitive Information at Rest \n \nEncrypt all sensitive information at rest using a tool that requires a secondary \nauthentication mechanism not integrated into the operating system, in order to \naccess the information. \n \n \n\u25cf"
    },
    {
        "Title": "5.3.2 Ensure all user storage CoreStorage volumes are encrypted (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple introduced CoreStorage with 10.7. It is used as the default for formatting on \nmacOS volumes prior to 10.13. \nAll HFS and CoreStorage Volumes should be encrypted.",
        "Rationale": "In order to protect user data from loss or tampering, volumes carrying data should be \nencrypted. \nImpact: \nWhile FileVault protects the boot volume, data may be copied to other attached storage \nand reduce the protection afforded by FileVault. Ensure all user volumes are encrypted \nto protect data.",
        "Audit": "Terminal Method: \nRun the following command to list the CoreStorage Volumes: \n$ /usr/bin/sudo /usr/sbin/diskutil cs list \nEnsure all \"Logical Volume Family\" disks are encrypted \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/diskutil cs list \n \nCoreStorage logical volume groups (2 found) \n| \n+-- Logical Volume Group XXXXX \n|   ========================================================= \n|   Name:         Macintosh HD \n|   Status:       Online \n|   Size:         250160967680 B (250.2 GB) \n|   Free Space:   6516736 B (6.5 MB) \n|   | \n|   +-< Physical Volume XXXXXY \n|   |   ---------------------------------------------------- \n|   |   Index:    0 \n|   |   Disk:     disk0s2 \n|   |   Status:   Online \n|   |   Size:     250160967680 B (250.2 GB) \n|   | \n|   +-> Logical Volume Family XXXXXYY \n|       ---------------------------------------------------------- \n|       Encryption Type:         AES-XTS \n|       Encryption Status:       Unlocked \n|       Conversion Status:       Complete \n|       High Level Queries:      Fully Secure \n|       |                        Passphrase Required \n|       |                        Accepts New Users \n|       |                        Has Visible Users \n|       |                        Has Volume Key \n|       | \n|       +-> Logical Volume XXXXXYYY \n|           --------------------------------------------------- \n|           Disk:                  disk2 \n|           Status:                Online \n|           Size (Total):          249802129408 B (249.8 GB) \n|           Revertible:            Yes (unlock and decryption required) \n|           LV Name:               Macintosh HD \n|           Volume Name:           Macintosh HD \n|           Content Hint:          Apple_HFS \n| \n+-- Logical Volume Group XXXXXYYYY \n    ========================================================= \n    Name:         Passport \n    Status:       Online \n    Size:         119690149888 B (119.7 GB) \n    Free Space:   1486848 B (1.5 MB) \n    | \n    +-< Physical Volume XXXXXYYY \n    |   ---------------------------------------------------- \n    |   Index:    0 \n    |   Disk:     disk3s2 \n    |   Status:   Online \n    |   Size:     119690149888 B (119.7 GB) \n    | \n    +-> Logical Volume Family XXXXXYYYYY \n        ---------------------------------------------------------- \n        Encryption Type:         AES-XTS \n        Encryption Status:       Unlocked \n \nInternal Only - General \n        Conversion Status:       Complete \n        High Level Queries:      Fully Secure \n        |                        Passphrase Required \n        |                        Accepts New Users \n        |                        Has Visible Users \n        |                        Has Volume Key \n        | \n        +-> Logical Volume XXXXXYYYYYY \n            --------------------------------------------------- \n            Disk:                  disk4 \n            Status:                Online \n            Size (Total):          119336337408 B (119.3 GB) \n            Revertible:            No \n            LV Name:               Passport \n            Volume Name:           Passport \n            Content Hint:          Apple_HFS",
        "Remediation": "Use Disk Utility to erase a disk and format as macOS Extended (Journaled, Encrypted).",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n3.9 Encrypt Data on Removable Media \n \nEncrypt data on removable media. \n \n\u25cf \n\u25cf \nv8 \n3.11 Encrypt Sensitive Data at Rest \n \nEncrypt sensitive data at rest on servers, applications, and databases containing \nsensitive data. Storage-layer encryption, also known as server-side encryption, \nmeets the minimum requirement of this Safeguard. Additional encryption methods \nmay include application-layer encryption, also known as client-side encryption, \nwhere access to the data storage device(s) does not permit access to the plain-text \ndata.  \n \n\u25cf \n\u25cf \nv7 \n13.6 Encrypt the Hard Drive of All Mobile Devices. \n \nUtilize approved whole disk encryption software to encrypt the hard drive of all \nmobile devices. \n\u25cf \n\u25cf \n\u25cf \nv7 \n14.8 Encrypt Sensitive Information at Rest \n \nEncrypt all sensitive information at rest using a tool that requires a secondary \nauthentication mechanism not integrated into the operating system, in order to \naccess the information. \n \n \n\u25cf"
    },
    {
        "Title": "5.4 Ensure the Sudo Timeout Period Is Set to Zero (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The sudo command allows the user to run programs as the root user. Working as the \nroot user allows the user an extremely high level of configurability within the system. \nThis control, along with the control to use a separate timestamp for each tty, limits the \nwindow where an unauthorized user, process, or attacker could utilize legitimate \ncredentials that are valid for longer than required.",
        "Rationale": "The sudo command stays logged in as the root user for five minutes before timing out \nand re-requesting a password. This five-minute window should be eliminated since it \nleaves the system extremely vulnerable. This is especially true if an exploit were to gain \naccess to the system, since they would be able to make changes as a root user. \nImpact: \nThis control has a serious impact where users often have to use sudo. It is even more of \nan impact where users have to use sudo multiple times in quick succession as part of \nnormal work processes. Organizations with that common use case will likely find this \ncontrol too onerous and are better to accept the risk of not requiring a 0 grace period. \nIn some ways the use of sudo -s, which is undesirable, is better than a long grace \nperiod since that use does change the hash to show that it is a root shell rather than a \nnormal shell where sudo commands will be implemented without a password.",
        "Audit": "Terminal Method: \nPerform the following to verify the sudo timeout period: \n$ /usr/bin/sudo /usr/bin/sudo -V | /usr/bin/grep -c \"Authentication timestamp \ntimeout: 0.0 minutes\" \n \n1 \nRun the following commands to verify that the root is the owner of the /etc/sudoers.d \nfolder, and that wheel is the group \n \nInternal Only - General \n$ /usr/bin/stat /etc/sudoers.d \n \n16777229 19662948 drwxr-xr-x 2 root wheel 0 64 \"Jun  7 23:12:24 2022\" \"May  9 \n17:30:48 2022\" \"Jun  7 23:12:24 2022\" \"May  9 17:30:48 2022\" 4096 0 0 \n/etc/sudoers.d",
        "Remediation": "Terminal Method: \nRun the following command to edit the sudo settings: \n$ /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/<configuration file name> \nexample: $ /usr/bin/sudo /usr/sbin/visudo -f \n/etc/sudoers.d/10_cissudoconfiguration \nNote: Unlike other Unix and/or Linux distros, macOS will ignore configuration files in the \nsudoers.d folder that contain a . so do not add a file extension to the configuration file. \nAdd the line Defaults timestamp_timeout=0 to the configuration file. \nIf /etc/sudoers.d/ is not owned by root or in the wheel group, run the following to change \nownership and group: \n$ /usr/bin/sudo /usr/sbin/chown -R root:wheel /etc/sudoers.d/ \nAdditional Information: \nIn previous iterations and OS versions of the macOS Benchmark, the guidance was to \nedit the sudoers file directly. While this would properly configure the OS, any update \nwould change the settings back to the default configuration. Creating a configuration file \nin the /etc/sudoers.d/ folder will not be modified on an OS update and will keep the \nproper configuration.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.3 Configure Automatic Session Locking on Enterprise \nAssets \n \nConfigure automatic session locking on enterprise assets after a defined period \nof inactivity. For general purpose operating systems, the period must not exceed \n15 minutes. For mobile end-user devices, the period must not exceed 2 minutes. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.5 Ensure a Separate Timestamp Is Enabled for Each User/tty Combo (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Using tty tickets ensures that a user must enter the sudo password in each Terminal \nsession. \nWith sudo versions 1.8 and higher, introduced in 10.12, the default value is to have tty \ntickets for each interface so that root access is limited to a specific terminal. The default \nconfiguration can be overwritten or not configured correctly on earlier versions of \nmacOS.",
        "Rationale": "In combination with removing the sudo timeout grace period, a further mitigation should \nbe in place to reduce the possibility of a background process using elevated rights when \na user elevates to root in an explicit context or tty. \nAdditional mitigation should be in place to reduce the risk of privilege escalation of \nbackground processes. \nImpact: \nThis control should have no user impact. Developers or installers may have issues if \nbackground processes are spawned with different interfaces than where sudo was \nexecuted.",
        "Audit": "Terminal Method: \nRun the following commands to verify that the default sudoers controls are in place with \nexplicit tickets per tty: \n$ /usr/bin/sudo /usr/bin/sudo -V | /usr/bin/grep -c \"Type of authentication \ntimestamp record: tty\" \n \n1",
        "Remediation": "Terminal Method: \nRun the following command to edit the sudo settings: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/<configuration file name> \nexample: $ /usr/bin/sudo /usr/sbin/visudo -f \n/etc/sudoers.d/10_cissudoconfiguration \nNote: Unlike other Unix and/or Linux distros, macOS will ignore configuration files in the \nsudoers.d folder that contain a . so do not add a file extension to the configuration file. \nAdd the line Defaults timestamp_type=tty to the configuration file. \nNote: The Defaults timestamp_type=tty line can be added to an existing \nconfiguration file or a new one. That will depend on your organization's preference and \nworks either way. \nDefault Value: \nIf no value is set, the default value of tty_tickets enabled will be used.",
        "References": "1. https://github.com/jorangreef/sudo-prompt/issues/33 \nAdditional Information: \nIn previous iterations and OS versions of the macOS Benchmark, the guidance was to \nedit the sudoers file directly. While this would properly configure the OS, any update \nwould change the settings back to the default configuration. Creating a configuration file \nin the /etc/sudoers.d/ folder will not be modified on an OS update and will keep the \nproper configuration. \nWith the configuration file, there is no need to remove the Defaults !tty_tickets \nline from the visudo settings. The configuration file will take precedent.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.3 Configure Automatic Session Locking on Enterprise \nAssets \n \nConfigure automatic session locking on enterprise assets after a defined period \nof inactivity. For general purpose operating systems, the period must not exceed \n15 minutes. For mobile end-user devices, the period must not exceed 2 minutes. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.6 Ensure the \"root\" Account Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The root account is a superuser account that has access privileges to perform any \nactions and read/write to any file on the computer. With some versions of Linux, the \nsystem administrator may commonly use the root account to perform administrative \nfunctions.",
        "Rationale": "Enabling and using the root account puts the system at risk since any successful exploit \nor mistake while the root account is in use could have unlimited access privileges within \nthe system. Using the sudo command allows users to perform functions as a root user \nwhile limiting and password protecting the access privileges. By default the root account \nis not enabled on a macOS computer. An administrator can escalate privileges using \nthe sudo command (use -s or -i to get a root shell). \nImpact: \nSome legacy POSIX software might expect an available root account.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that the root user is not enabled: \n1. Open /System/Library/CoreServices/Applications/Directory Utility \n2. Click the lock icon to unlock the service \n3. Click Edit in the menu bar \n4. Verify that the menu shows Enable Root User, not Disable Root User \nTerminal Method: \nRun the following command to verify the the root user has not been enabled: \n$ /usr/bin/sudo /usr/bin/dscl . -read /Users/root AuthenticationAuthority \n \n \nNo such key: AuthenticationAuthority   \nRun the following command to verify the root shell is disabled: \n \nInternal Only - General \n%  /usr/bin/dscl . -read /Users/root UserShell 2>&1 | /usr/bin/grep -c \n\"/usr/bin/false\" \n \n1",
        "Remediation": "Graphical Method: \nPerform the following steps to ensure that the root user is disabled: \n1. Open /System/Library/CoreServices/Applications/Directory Utility \n2. Click the lock icon to unlock the service \n3. Click Edit in the menu bar \n4. Click Disable Root User \nTerminal Method: \nRun the following command to disable the root user: \n$ /usr/bin/sudo /usr/sbin/dsenableroot -d \n \nusername = root \nuser password: \nRun the following command to disable the root user shell: \n% /usr/bin/dscl . -create /Users/root UserShell /usr/bin/false",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n5.4 Restrict Administrator Privileges to Dedicated \nAdministrator Accounts \n \nRestrict administrator privileges to dedicated administrator accounts on \nenterprise assets. Conduct general computing activities, such as internet \nbrowsing, email, and productivity suite use, from the user\u2019s primary, non-privileged \naccount. \n\u25cf \n\u25cf \n\u25cf \nv7 \n4.3 Ensure the Use of Dedicated Administrative Accounts \n \nEnsure that all users with administrative account access use a dedicated or \nsecondary account for elevated activities. This account should only be used for \nadministrative activities and not internet browsing, email, or similar activities. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.7 Ensure an Administrator Account Cannot Login to Another User's Active and Locked Session (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "macOS has a privilege that can be granted to any user that will allow that user to unlock \nactive users' sessions.",
        "Rationale": "Disabling the administrator's and/or user's ability to log into another user's active and \nlocked session prevents unauthorized persons from viewing potentially sensitive and/or \npersonal information. \nImpact: \nWhile Fast user switching is a workaround for some lab environments, especially where \nthere is even less of an expectation of privacy, this setting change may impact some \nmaintenance workflows.",
        "Audit": "Terminal Method: \nRun the following command to verify that a user cannot log into another user's active \nand/or locked session: \n$ /usr/bin/sudo /usr/bin/security authorizationdb read \nsystem.login.screensaver 2>&1 | /usr/bin/grep -c 'authenticate-session-owner'  \n \n1",
        "Remediation": "Terminal Method: \nRun the following command to disable a user logging into another user's active and/or \nlocked session: \n$ /usr/bin/sudo /usr/bin/security authorizationdb write \nsystem.login.screensaver authenticate-session-owner \n \nYES (0) \nRunning this command will disable Touch ID to unlock the screen saver. To re-enable \nTouch ID for users, run the following command: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/bin/defaults write \n/Library/Preferences/com.apple.loginwindow screenUnlockMode -int 1",
        "References": "1. https://derflounder.wordpress.com/2014/02/16/managing-the-authorization-\ndatabase-in-os-x-mavericks/ \n2. https://www.jamf.com/jamf-nation/discussions/18195/system-login-screensaver",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.3 Configure Automatic Session Locking on Enterprise \nAssets \n \nConfigure automatic session locking on enterprise assets after a defined period \nof inactivity. For general purpose operating systems, the period must not exceed \n15 minutes. For mobile end-user devices, the period must not exceed 2 minutes. \n\u25cf \n\u25cf \n\u25cf \nv7 \n16.11 Lock Workstation Sessions After Inactivity \n \nAutomatically lock workstation sessions after a standard period of inactivity. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.8 Ensure a Login Window Banner Exists (Automated)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "A Login window banner warning informs the user that the system is reserved for \nauthorized use only. It enforces an acknowledgment by the user that they have been \ninformed of the use policy in the banner if required. The system recognizes either the \n.txt and the .rtf formats.",
        "Rationale": "An access warning may reduce a casual attacker's tendency to target the system. \nAccess warnings may also aid in the prosecution of an attacker by evincing the \nattacker's knowledge of the system's private status, acceptable use policy, and \nauthorization requirements. \nImpact: \nUsers will have to click on the window with the Login text before logging into the \ncomputer.",
        "Audit": "Terminal Method: \nRun the following command to verify the login window text: \n$ /usr/bin/sudo /bin/cat /Library/Security/PolicyBanner.* \nIf the output includes no matches found: /Library/Security/PolicyBanner.* the \nsystem is not compliant. \nRun the following to verify permissions of the policy banner file: \n$ /usr/bin/stat -f %A /Library/Security/PolicyBanner.*  \nThe output should have 4 as the 3rd digit. \nIf there is an output, then the policy banner will not display. \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo /bin/cat /Library/Security/PolicyBanner.txt \n \nCenter for Internet Security Test Message \n \n$ /usr/bin/sudo /bin/cat /Library/Security/PolicyBanner.rtf \n \n{\\rtf1\\ansi\\ansicpg1252\\cocoartf1561\\cocoasubrtf610 \n{\\fonttbl\\f0\\fswiss\\fcharset0 Helvetica;} \n{\\colortbl;\\red255\\green255\\blue255;} \n{\\*\\expandedcolortbl;;} \n\\margl1440\\margr1440\\vieww10800\\viewh8400\\viewkind0 \n\\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx\n6236\\tx6803\\pardirnatural\\partightenfactor0 \n \n\\f0\\fs24 \\cf0 Center for Internet Security Test Message} \n \n$ /usr/bin/sudo /bin/cat /Library/Security/PolicyBanner.* \n \n{\\rtf1\\ansi\\ansicpg1252\\cocoartf1561\\cocoasubrtf610 \n{\\fonttbl\\f0\\fswiss\\fcharset0 Helvetica;} \n{\\colortbl;\\red255\\green255\\blue255;} \n{\\*\\expandedcolortbl;;} \n\\margl1440\\margr1440\\vieww10800\\viewh8400\\viewkind0 \n\\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx\n6236\\tx6803\\pardirnatural\\partightenfactor0 \n \n\\f0\\fs24 \\cf0 Center for Internet Security Test Message}Center for Internet \nSecurity Test Message \n \n$ /usr/bin/sudo stat -f %A /Library/Security/PolicyBanner.*    \n \n644",
        "Remediation": "Terminal Method: \nRun the following commands to create or edit the login window text and set the proper \npermissions: \nEdit (or create) a PolicyBanner.txt or PolicyBanner.rtf file, in the \n/Library/Security/ folder, to include the required login window banner text. \nPerform the following to set permissions on the policy banner file: \n$ /usr/bin/sudo /bin/chmod o+r /Library/Security/PolicyBanner.txt \n \n$ /usr/bin/sudo /bin/chmod o+r /Library/Security/PolicyBanner.rtf  \nNote: If your organization uses an .rtfd file to set the policy banner, run $ \n/usr/bin/sudo /bin/chmod o+rx /Library/Security/PolicyBanner.rtfd to \nupdate the permissions.",
        "References": "1. https://support.apple.com/en-au/HT202277 \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \n \n \nInternal Only - General \n5.9 Ensure the Guest Home Folder Does Not Exist (Automated) \nProfile Applicability: \n\u2022  Level 1 \nDescription: \nIn the previous two controls, the guest account login has been disabled and sharing to \nguests has been disabled, as well. There is no need for the legacy Guest home folder to \nremain in the file system. When normal user accounts are removed, you have the option \nto archive it, leave it in place, or delete. In the case of the guest folder, the folder \nremains in place without a GUI option to remove it. If at some point in the future a Guest \naccount is needed, it will be re-created. The presence of the Guest home folder can \ncause automated audits to fail when looking for compliant settings within all User \nfolders, as well. Rather than ignoring the folder's continued existence, it is best \nremoved. \nRationale: \nThe Guest home folders are unneeded after the Guest account is disabled and could be \nused inappropriately. \nImpact: \nThe Guest account should not be necessary after it is disabled, and it will be \nautomatically re-created if the Guest account is re-enabled \nAudit: \nTerminal Method: \nRun the following command to verify if the Guest user home folder exists: \n$ /usr/bin/sudo /bin/ls /Users/ | /usr/bin/grep Guest  \nRemediation: \nTerminal Method: \nRun the following command to remove the Guest user home folder: \n \nInternal Only - General \n$ /usr/bin/sudo /bin/rm -R /Users/Guest  \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.1 Establish and Maintain a Secure Configuration Process \n \nEstablish and maintain a secure configuration process for enterprise assets \n(end-user devices, including portable and mobile, non-computing/IoT devices, and \nservers) and software (operating systems and applications). Review and update \ndocumentation annually, or when significant enterprise changes occur that could \nimpact this Safeguard. \n\u25cf \n\u25cf \n\u25cf \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "5.10 Ensure XProtect Is Running and Updated (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "XProtect is Apple's native signature-based antivirus technology. XProtect both finds and \nblocks the execution of known malware. There are many AV and Endpoint Threat \nDetection and Response (ETDR) tools available for Mac OS. The native Apple \nprovisioned tool looks for specific known malware is completely integrated into the OS. \nNo matter what other tools are being used XProtect should have the latest signatures \navailable.",
        "Rationale": "Apple creates signatures for known malware that actually affects Macs and that \nknowledge should be leveraged. \nImpact: \nSome organizations may have effective Mac OS anti-malware tools that XProtect \nconflicts with.",
        "Audit": "Terminal Method: \nRun the following command to verify that XProtect is running and up-to-date: \n$ /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -cE \n\"(com.apple.XprotectFramework.PluginService$|com.apple.XProtect.daemon.scan$)\n\" \n2 \nNote: XProtect can only be disabled while SIP (System Integrity Protection) is disabled. \nIf XProtect is disabled while SIP is enabled, there needs to be a more significant \ninvestigation on this system and assume it is compromised in some way. \nTo verify the updates to XProtect, run the following command: \n$ /usr/bin/sudo /usr/sbin/system_profiler SPInstallHistoryDataType | grep -A \n5 \"XProtectPlistConfigData\"",
        "Remediation": "Terminal Method: \nRun the following command to enable and update XProtect: \n \nInternal Only - General \n$ /usr/bin/sudo /bin/launchctl load -w \n/Library/Apple/System/Library/LaunchDaemons/com.apple.XProtect.daemon.scan.pl\nist \n \n$ /usr/bin/sudo /bin/launchctl load -w \n/Library/Apple/System/Library/LaunchDaemons/com.apple.XprotectFramework.Plugi\nnService.plist \n \n$ /usr/bin/sudo /usr/sbin/softwareupdate -l --background-critical \n \nsoftwareupdate[97180]: Triggering a background check with forced scan \n(critical and config-data updates only) ... \nNote: Xprotect can only be enabled/disabled if SIP (System Integrity Protection) is \ndisabled. If Xprotect is disabled, the system might be compromised and needs to be \ninvestigated.",
        "References": "1. https://eclecticlight.co/2021/10/27/silently-updated-security-data-files-in-\nmonterey/ \n2. https://eclecticlight.co/2020/12/14/silently-updated-security-data-files-in-big-sur/ \n3. https://eclecticlight.co/2019/10/17/security-data-files-how-theyve-changed-in-\ncatalina/ \n4. https://eclecticlight.co/2022/05/12/apple-has-pushed-an-update-to-xprotect-21/ \n5. https://support.apple.com/guide/security/protecting-against-malware-\nsec469d47bd8/web \n6. https://eclecticlight.co/2023/06/12/malware-detection-and-remediation-by-\nxprotect-remediator/ \nAdditional Information: \nTo verify the XProtect Remediator logs run the following command: \n$ /usr/bin/sudo /usr/bin/log show --predicate 'subsystem == \n\"com.apple.XProtectFramework.PluginAPI\" AND category == \n\"XPEvent.structured\"' --info --last 1d' to check logs' \nTo verify that XProtect is running the latest updates, run the following command: \n \nInternal Only - General \n$ xProtectURL=$(/usr/bin/sudo /usr/bin/curl -s \nhttps://swscan.apple.com/content/catalogs/others/index-14-13-12-10.16-10.15-\n10.14-10.13-10.12-10.11-10.10-10.9-mountainlion-lion-snowleopard-\nleopard.merged-1.sucatalog | /usr/bin/grep -m 1 -o \n'https.*XProtectPlistConfigData.*pkm') \nxProtectLatestVersion=$((/usr/bin/sudo /usr/bin/curl -s ${xProtectURL} | \n/usr/bin/grep -o 'CFBundleShortVersionString[^ ]*' | /usr/bin/cut -d '\"' -f \n2) \nxProtectInstalledVersion=$(/usr/bin/defaults read \n/Library/Apple/System/Library/CoreServices/XProtect.bundle/Contents/Info.plis\nt CFBundleShortVersionString) \n \nif [[ $xProtectLatestVersion == $xProtectInstalledVersion ]]; then \n  echo \"Pass\" \nelse \n  echo \"Fail\" \nfi",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n10.1 Deploy and Maintain Anti-Malware Software \n \nDeploy and maintain anti-malware software on all enterprise assets. \n\u25cf \n\u25cf \n\u25cf \nv8 \n10.2 Configure Automatic Anti-Malware Signature \nUpdates \n \nConfigure automatic updates for anti-malware signature files on all enterprise \nassets. \n\u25cf \n\u25cf \n\u25cf \nv8 \n10.5 Enable Anti-Exploitation Features \n \nEnable anti-exploitation features on enterprise assets and software, where \npossible, such as Microsoft\u00ae Data Execution Prevention (DEP), Windows\u00ae \nDefender Exploit Guard (WDEG), or Apple\u00ae System Integrity Protection (SIP) and \nGatekeeper\u2122. \n \n\u25cf \n\u25cf \nv7 \n8.2 Ensure Anti-Malware Software and Signatures are \nUpdated \n \nEnsure that the organization's anti-malware software updates its scanning \nengine and signature database on a regular basis. \n\u25cf \n\u25cf \n\u25cf \nv7 \n8.4 Configure Anti-Malware Scanning of Removable \nDevices \n \nConfigure devices so that they automatically conduct an anti-malware scan of \nremovable media when inserted or connected. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "6 Applications"
    },
    {
        "Title": "6.1 Finder"
    },
    {
        "Title": "6.1.1 Ensure Show All Filename Extensions Setting is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "A filename extension is a suffix added to a base filename that indicates the base \nfilename's file format.",
        "Rationale": "Visible filename extensions allow the user to identify the file type and the application it is \nassociated with which leads to quick identification of misrepresented malicious files. \nImpact: \nThe user of the system can open files of unknown or unexpected filetypes if the \nextension is not visible.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that file extensions are shown: \n1. Open Finder \n2. Select Finder in the menu bar \n3. Select Settings \n4. Select Advanced \n5. Verify that Show all filename extensions is set \nTerminal Method: \nRun the following command to verify that displaying of file extensions is enabled: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Preferences/.GlobalPreferences.plist \nAppleShowAllExtensions \n \n1 \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Preferences/.GlobalPreferences.plist \nAppleShowAllExtensions \n \n1 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read \n/Users/secondname/Library/Preferences/.GlobalPreferences.plist \nAppleShowAllExtensions \n \nThe domain/default pair of \n(/Users/secondname/Library/Preferences/.GlobalPreferences.plist, \nAppleShowAllExtensions) does not exist \nIn this example, firstuser is in compliance and seconduser is not.",
        "Remediation": "Graphical Method: \nPerform the following steps to ensure file extensions are shown: \n1. Open Finder \n2. Select Finder in the menu bar \n3. Select Settings \n4. Select Advanced \n5. Set Show all filename extensions to enabled \nTerminal Method: \nRun the following command to enable displaying of file extensions: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Preferences/.GlobalPreferences.plist \nAppleShowAllExtensions -bool true \n \n$ /usr/bin/sudo killall Finder \nexample: \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write \n/Users/secondname/Library/Preferences/.GlobalPreferences.plist \nAppleShowAllExtensions -bool true \n \n$ /usr/bin/sudo killall Finder \nDefault Value: \nFilename extensions are turned off by default.",
        "References": "1. https://blog.xpnsec.com/macos-filename-homoglyphs-revisited/ \n2. https://null-byte.wonderhowto.com/how-to/hacking-macos-create-fake-pdf-trojan-\nwith-applescript-part-2-disguising-script-0184706/ \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n2.3 Address Unauthorized Software \n \nEnsure that unauthorized software is either removed from use on enterprise \nassets or receives a documented exception. Review monthly, or more \nfrequently. \n\u25cf \n\u25cf \n\u25cf \nv7 \n2.6 Address unapproved software \n \nEnsure that unauthorized software is either removed or the inventory is \nupdated in a timely manner \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.2 Mail",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Apple provides privacy protection that should be enabled for the mail app on macOS to \nreduce information collection from a user that receives email.",
        "Rationale": "Email is routinely abused by attackers, spammers and marketers. The \"Protect Mail \nActivity\" control reduces risk by hiding the current IP address of your Mac and privately \ndownloading remote content. \nThe Protect Mail Activity function of privately downloading remote content is not \napplicable for those users that do not download any remote content. Typical Internet \nemail is no longer plain text and will not render properly without remote content. \nPersonal email or mailing list email may function without complaint by blocking remote \ncontent. \nImpact: \nSome remote content may be access-controlled and refuse to download with this setting \nenabled.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that protect mail activity is enabled: \n1. Open Mail \n2. Select Mail in the menu bar \n3. Select Settings... \n4. Select Privacy \n5. Verify that Protect Mail Activity is enabled",
        "Remediation": "Graphical Method: \nPerform the following steps to enabled protect mail activity: \n1. Open Mail \n2. Select Mail in the menu bar \n3. Select Settings... \n4. Select Privacy \n5. Set Protect Mail Activity to enabled \n \nInternal Only - General",
        "References": "1. https://support.apple.com/guide/mail/use-mail-privacy-protection-\nmlhl03be2866/mac",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute in \nthe enterprise, only using the latest version of browsers and email clients provided \nthrough the vendor. \n\u25cf \n\u25cf \n\u25cf \nv8 \n9.3 Maintain and Enforce Network-Based URL Filters \n \nEnforce and update network-based URL filters to limit an enterprise asset from \nconnecting to potentially malicious or unapproved websites. Example \nimplementations include category-based filtering, reputation-based filtering, or \nthrough the use of block lists. Enforce filters for all enterprise assets. \n \n\u25cf \n\u25cf \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.4 Maintain and Enforce Network-Based URL Filters \n \nEnforce network-based URL filters that limit a system's ability to connect to \nwebsites not approved by the organization. This filtering shall be enforced for each \nof the organization's systems, whether they are physically at an organization's \nfacilities or not. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.3 Safari"
    },
    {
        "Title": "6.3.1 Ensure Automatic Opening of Safe Files in Safari Is Disabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Safari will automatically run or execute what it considers safe files. This can include \ninstallers and other files that execute on the operating system. Safari evaluates file \nsafety by using a list of filetypes maintained by Apple. The list of files include text, \nimage, video and archive formats that would be run in the context of the OS rather than \nthe browser.",
        "Rationale": "Hackers have taken advantage of this setting via drive-by attacks. These attacks occur \nwhen a user visits a legitimate website that has been corrupted. The user unknowingly \ndownloads a malicious file either by closing an infected pop-up or hovering over a \nmalicious banner. An attacker can create a malicious file that will fall within Safari's safe \nfile list that will download and execute without user input. \nImpact: \nApple considers many files that the operating system itself auto-executes as \"safe files.\" \nMany of these files could be malicious and could execute locally without the user even \nknowing that a file of a specific type had been downloaded.",
        "Audit": "Graphical Method: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has AutoOpenSafeDownloads set 0 \nTerminal Method: \nRun the following command to verify that a profile is installed that disables safe files \nfrom opening in Safari: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep AutoOpenSafeDownloads | /usr/bin/tr -d ' '             \n \nAutoOpenSafeDownloads = 0; \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.Safari \n2. The key to include is AutoOpenSafeDownloads \n3. The key must be set to: <false/> \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following to verify that safe files are not opened when download in Safari: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select General  \n5. Verify that Open \"safe\" files after downloading is disabled \nor \n1. Open System Settings  \n2. Select `Privacy & Security \n3. Select Profiles  \n4. Verify that an installed profile has AutoOpenSafeDownloads set 0  \nTerminal Method: \nRun the following command to verify that opening safe files after download in Safari is \ndisabled: \n \nInternal Only - General \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari AutoOpenSafeDownloads \n \n0 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari AutoOpenSafeDownloads \n \n0 \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences. \nRemediation \nGraphical Method: \nPerform the following steps to set safe files to not open after downloading in Safari: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select General  \n5. Set Open \"safe\" files after downloading to disabled \nTerminal Method: \nRun the following command to disable safe files from not opening when downloaded in \nSafari: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari AutoOpenSafeDownloads -bool false \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari AutoOpenSafeDownloads -bool false \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences. \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute \nin the enterprise, only using the latest version of browsers and email clients \nprovided through the vendor. \n\u25cf \n\u25cf \n\u25cf \nv8 \n9.6 Block Unnecessary File Types \n \nBlock unnecessary file types attempting to enter the enterprise\u2019s email \ngateway. \n \n\u25cf \n\u25cf \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.9 Block Unnecessary File Types \n \nBlock all e-mail attachments entering the organization's e-mail gateway if the \nfile types are unnecessary for the organization's business. \n \n\u25cf \n\u25cf \nv7 \n8.5 Configure Devices Not To Auto-run Content \n \nConfigure devices to not auto-run content from removable media. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.3.2 Audit History and Remove History Items (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Organizational management of user web browsing history is a challenge affected by \nmultiple facets. Organizations should decide whether to manage browser history and \nhow much history should be maintained.",
        "Rationale": "There are conflicting concerns in the retention of browser history. Unlimited retention: \n\u2022 \nConsumes disk space \n\u2022 \nIs preferred by on-disk forensics teams \n\u2022 \nIs user searchable for old visited pages \n\u2022 \nRaises some user privacy concerns \n\u2022 \nHas security concerns regarding retaining old links that may be stale or lead to \ncompromised pages, or pages with changes or inappropriate content \nOld browser history becomes stale and the use or misuse of the data can lead to \nunwanted outcomes. Search engine results are maintained and often provide much \nmore relevant current information than old website visit information. \nImpact: \nIf old browsing history is not available, it will not be available to authorized or \nunauthorized users. Some users may find old and even stale information useful.",
        "Audit": "Graphical Method: \nPerform the following steps to verify how long the history in Safari is kept: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has HistoryAgeInDaysLimit set to your \norganization's requirements \nTerminal Method: \nRun the following command to verify that a profile is installed that sets how long the \nhistory is kept in Safari: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep HistoryAgeInDaysLimit | /usr/bin/tr -d ' ' \nThe output will be HistoryAgeInDaysLimit = followed by your organizations \nrequirements.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.Safari \n2. The key to include is HistoryAgeInDaysLimit \n3. The key must be set to: <integer><1,7,14,31,365,36500></integer> \nNote: Setting the plist key to a value that is not represented by the GUI could cause \nissues. \nNote: Since the profile method sets a system-wide setting and not a user-level one, the \nprofile method is the preferred method. It is always better to set system-wide than per \nuser. \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify how long the history in Safari is kept: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select General  \n5. Verify that Remove history items is set to your organization's requirements \nor \n1. Open System Preferences  \n2. Select General  \n3. Select Profiles  \n4. Verify that an installed profile has HistoryAgeInDaysLimit set to your \norganization's requirements \nTerminal Method: \nRun the following command to verify how long Safari keeps history: \n \nInternal Only - General \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari HistoryAgeInDaysLimit \nThe output will be: \n1 - After one day 7 - After one week 14 - After two weeks 31 - After one month 365 - \nAfter one year 36500 - Manually \nNote: Setting the plist key to a value that is not represented by the GUI could cause \nissues. \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari HistoryAgeInDaysLimit \n \n1 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read \n/Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari HistoryAgeInDaysLimit \n \n7 \n \n$ /usr/bin/sudo -u thirduser /usr/bin/defaults read \n/Users/thirduser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari HistoryAgeInDaysLimit \n \n14 \n \n$ /usr/bin/sudo -u fourthuser /usr/bin/defaults read \n/Users/fourthuser/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari HistoryAgeInDaysLimit \n \n31 \n \n$ /usr/bin/sudo -u fifthuser /usr/bin/defaults read \n/Users/fifthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari HistoryAgeInDaysLimit \n \n365 \n \n$ /usr/bin/sudo -u sixthuser /usr/bin/defaults read \n/Users/sixthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari HistoryAgeInDaysLimit \n \n36500 \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences. \nRemediation: \nGraphical Method: \n \nInternal Only - General \nPerform the following steps to set Safari to remove history after a set amount of days: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select General  \n5. Set Remove history items to your organization's requirements \nTerminal Method: \nRun the following command to set when Safari will remove history items: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari HistoryAgeInDaysLimit -int <1,7,14,31,365,36500> \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari HistoryAgeInDaysLimit -int 36500 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write \n/Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari HistoryAgeInDaysLimit -int 365 \n \n$ /usr/bin/sudo -u thirduser /usr/bin/defaults write \n/Users/thirduser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari HistoryAgeInDaysLimit -int 31 \n \n$ /usr/bin/sudo -u fourthuser /usr/bin/defaults write \n/Users/fourthuser/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari HistoryAgeInDaysLimit -int 14 \n \n$ /usr/bin/sudo -u fifthuser /usr/bin/defaults write \n/Users/fifthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari HistoryAgeInDaysLimit -int 7 \n \n$ /usr/bin/sudo -u sixthuser /usr/bin/defaults write \n/Users/sixthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari HistoryAgeInDaysLimit -int 1 \nNote: Setting the plist key to a value that is not represented by the GUI could cause \nissues. \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences. \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute \nin the enterprise, only using the latest version of browsers and email clients \nprovided through the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.3.3 Ensure Warn When Visiting A Fraudulent Website in Safari Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Apple uses the Google Safe Browsing API to check for fraudulent websites and report \nthem to the user attempting to visit one.",
        "Rationale": "Attackers use crafted web pages to social engineer users to load unwanted content. \nWarning users prior to loading the content enables better security. \nImpact: \nOnce-compromised websites serving malware could be sanitized and remain in the \ndatabase, though there is no widespread reporting of that risk.",
        "Audit": "Graphical Method: \nPerform the following to verify that warn when visiting a fraudulent site in Safari is \nenabled: \n1. Open System Preferences \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has WarnAboutFraudulentWebsites set to 1 \nTerminal Method: \nRun the following command to verify that a profile is installed that warns when visiting \nfraudulent sites in Safari: \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep WarnAboutFraudulentWebsites | /usr/bin/tr -d ' '               \n \nWarnAboutFraudulentWebsites = 1; \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n \nInternal Only - General \n1. The PayloadType string is com.apple.Safari \n2. The key to include is WarnAboutFraudulentWebsites \n3. The key must be set to: <true/> \nNote: Since the profile method sets a system-wide setting and not a user-level one, the \nprofile method is the preferred method. It is always better to set system-wide than per \nuser.",
        "References": "1. https://support.apple.com/guide/safari/security-ibrw1074/16.0/mac/12.0 \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following to verify that warn when visiting a fraudulent site in Safari is \nenabled: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select Security  \n5. Verify that Warn when visiting a fraudulent site is enabled \nor \n1. Open System Preferences  \n2. Select Privacy & Security  \n3. Select Profiles  \n4. Verify that an installed profile has WarnAboutFraudulentWebsites set to 1  \nTerminal Method: \nRun the following command to verify that warn when visiting a fraudulent site in Safari is \nnot disabled: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WarnAboutFraudulentWebsites \n \n1 \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WarnAboutFraudulentWebsites \n \n1 \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences. \nRemediation: \nGraphical Method: \nPerform the following steps to set Safari to warn when visiting a fraudulent site: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select Security  \n5. Set Warn when visiting a fraudulent site to enabled \nTerminal Method: \nRun the following command to enable warn when visiting a fraudulent site in Safari: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WarnAboutFraudulentWebsites -bool true \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WarnAboutFraudulentWebsites -bool true \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute in \nthe enterprise, only using the latest version of browsers and email clients provided \nthrough the vendor. \n\u25cf \n\u25cf \n\u25cf \nv8 \n9.3 Maintain and Enforce Network-Based URL Filters \n \nEnforce and update network-based URL filters to limit an enterprise asset from \nconnecting to potentially malicious or unapproved websites. Example \nimplementations include category-based filtering, reputation-based filtering, or \nthrough the use of block lists. Enforce filters for all enterprise assets. \n \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.4 Maintain and Enforce Network-Based URL Filters \n \nEnforce network-based URL filters that limit a system's ability to connect to \nwebsites not approved by the organization. This filtering shall be enforced for each \nof the organization's systems, whether they are physically at an organization's \nfacilities or not. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.3.4 Ensure Prevent Cross-site Tracking in Safari Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "There is a vast network of groups that collect, use, and sell user data. One method used \nto collect user data is pay and provide content and services for website owners. Along \nwith that \"assistance,\" the site owners also push tracking cookies on visitors. In many \ncases the help allows a content owner to keep the site up. The tracking cookies allow \ninformation brokers to track web users across visited sites. For better privacy and to \nprovide some resistance to data brokers, prevent cross-tracking.",
        "Rationale": "Cross-tracking allows data-brokers to follow you across the Internet to enable their \nbusiness model of selling personal data. Users should protect their data and not \nvolunteer it to marketing companies. \nImpact: \nMarketing companies will be unable to target you as effectively.",
        "Audit": "Graphical Method: \nPerform the following to verify that preventing cross-site tracking in Safari is enabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has BlockStoragePolicy set to 2 \n5. Verify that an installed profile also has \nWebKitPreferences.storageBlockingPolicy set to 1 \n6. Verify that an installed profile also has WebKitStorageBlockingPolicy set to 1 \nTerminal Method: \nRun the following command to verify that a profile is installed that prevents cross-site \ntracking in Safari: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep BlockStoragePolicy | /usr/bin/tr -d ' '  \n \nBlockStoragePolicy = 2; \n \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep WebKitPreferences.storageBlockingPolicy | /usr/bin/tr -d ' '  \n \nWebKitPreferences.storageBlockingPolicy = 1; \n \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep WebKitStorageBlockingPolicy | /usr/bin/tr -d ' '  \n \nWebKitStorageBlockingPolicy = 1; \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.Safari \n2. The key to include is BlockStoragePolicy \n3. The key must be set to: 2 \n4. The key to also include is WebKitPreferences.storageBlockingPolicy \n5. The key must be set to: 1 \n6. The key to also include is WebKitStorageBlockingPolicy \n7. The key must be set to: 1",
        "References": "1. https://support.apple.com/guide/safari/prevent-cross-site-tracking-sfri40732/mac \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following to verify that preventing cross-site tracking in Safari is enabled: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select Privacy  \n \nInternal Only - General \n5. Verify that Prevent cross-site tracking is enabled \nTerminal Method: \nRun the following command to verify that preventing cross-site tracking in Safari is not \ndisabled: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari BlockStoragePolicy \n \n2 \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WebKitPreferences.storageBlockingPolicy \n \n1 \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WebKitStorageBlockingPolicy \n \n1 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari BlockStoragePolicy \n \n2 \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WebKitPreferences.storageBlockingPolicy \n \n1 \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WebKitStorageBlockingPolicy \n \n1 \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences. \nRemediation: \nGraphical Method: \nPerform the following steps to set prevent cross-site tracking in Safari to enabled: \n1. Open Safari  \n2. Select Safari from the menu bar  \n \nInternal Only - General \n3. Select Settings  \n4. Select Privacy  \n5. Set Prevent cross-site tracking is enable \nTerminal Method: \nRun the following command to enable Safari to prevent cross-site tracking: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari BlockStoragePolicy -int 2 \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WebKitPreferences.storageBlockingPolicy -int 1 \n \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WebKitStorageBlockingPolicy -int 1 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari BlockStoragePolicy -int 2 \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WebKitPreferences.storageBlockingPolicy -int 1 \n \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WebKitStorageBlockingPolicy -int 1 \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute \nin the enterprise, only using the latest version of browsers and email clients \nprovided through the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General"
    },
    {
        "Title": "6.3.5 Audit Hide IP Address in Safari Setting (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "Public (Routable) IP addresses can be used to track people to their current location, \nincluding home and business addresses. While a valid IP address is necessary to load \nthe site, the valid address does not need to be provided to known trackers and should \nbe hidden.",
        "Rationale": "Trackers can correlate your visits through various applications, including websites, and \nare a threat to your privacy. \nImpact: \nWebsite address blocking through iCloud Private Relay may prevent some wanted \npages to load that use IP geolocation access controls. \nSome organizations use IP address access controls (ACLs), if your organization or \npartners are using IP address ACLs there will be unreachable web services if Apple \nhides the IP address.",
        "Audit": "Graphical Method: \nPerform the following steps to verify the setting for hiding IP addresses from trackers in \nSafari: \n1. Open Safari \n2. Select Safari from the menu bar \n3. Select Settings \n4. Select Privacy \n5. Verify that Hide IP address from trackers is set to your organization's \nrequirement \nTerminal Method: \nRun the following command to verify if IP addresses are hidden from trackers in Safari: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic \nThe output will be either 33422560 if hide IP address from trackers is disabled, \n33422564 if enabled from Trackers Only, or 33422572 if enabled from Trackers and \nWebsites. \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic \n \n130272 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read \n/Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic \n \n130276 \nIn the above example the firstuser has hide ip address from trackers disabled. \nSeconduser has it enabled. \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences.",
        "Remediation": "Graphical Method: \nPerform the following steps to set Safari whether or not to hide IP addresses from \ntrackers: \n1. Open Safari \n2. Select Safari from the menu bar \n3. Select Settings \n4. Select Privacy \n5. Set Hide IP address from trackers to your organization's requirements \nTerminal Method: \nRun the following command to enable or disable hiding IP addresses from trackers in \nSafari: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int <130272/130276> \n33422560 will set hide IP address from trackers to disabled. 33422564 will enable from \nTrackers Only, and 33422572 will enabled from Trackers and Websites. \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422560 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write \n/Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422564 \n \n$ /usr/bin/sudo -u thirduser /usr/bin/defaults write \n/Users/thirduser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422572 \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences.",
        "References": "1. https://support.apple.com/en-bn/guide/safari/sfri35610/16.0/mac/12.0",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute in \nthe enterprise, only using the latest version of browsers and email clients provided \nthrough the vendor. \n\u25cf \n\u25cf \n\u25cf \nv8 \n9.3 Maintain and Enforce Network-Based URL Filters \n \nEnforce and update network-based URL filters to limit an enterprise asset from \nconnecting to potentially malicious or unapproved websites. Example \nimplementations include category-based filtering, reputation-based filtering, or \nthrough the use of block lists. Enforce filters for all enterprise assets. \n \n\u25cf \n\u25cf \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.4 Maintain and Enforce Network-Based URL Filters \n \nEnforce network-based URL filters that limit a system's ability to connect to \nwebsites not approved by the organization. This filtering shall be enforced for each \nof the organization's systems, whether they are physically at an organization's \nfacilities or not. \n \n\u25cf \n\u25cf \n \n \nInternal Only - General \n6.3.6 Ensure Advertising Privacy Protection in Safari Is Enabled \n(Automated) \nProfile Applicability: \n\u2022  Level 1 \nDescription: \nApple provides a framework that allows advertisers to target Apple users and end-users \nwith advertisements. While many people prefer that when they see advertising it is \nrelevant to them and their interests, the detailed information that is data mining \ncollected, correlated, and available to advertisers in repositories is often disconcerting. \nThis information is valuable to both advertisers and attackers and has been used with \nother metadata to reveal users' identities. \nOrganizations should manage advertising settings on computers rather than allow users \nto configure the settings. \nApple Information \nAd tracking should be limited on 10.15 and prior. \nRationale: \nOrganizations should manage user privacy settings on managed devices to align with \norganizational policies and user data protection requirements. \nImpact: \nUses will see generic advertising rather than targeted advertising. Apple warns that this \nwill reduce the number of relevant ads. \nAudit: \nGraphical Method: \nPerform the following steps to verify that allow privacy-preserving measurement of ad \neffectiveness in Safari is enabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has \nWebKitPreferences.privateClickMeasurementEnabled set 1 \nTerminal Method: \nRun the following command to verify that a profile is installed that disables safe files \nfrom opening in Safari: \n \nInternal Only - General \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep \"WebKitPreferences.privateClickMeasurementEnabled\" | \n/usr/bin/tr -d ' ' \n \n\"WebKitPreferences.privateClickMeasurementEnabled\" = 1; \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only. \nRemediation: \nProfile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.Safari \n2. The key to include is WebKitPreferences.privateClickMeasurementEnabled \n3. The key must be set to: <true/> \nNote: A user can still uncheck this option in the GUI, but it remains on in the \nbackground and will show it enabled when re-launching Safari. \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify that allow privacy-preserving measurement of ad \neffectiveness in Safari is enabled: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select Privacy  \n5. Verify that Allow privacy-preserving measurement of ad effectiveness \nis enabled \nor \n1. Open System Settings  \n2. Select `Privacy & Security \n3. Select Profiles  \n4. Verify that an installed profile has \nWebKitPreferences.privateClickMeasurementEnabled set 1  \nTerminal Method: \n \nInternal Only - General \nRun the following command to verify that allow privacy-preserving measurement of ad \neffectiveness in Safari is not disabled: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WebKitPreferences.privateClickMeasurementEnabled \n \n1 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WebKitPreferences.privateClickMeasurementEnabled \n \n1 \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences. \nNote: The default setting is not auditable through the command line. Please turn off the \ncheck and re-enable when the GUI does not reflect the audited results, or run the \nTerminal command(s). \nRemediation: \nGraphical Method: \nPerform the following steps to set Safari to allow privacy-preserving measurement of ad \neffectiveness: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select Privacy  \n5. Set Allow privacy-preserving measurement of ad effectiveness to \nenabled \nTerminal Method: \nRun the following command to enable allow privacy-preserving measurement of ad \neffectiveness in Safari: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari WebKitPreferences.privateClickMeasurementEnabled -bool \ntrue \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari WebKitPreferences.privateClickMeasurementEnabled -bool true \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences. \nCIS Controls: \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute \nin the enterprise, only using the latest version of browsers and email clients \nprovided through the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.3.7 Ensure Show Full Website Address in Safari Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Attackers use websites with malicious or unwanted content to exploit the user or the \ncomputer. Part of the attack chain is to lure someone to load their content rather than \nthe desired content. In order to reduce the risk in interacting with unwanted content, the \nfull website address should always be displayed in Safari.",
        "Rationale": "Full visibility into what site is being visited is important for privacy and security. \nImpact: \nMany URLs are very long and complicated, particularly for internal content management \nsystems. Some complete URLS in the Smart Search Field may be difficult to parse.",
        "Audit": "Graphical Method: \nPerform the following steps to verify that showing full website addresses in Safari is \nenabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has ShowFullURLInSmartSearchField set 1 \nTerminal Method: \nRun the following command to verify that a profile is installed that disables safe files \nfrom opening in Safari: \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep ShowFullURLInSmartSearchField | /usr/bin/tr -d ' '               \n \nShowFullURLInSmartSearchField = 1;",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.Safari \n2. The key to include is ShowFullURLInSmartSearchField \n \nInternal Only - General \n3. The key must be set to: <true/>",
        "References": "1. https://apple.stackexchange.com/questions/371473/always-show-full-url-in-\nsafari-address-bar \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to verify that showing full website addresses in Safari is \nenabled: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select Advanced  \n5. Verify that Show full website address is enabled \nor \n1. Open System Preferences  \n2. Select `Privacy & Security \n3. Select Profiles  \n4. Verify that an installed profile has ShowFullURLInSmartSearchField set 1  \nTerminal Method: \nRun the following command to verify that showing full website addresses in Safari is not \ndisabled: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari ShowFullURLInSmartSearchField \n \n1 \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari ShowFullURLInSmartSearchField \n \n1 \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences. \n \nInternal Only - General \nRemediation: \nGraphical Method: \nPerform the following steps to set Safari to show full website addresses: \n1. Open Safari  \n2. Select Safari from the menu bar  \n3. Select Settings  \n4. Select Security  \n5. Set Show full website address to enabled \nTerminal Method: \nRun the following command to enable showing full website addresses in Safari: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write \n/Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference\ns/com.apple.Safari ShowFullURLInSmartSearchField -bool true \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write \n/Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences\n/com.apple.Safari ShowFullURLInSmartSearchField -bool true \nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in \nthe Security & Privacy pane in System Preferences.",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute \nin the enterprise, only using the latest version of browsers and email clients \nprovided through the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.3.8 Audit AutoFill (Manual)",
        "Profile Applicability": "\u2022  Level 2",
        "Description": "AutoFill capabilities in a Web Browser are a feature to allow a user to avoid re-typing \nthe same user information in every form that a user encounters. Part of the modern \ninternet consists of vendors establishing a seemingly close relationship with as many \nusers as possible to market to them, data-mine from them and sell their data to third-\nparty data aggregators. AutoFill can be a method for a user to share too much \ninformation with untrusted website owners. Many security professionals advise disabling \nautofill to reduce the risk of over-sharing. These security professionals appear to believe \nthat manual data entry is better, since completing the required forms are often the only \nmethod to connect to needed data. The best method for security is to ensure that the \ndata ready to be auto-filled is an acceptable risk to sites a user interacts with. Users \nmust review what data they accept the risk to share.",
        "Rationale": "Auditing and accepting information a user is willing to share prior to loading the blank \nform is the best way to manage risk. \nImpact: \nA user could overshare information based on trusting a site more than required.",
        "Audit": "Graphical Method: \nPerform the following steps to verify AutoFill in Safari: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has AutoFillFromAddressBook set to your \norganization's requirements \n5. Verify that an installed profile has AutoFillPasswords set to your organization's \nrequirements \n6. Verify that an installed profile has AutoFillCreditCardData set to your \norganization's requirements \n7. Verify that an installed profile has AutoFillMiscellaneousForms set to your \norganization's requirements \n \nInternal Only - General \nTerminal Method: \nRun the following command to verify that a profile is installed that sets autofill in Safari \nto your organization's requirements: \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep AutoFillFromAddressBook | /usr/bin/tr -d ' ' && /usr/bin/sudo \n/usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep \nAutoFillPasswords | /usr/bin/tr -d ' ' && /usr/bin/sudo \n/usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep \nAutoFillCreditCardData | /usr/bin/tr -d ' ' && /usr/bin/sudo \n/usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep \nAutoFillMiscellaneousForms | /usr/bin/tr -d ' ' \nThe output will be: \nAutoFillFromAddressBook= \nAutoFillPasswords= \nAutoFillCreditCardData= \nAutoFillMiscellaneousForms= \nEach key should be set to your organizations' requirements.",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.Safari \n2. The key to include is AutoFillFromAddressBook \n3. The key must be set to: <<true/false>/> \n4. The key to include is AutoFillPasswords \n5. The key must be set to: <<true/false>/> \n6. The key to include is AutoFillCreditCardData \n7. The key must be set to: <<true/false>/> \n8. The key to include is AutoFillMiscellaneousForms \n9. The key must be set to: <<true/false>/>",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute \nin the enterprise, only using the latest version of browsers and email clients \nprovided through the vendor. \n\u25cf \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.3.9 Audit Pop-up Windows (Manual)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Browser pop-up windows have long been one of the most annoying delivery \nmechanisms of unwanted web content. The content can be unwanted content, including \nNot Safe For Work, or malicious content relying on a user interacting with the pop-up. \nSafari has a built-in capability to disable pop-ups that should be enabled.",
        "Rationale": "Pop-up windows are almost always unwanted content and should be blocked. \nImpact: \nObsolete web content delivery systems may still rely on pop-ups on internal web \nportals. Specific domains can be set to be allowed if absolutely necessary. Web \nDevelopers should update content to reduce risk in the environment so that no pop-ups \nare allowed.",
        "Audit": "Graphical Method: \nPerform the following to verify that the pop-up settings in Safari: \n1. Open Safari \n2. Select Safari from the menu bar \n3. Select Settings \n4. Select Websites \n5. Select Pop-up Windows \n6. Verify the websites listed in Allow pop-up windows on the website below: \nare allowed according to your organization's requirements \n7. Verify that When visiting other websites is set to Block and Notify or \nBlock",
        "Remediation": "Graphical Method: \nPerform the following to configure pop-ups in Safari: \n1. Open Safari \n2. Select Safari from the menu bar \n3. Select Settings \n4. Select Websites \n \nInternal Only - General \n5. Select Pop-up Windows \n6. Set all websites to Block and Notify or Block, listed in Allow pop-up \nwindows on the website below:, or select Remove to remove a website \n7. Set that When visiting other websites is set to Block and Notify or \nBlock",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute \nin the enterprise, only using the latest version of browsers and email clients \nprovided through the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.3.10 Ensure Show Status Bar Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "The Status Bar in Safari shows the full URL of any link on hover. It protects the user \nfrom visiting sites where the domain has been obfuscated by allowing the user to review \nwhether the link points to an unexpected location.",
        "Rationale": "Showing the Status Bar allows the user to review full URL of hyperlinks. \nImpact: \nThe Status Bar is only visible at they very bottom of the Web page when a hyperlink is \nhovered over. There should be no noticeable impact.",
        "Audit": "Graphical Method: \nPerform the following to verify that the status bar in Safari is enabled: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has ShowOverlayStatusBar set to 1 \nTerminal Method: \nRun the following command to verify that a profile is installed that enables the status bar \nin Safari: \n$ /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | \n/usr/bin/grep ShowOverlayStatusBar | /usr/bin/tr -d ' '               \n \nShowOverlayStatusBar = 1;",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.Safari \n2. The key to include is ShowOverlayStatusBar \n3. The key must be set to: <true/> \n \nInternal Only - General",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n9.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure only fully supported browsers and email clients are allowed to execute \nin the enterprise, only using the latest version of browsers and email clients \nprovided through the vendor. \n\u25cf \n\u25cf \n\u25cf \nv7 \n7.1 Ensure Use of Only Fully Supported Browsers and \nEmail Clients \n \nEnsure that only fully supported web browsers and email clients are allowed to \nexecute in the organization, ideally only using the latest version of the browsers \nand email clients provided by the vendor. \n\u25cf \n\u25cf \n\u25cf"
    },
    {
        "Title": "6.4 Terminal"
    },
    {
        "Title": "6.4.1 Ensure Secure Keyboard Entry Terminal.app Is Enabled (Automated)",
        "Profile Applicability": "\u2022  Level 1",
        "Description": "Secure Keyboard Entry prevents other applications on the system and/or network from \ndetecting and recording what is typed into Terminal. Unauthorized applications and \nmalicious code could intercept keystrokes entered in the Terminal.",
        "Rationale": "Enabling Secure Keyboard Entry minimizes the risk of a key logger detecting what is \nentered in Terminal. \nImpact: \nEnabling this in Terminal would prevent an application that is otherwise validly \nintercepting keyboard input from intercepting that input in Terminal.app. This could \nimpact productivity tools.",
        "Audit": "Graphical Method: \nPerform the following steps to ensure that keyboard entries are secure in Terminal: \n1. Open System Settings \n2. Select Privacy & Security \n3. Select Profiles \n4. Verify that an installed profile has SecureKeyboardEntry is set to 1 \nTerminal Method: \nRun the following command to verify that a profile is installed that enables secure \nkeyboard entry in Terminal: \n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.Terminal')\\ \n.objectForKey('SecureKeyboardEntry').js \nEOS \n \ntrue \nNote: Since the profile method sets a system-wide setting, the individual user audit \nand/or remediation has been removed. To be compliant, a profile must be installed for \nthis recommendation. We have included the individual user information in the additional \ninformation section for reference only. \n \nInternal Only - General",
        "Remediation": "Profile Method: \nCreate or edit a configuration profile with the following information: \n1. The PayloadType string is com.apple.Terminal \n2. The key to include is SecureKeyboardEntry \n3. The key must be set to <true/> \nNote: Since the profile method sets a system-wide setting and not a user-level one, the \nprofile method is the preferred method. It is always better to set system-wide than per \nuser.",
        "References": "1. https://support.apple.com/en-ca/guide/terminal/trml109/mac \n2. https://developer.apple.com/library/archive/technotes/tn2150/_index.html \n3. https://krypted.com/mac-os-x/secure-keyboard-entry-on-macos/ \nAdditional Information: \nTo verify individual users: \nAudit: \nGraphical Method: \nPerform the following steps to ensure that keyboard entries are secure in Terminal: \n1. Open the Applications folder \n2. Open the Utilities folder \n3. Open Terminal  \n4. Select Terminal in the Menu Bar \n5. Verify that Secure Keyboard Entry is enabled \nTerminal Method: \nFor each user, run the following command to verify that keyboard entries in Terminal \nare secured: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults read -app Terminal \nSecureKeyboardEntry \n \n1 \nexample: \n \nInternal Only - General \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults read -app Terminal \nSecureKeyboardEntry  \n \n0 \n \n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read -app Terminal \nSecureKeyboardEntry  \n \n1 \nIn the above example the user seconduser is compliant, and the user firstuser is not \ncompliant. \nRemediation: \nGraphical Method: \nPerform the following steps to enable secure keyboard entries in Terminal: \n1. Open the Applications folder \n2. Open the Utilities folder \n3. Open Terminal  \n4. Select Terminal in the Menu Bar \n5. Set Secure Keyboard Entry to enabled \nTerminal Method: \nRun the following command to ensure keyboard entries are secure in Terminal: \n$ /usr/bin/sudo -u <username> /usr/bin/defaults write -app Terminal \nSecureKeyboardEntry -bool true \nexample: \n$ /usr/bin/sudo -u firstuser /usr/bin/defaults write -app Terminal \nSecureKeyboardEntry -bool true",
        "CIS Control": "Controls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv8 \n4.8 Uninstall or Disable Unnecessary Services on \nEnterprise Assets and Software \n \nUninstall or disable unnecessary services on enterprise assets and software, \nsuch as an unused file sharing service, web application module, or service \nfunction. \n \n\u25cf \n\u25cf \nv7 \n4.1 Maintain Inventory of Administrative Accounts \n \nUse automated tools to inventory all administrative accounts, including \ndomain and local accounts, to ensure that only authorized individuals have \nelevated privileges. \n \n\u25cf \n\u25cf \n \nInternal Only - General \nControls \nVersion \nControl \nIG 1 IG 2 IG 3 \nv7 \n5.1 Establish Secure Configurations \n \nMaintain documented, standard security configuration standards for all \nauthorized operating systems and software. \n\u25cf \n\u25cf \n\u25cf \nv7 \n9.2 Ensure Only Approved Ports, Protocols and Services \nAre Running \n \nEnsure that only network ports, protocols, and services listening on a system \nwith validated business needs, are running on each system. \n \n\u25cf \n\u25cf"
    },
    {
        "Title": "Appendix: Summary Table"
    },
    {
        "Title": "Appendix: CIS Controls v7 IG 1 Mapped Recommendations"
    },
    {
        "Title": "Appendix: CIS Controls v7 IG 2 Mapped Recommendations"
    },
    {
        "Title": "Appendix: CIS Controls v7 IG 3 Mapped Recommendations"
    },
    {
        "Title": "Appendix: CIS Controls v7 Unmapped Recommendations"
    },
    {
        "Title": "Appendix: CIS Controls v8 IG 1 Mapped Recommendations"
    },
    {
        "Title": "Appendix: CIS Controls v8 IG 2 Mapped Recommendations"
    },
    {
        "Title": "Appendix: CIS Controls v8 IG 3 Mapped Recommendations"
    },
    {
        "Title": "Appendix: CIS Controls v8 Unmapped Recommendations"
    },
    {
        "Title": "Appendix: Change History"
    }
]